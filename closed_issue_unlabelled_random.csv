url,title,body
https://api.github.com/repos/OfficeDev/office-js/issues/1732,Outlook: forMSGraphAccess not work for OfficeRuntime.auth.getAccessToken api,"when i execute this demo code in Outlook add-in:
```
OfficeRuntime.auth.getAccessToken({forMSGraphAccess: true}).then( function(result) {console.log(result);});
```
i can get jwt token success.
But in fact, my app was not granted by admin.
when i try to use this jwt token to get access_token, by call this api:
```
https://login.microsoftonline.com/common/oauth2/v2.0/token/
client_id: my app's client id
client_secret: my app's client secret
assertion: the jwt token from OfficeRuntime.auth.getAccessToken({forMSGraphAccess: true})
requested_token_use: on_behalf_of
grant_type: urn:ietf:params:oauth:grant-type:jwt-bearer
scope: User.Read
```
i get an error for not granted.
```
{
    ""error"": ""invalid_grant"",
    ""error_description"": ""AADSTS65001: The user or administrator has not consented to use the application with ID 'ab71e945-f7b8-4d5e-84ce-f631e9ea7e52' named 'maiken-test111'. Send an interactive authorization request for this user and resource.\r\nTrace ID: 23effd36-b8da-4a49-8589-e15f0660a100\r\nCorrelation ID: 5caece2f-b847-4c70-be5b-d5ef101abc5b\r\nTimestamp: 2021-03-17 13:07:59Z"",
    ""error_codes"": [
        65001
    ],
    ""timestamp"": ""2021-03-17 13:07:59Z"",
    ""trace_id"": ""23effd36-b8da-4a49-8589-e15f0660a100"",
    ""correlation_id"": ""5caece2f-b847-4c70-be5b-d5ef101abc5b"",
    ""suberror"": ""consent_required""
}
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1723,Get email addresses of distribution list in Outlook,"Hi,

We want to validate recipients in an Outlook Add-in, but what is the best way to do that? The documentation is not clear on how to do that with OfficeJS or am I missing something?

Any help would be greatly appreciated!

Regards,
Rick"
https://api.github.com/repos/OfficeDev/office-js/issues/1721,"item.categories.addAsync gives an error ""The operation is not supported"" in compose mode","Office 365 online throws an error in compose mode although according to the [documentation](https://docs.microsoft.com/en-us/javascript/api/outlook/office.mastercategories?view=outlook-js-preview#addAsync_categories__options__callback_) it should work;

![image](https://user-images.githubusercontent.com/12011141/111293185-0bea1180-865a-11eb-87cf-3f8137c97784.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1691,How to detect if a taskpane is pinned?,"Hi,

Is there a way to detect whether a user has pinned the task pane in both compose and read mode?
And if there is no 'real' way, are there suggestions on how to detect this as good as possible?

Thanks!

Regards,
Rick
"
https://api.github.com/repos/OfficeDev/office-js/issues/1649,Outlook 2016 Reporting Incorrect Dialog API/Mailbox Requirement Set Support,"Calling isSetSupported(""DialogApi"", 1.1) or isSetSupported(""Mailbox, 1.4) in Outlook 2016 is reporting false, even though the Dialog API works in that environment as it supports Mailbox API 1.4.

## Expected Behavior
Office.context.requirements.isSetSupported(""DialogApi"", 1.1) and Office.context.requirements.isSetSupported(""Mailbox"", 1.4) should return true in Outlook 2016.

## Current Behavior
Office.context.requirements.isSetSupported(""DialogApi"", 1.1)  and Office.context.requirements.isSetSupported(""Mailbox"", 1.4) returns false in Outlook 2016.

## Steps to Reproduce, or Live Example
The example from https://github.com/OfficeDev/office-js/issues/1476 can be used here. Use it in an Outlook 2016 environment.
Additional details:
* Run the add-in in Outlook 2016
* Click the Run button
* Inspect the reported values for the various requirement sets support

## Context
Add-in is trying to check if we can show a prompt to the user and if not then we go a default path. In this case it is falling back to the default path when it could show the prompt instead.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: Windows Outlook 2016 32-bit and 64-bit.
* Host [Excel, Word, PowerPoint, etc.]: Outlook 2016
* Office version number: Outlook 2016, 16.0.5113.1000
* Operating System: Windows

## Additional Information

I've checked that the osfclient-x-none updates are installed and they are, ([here](https://support.microsoft.com/help/4475580) and [here](https://support.microsoft.com/help/4464534)).

Note dialogs do work on the environment, just this check if they are supported is failing."
https://api.github.com/repos/OfficeDev/office-js/issues/1641,Read current mail body in FunctionFile? ,"I have followed the small tutorial [here](https://docs.microsoft.com/en-us/office/dev/add-ins/quickstarts/outlook-quickstart?tabs=yeomangenerator) and I have the following question:

How can I read the current mail body in the FunctionFile function?

I have the following simple config: 

**Manifest**:
![image](https://user-images.githubusercontent.com/5080185/107900891-2b750980-6ef7-11eb-8bce-5af276820bc9.png)

**Failing action function (reading result.value throws a silent error, but works fine in the taskpane.js)**:
![image](https://user-images.githubusercontent.com/5080185/107900993-6ecf7800-6ef7-11eb-9c39-915226f408f3.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1637,"inserting HTML into the body of the message, styling changes for the following paragraph","<!--- Provide a general summary of the issue in the Title above -->
when inserting HTML into the body of the message (via the Outlook.js API) the styling changes for the following paragraph

## Expected Behavior
same formating for all new content/text

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
when inserting HTML into the body of a mail message (via the Outlook.js API) the styling changes for the following paragraph

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example:

https://user-images.githubusercontent.com/78954643/107750046-bdc0b600-6d1b-11eb-8e44-d619ef6021df.mp4




<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
Outlook 365 Client installation on newest Windows 10 build on a surface book. This is reproducible on other clients as well


## Useful logs
 see attached video
"
https://api.github.com/repos/OfficeDev/office-js/issues/1636,Reply/ReplyAll/Forward has to provide option to open in active window for the New Mac UI,"Current functions Reply/Reply All/Forward are opened Dialog pop-up instead of opening in an active window based on a new idea of New Mac UI.

Will be grate to have some additional Boolean parameter ""Is Dialog"" for _displayReplyAllFormAsync or displayReplyAllForm_ function to have an option stay in current window without opening via pop-up.
"
https://api.github.com/repos/OfficeDev/office-js/issues/1627,Office.js causes build failure for Outlook 2016 Addin,"Office.js fails to load https://telemetryservice.firstpartyapps.oaspapps.com/telemetryservice/telemetryproxy.html the server responded with a status of 404. I do not need this for my app.

I am calling office.js from CDN in header of HTML, then initializing in main.ts file: 

`<script src=""https://appsforoffice.microsoft.com/lib/1/hosted/Office.js"" type=""text/javascript""></script>`

```
  Office.initialize = function () {
    const platform = platformBrowserDynamic();
    platform.bootstrapModule(AppModule).catch(err => console.log(err));
  };
```
It is failing the build of my web app and therefore I can't deploy it as an Outlook 2016 Addin because the manifest file is pointing to my web app. This is currently preventing from creating an Addin for Outlook 2016 desktop using javascript/typescript.

## Expected Behavior
Office.js should load all files it references (in this case the telemetryservice) OR bypass failing service.

## Current Behavior
Web app build fails when office.js is loaded because it does not get a response from telemetry service.

## Steps to Reproduce, or Live Example
1. Generate an office addin using Yo office.
2. Select to generate an Angular app
3. Load office.js into header of index.html
4. Initialize office in main.ts with app boot strap
5. Attempt to perform build and observe build failure.

## Context
I am developing an Addin for Outlook 2016 desktop for a private company. I have generated app using yo office then loading office.js to try and call outlook methods, but office.js calls a telemetry service that fails to load and thus i am not able to build and deploy the app that the manefest points to. If I comment out office.js then i can build my app and the Addin can be loaded and viewed in the task pane.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Windows 10
* Outlook 2016 Desktop
* Chrome and Edge

## Useful logs
Failed to load resource: the server responded with a status of 404 ()  
   Request URL: https://telemetryservice.firstpartyapps.oaspapps.com/telemetryservice/telemetryproxy.html
"
https://api.github.com/repos/OfficeDev/office-js/issues/1624,"When inserting content to appointment body, content does not show up immediately.","
It is kind of slow when inserting content to appointment body with Office.context.mailbox.item.body.setAsync(). Is this a known issue as I see there is a tip ""Teams meeting details will be added after sending the invitation"" in the Teams Add-In."
https://api.github.com/repos/OfficeDev/office-js/issues/1623,Mac new Outlook client not support: Office.context.mailbox.item.enhancedLocation.addAsync,"Mac **new** Outlook client, which is use the new UI for Mac.
version: 16.45(21011103)
code segment:
```
var locations = [
  {
    id: ""Contoso"",
    type: Office.MailboxEnums.LocationType.Custom
  },
  {
    id: ""room500@test.com"",
    type: Office.MailboxEnums.LocationType.Room
  }
];
Office.context.mailbox.item.enhancedLocation.addAsync(locations, (result) => {
  console.log(result);
});
```
error message:
Object

error: Object

code: 7000

message: ""You don't have sufficient permissions for this action.""

name: ""Permission Denied""

![image](https://user-images.githubusercontent.com/1878089/106227435-212eec00-6224-11eb-918e-6be6e477e73d.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1619,Add-in fails to load on Outlook iOS,"We have an add-in works fine on desktop Outlook and OWA. When we enabled it for mobile it fails to load on iOS Outlook app. 
Is there way to inspect logs for the add-in that is loading on iOS Outlook app? 

Additional information:
1) Since the add-ins are web apps essentially, we tried loading it in Safari iOS and it works fine.
2) Cookies are not the cause. 
3) We are unable to route the traffic thru fiddler as Outlook app does not trust fiddler certs. 

Environment:
iOS v14.3
iPhone 8"
https://api.github.com/repos/OfficeDev/office-js/issues/1615,Outlook Windows Desktop `appendOnSendAsync()` not appending to draft messages and stripping text.,"## Expected Behavior
Replying to an inline message `appendOnSendAsync()` that is not a draft appends whatever text I want. Opening an inline message that is a draft `appendOnSendAsync()` allows me to add new text, continue composing and insert whatever text I want. 

## Current Behavior
Replying to an inline message `appendOnSendAsync()` that is not a draft appends whatever text I want. Opening an inline message that is a draft `appendOnSendAsync()` doesn't allow me to finish composing a message, instead it sends the text that was originally in the draft, as shown below, and doesn't append the text in `appendOnSendAsync()`, even though `appendOnSendAync()` returns a successful resolution.

## Steps to Reproduce
 *** Note, Logs look the same but they are two separate screenshots ***

Working:
https://user-images.githubusercontent.com/61157542/105898469-76ca8500-5fe7-11eb-92f3-5f6ef012598a.mp4
Logs:
![Screen Shot 2021-01-26 at 3 00 32 PM](https://user-images.githubusercontent.com/61157542/105898579-9cf02500-5fe7-11eb-8edd-02e262a46738.png)

Draft Bug:
https://user-images.githubusercontent.com/61157542/105898477-79c57580-5fe7-11eb-8f69-5f252e8e5a41.mp4
Logs:
![Screen Shot 2021-01-26 at 3 00 36 PM](https://user-images.githubusercontent.com/61157542/105898603-a2e60600-5fe7-11eb-85ba-f053297f7028.png)

As you can see the async returns with a successful promise, but with the text and new content missing :/
![Screen Shot 2021-01-26 at 3 10 41 PM](https://user-images.githubusercontent.com/61157542/105899439-ab8b0c00-5fe8-11eb-9b43-cfe36d4dac78.png)

## Context
Here is the code I'm running:
```
public appendOnSend(html: string): Promise<Office.AsyncResult<void>> {
        return new Promise<Office.AsyncResult<void>>((resolve, reject) => {
            // We actually are grabbing the old body somehow?
            Office.context.mailbox.item.body.getAsync(
                ""text"",
                { asyncContext: ""This is passed to the callback"" },
                function callback(result) {
                    console.log(""Here is the message it has grabbed"");
                    console.log(result.value);
                });
            return new Promise<Office.AsyncResult<void>>((resolve, reject) => {
                console.log(""Calling 'appendOnSendAsync"");
                (Office.context.mailbox.item.body as any).appendOnSendAsync(
                    ""For Microsoft To See I Am Missing!"",
                    { coercionType: Office.CoercionType.Html },
                    (asyncResult) => {
                        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                            console.log(""** Office.AsyncResultStatus.Succeeded **"");
                            resolve(asyncResult);
                        } else if (asyncResult.error) {
                            reject(asyncResult.error);
                        } else {
                            reject(asyncResult);
                        }
                    }
                );
            });
        });
```

## My Environment
Microsoft Outlook Windows Desktop, Version 2102 (Build 13714.20000)


Thanks in advance, please let me know if you need anything else!
"
https://api.github.com/repos/OfficeDev/office-js/issues/1600,Function saveAsync does not work after removing item,"**Issue:**
Function saveAsync does not work after removing Email and throw the error:
{
   ""code"": 9021,
   ""message"": ""Connection error occurred while trying to save the item on the server."",
   ""name"": ""SaveError""
}

**Steps to Reproduce**
1. Open add-in in compose mode 
2. call `saveAsync` - Email will be saved as draft item.
3. remove email
4. call again `saveAsync`
5. call fails with following error above

In order to remove item we are using the code below:
  ```
  var deleteRequest =
                        '<?xml version=""1.0"" encoding=""utf-8""?>' +
                        '<soap:Envelope xmlns:xsi=""https://www.w3.org/2001/XMLSchema-instance""' +
                        '               xmlns:xsd=""https://www.w3.org/2001/XMLSchema""' +
                        '               xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""' +
                        '               xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">' +
                        '  <soap:Header>' +
                        '    <RequestServerVersion Version=""Exchange2013"" xmlns=""http://schemas.microsoft.com/exchange/services/2006/types"" soap:mustUnderstand=""0"" />' +
                        '  </soap:Header>' +
                        '<soap:Body>' +
                        '<MoveItem xmlns=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">' +
                        '<ToFolderId>' +
                        '<t:DistinguishedFolderId Id=""deleteditems""/>' +
                        '</ToFolderId>' +
                        '<ItemIds>' +
                        '<t:ItemId Id=""' + data.MsgId + '"" ChangeKey=""' + changeKey + '""/>' +
                        '</ItemIds>' +
                        '</MoveItem>' +
                        '</soap:Body>' +
                        '</soap:Envelope>';
                    var mailbox = Office.context.mailbox;
                    mailbox.makeEwsRequestAsync(deleteRequest, deleteMessageCallback);
```


**Environment**
Platform :Office Desktop
Office version number: 365 MSO (16.0.13530.20132) 64-bit
Operating System: windows 10
"
https://api.github.com/repos/OfficeDev/office-js/issues/1594,[Outlook] OfficeRuntime.auth.getAccessToken Token does not contain scopes named in manifest.xml,"When I try to aquire a token for my current user with the following function:
  ```
  OfficeRuntime.auth.getAccessToken({
        forMSGraphAccess: true
    })
```
the token does not contain the scopes I defined in the manifest.xml.
   ```
 <WebApplicationInfo>
      <Id>${API_ID}</Id>
      <Resource>api://${FULL_CLIENT_PATH}/${API_ID}</Resource>
      <Scopes>
        <Scope>Mail.Read</Scope>
        <Scope>offline_access</Scope>
        <Scope>openid</Scope>
        <Scope>profile</Scope>
        <Scope>User.Read</Scope>
      </Scopes>
    </WebApplicationInfo>
```
Stackoverflow Link: https://stackoverflow.com/questions/65721173/outlook-getaccesstoken-does-not-return-scopes-declared-in-manifest
## Expected Behavior
I expect a property in the decoded JWT 'scopes' that holds the scopes I defined in the manifest, so I can use the permissions to request the graph.

## Current Behavior
The scopes are not in the token.

## Steps to Reproduce, or Live Example
- Create an outlook add-in with yeoman.
- Register your App
- Invoke OfficeRuntime.auth.getAccessToken
- Decode the resulting token with jwt.io

## Context
I am trying to get the selected mail with the backend of my add-in via MS-Graph.

## Your Environment
Chrome
Outlook 365 Web
React
Typescript
ASP.NET Core Web API as backend

## Useful logs
Exception from Microsoft.Graph.GraphServiceClient:
```
Microsoft.Graph.ServiceException
  HResult=0x80131500
  Nachricht = Code: NoPermissionsInAccessToken
Message: The token contains no permissions, or permissions can not be understood.
Inner error:
	AdditionalData:
	oAuthEventOperationId: 9f6ca11c-5309-4587-9172-0b85c6d33929
	oAuthEventcV: 9nG7+owAhke1LWqH3d9RxQ.1
	errorUrl: https://aka.ms/autherrors#error-InvalidGrant
	requestId: 56c8d693-4c48-4f43-bf0d-fba7eae2f4cb
	date: 2021-01-14T15:06:33
ClientRequestId: 56c8d693-4c48-4f43-bf0d-fba7eae2f4cb

  Quelle = Microsoft.Graph.Core
  Stapelüberwachung:
   at Microsoft.Graph.HttpProvider.<SendAsync>d__18.MoveNext()
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/1588,Outlook Exchange Server Environment for Testing,"Hi Team,
Is there any exchange server environment managed by Microsoft where we can perform functional and performance testing on different versions of exchange server.

@office-js @outlook-web-addins"
https://api.github.com/repos/OfficeDev/office-js/issues/1587,Outlook Add-in support for on-premise exchange server,"In our add-in we will be using Outlook Rest API to create and fetch events from the user’s mailbox. It is working fine for us for the mailboxes hosted in cloud. But we also need to add support for On-Premise exchange servers and there is no specific documentation details for the same.
As per the link https://techcommunity.microsoft.com/t5/exchange-team-blog/on-premises-architectural-requirements-for-the-rest-api/ba-p/605609, we can use Outlook Rest APIs with exchange server but as mentioned on https://support.microsoft.com/en-in/help/4462988/rest-api-is-not-yet-supported-for-this-mailbox-error , Rest API are not supported if mailbox is not on cloud.
Outlook Rest API documentation https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/use-outlook-rest-api also not mentioning anything about On-Premise Exchange Server. So we are planning to Exchange Webservice as a fallback mechanism but when we are using ews-java-api along with callback token retrieved from Office.context.mailbox.getCallbackTokenAsync({ isRest: false } that also gives me error ""The requested web method is unavailable to this caller or application.""

@office-js @outlook-web-addins
"
https://api.github.com/repos/OfficeDev/office-js/issues/1583,"Very general error when starting an Outlook add-in - ""A device attached to the system is not functioning""","## Expected Behavior
I'd expect my task pane add-in to start correctly and redirect me to a login page

## Current Behavior
I get a blank page on opening the add-in pane. On checking the console logs I get a generic error after some amount of my javascript code runs.
(All systems are localised as nl-NL).
![image](https://user-images.githubusercontent.com/8717/104191262-337fec00-5415-11eb-96a6-b909aa709a19.png)
The english translation of the error is: 
-2147024865 	ERROR_GEN_FAILURE 	A device attached to the system is not functioning

There are no error codes in the network tab, and the content of each request is what I expect it to be.

This doesn't occur on every user's device, but a significant number. I can't see anything relevant in event viewer.

The pages for the add-in load correctly in Internet Explorer on the same device. (the add-in is hosted on Internet Explorer in outlook on these desktops)

## Context
The add-in site is hosted on the same network as the client PCs, there are no connectivity issues and all certificates are trusted.
Having supported running this same add-in on multiple different networks this is my first time seeing this error, and I can find no mentions of it in this repository.
I realise this may not be directly related to this library, but any pointer of where else to report this/get more information would be very helpful.
Compatibility mode is disabled, and there is no enterprise site list in operation.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop (mixed citrix and full desktop, issue occurs on both)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office 365 enterprise (awaiting a response for specific version number)
* Operating System: Windows 10

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [x] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1558,"MS login window comes up in browser, not needed, only in Outlook Client Application","I have an outlook add-in and, when it's loaded it should read the token via the MSAL library (updated at version 1.4.4.) and in case it's not found load a sign-in button, and after click an authentication form appears in outlook app. 
It's happening , but at the load of add-in (so not at click of button) another thing not needed is happening: a browser with the authentication page comes out. 

In outlook web it's not happening; only in client app Outlook version 2008, build 13127.20638, on Windows 10. 

Any hint about will be appreciated. 
Thank you so much!"
https://api.github.com/repos/OfficeDev/office-js/issues/1551,Microsoft Publish Failure for Outlook Addin,"Hi
I have developed an Outlook for Windows Add-in using Office.js. 
The add-in has functionality ​to assist users in scheduling and  starting a meeting in Microsoft Outlook quickly. Add-in has settings UI so that user can save its room/pin/username for meeting. There is a custom tab which opens new appointment window with pre-populated text.
I have submitted it on Microsoft Store for publish. But It fails on Microsoft Validation. They has reported the reason of failure:
**""Your offer demostrate insufficient interaction with our service in Message Read mode. Please consider adding functionality which either reads information from or writes information to the Office Client.""**

Please help me to understand and solve this issue. Looking forward for response in this regard. Thanks!"
https://api.github.com/repos/OfficeDev/office-js/issues/1550,[Outlook] Installing add-in thru URL fails but works fine when I use the downloaded xml,"When I use the option to install the add-in via the url it throws an error. But when I down the manifest.xml  and tried to install it works fine.
The add-in for Outlook and not part of the store. It is a managed/centrally deployed add-in. 

manifest url: https://<domain>/manfiest or https://<domain>/manfiest.xml

Exception when using the URL:
{""anonUID"":"""",""BillingRegion"":""US"",""Browser"":""Chrome87"",""CID"":"""",""HexPUID"":"""",""SourceClient"":""WAC_Outlook"",""OfficeVersion"":""16.2130.0.9999"",""ContentCulture"":""en-US"",""CorrelationID"":""c61657ed-c7d0-4de6-b730-b9a042610e0a"",""Domain"":""store.office.com"",""GateHashes"":""282052946,1039894021,86226609"",""GeographicRegion"":""US"",""OperatingSystem"":""WindowsNT10Dot0"",""ReferralUrl"":"""",""ServiceScope"":""OutlookStoreService"",""StateScope"":""OutlookStore"",""UICulture"":""en-US"",""UserAgent"":""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"",""User_HashID"":""2_holX5056EbkwZqVy6xc6SqULAnrUlIyzKSTh8g65bkI="",""VerboseEnabled"":""False"",""OmexSession"":""7d09f819-8f9d-4ea8-87c4-51c3e5642415"",""NecessaryServiceDataEventTypes"":[""ONREADY"",""ONCLICK"",""INCLIENTADDINSTATECHANGE"",""PERFORMANCE"",""TIMEMETRIC""],""PageUrl"":""https://store.office.com/gyro/client?client=WAC_Outlook&cv=16.2130.0.9999&ui=en-US&rs=en-US&timestamp=1607977266370&ep=ma&exchver=15.20.3654.25&privateenabled=true&cb=x&ClientSessionId=8e1bbbb3-ac69-ec2f-db10-26ac456ea7b7&userPuid=0&gates=Marketplace.Outlook.Pin.Addin.Options,Marketplace.Outlook.Pin.Addin.Calendar.Options#/?Category=MyAddIns&OrderBy=None%20Desc"",""BTS"":""2020-12-14T20:36:57.577Z"",""EventType"":""Error message from Exchange service An internal server error occurred. The operation failed., No such host is known""}

The manifest validation seems to be fine:
![MicrosoftTeams-image](https://user-images.githubusercontent.com/52792802/102134140-25de4300-3e24-11eb-8e58-72499e3ca8e4.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1549,A problem occurred while trying to access this add-in.,"Hello,

since I installed the Microsoft Edge DevTools (Preview) last night I can't access my add-in in Outlook. I get the following error message: ""A problem occurred while trying to access this add-in."".

However, it works fine in Outlook Web. And also on my old laptop the add-in still works.

Does anyone else have any ideas perhaps? (On my old laptop it works fine in Outlook. I have already uninstalled and reinstalled Outlook).

Many greetings , Ines"
https://api.github.com/repos/OfficeDev/office-js/issues/1541,setSelectedDataAsync with Html coercion does not work on Outlook on Big Sur,"Trying to add text or HTML to a mail body with `Office.context.mailbox.item.body.setSelectedDataAsync` function does not work reporting that a generic internal error occurred in Outlook for Mac on Big Sur after a non-deterministic number of insertions.

## Expected Behavior
The content should be inserted in the body without any issue.

## Current Behavior
Calling `setSelectedDataAsync` multiple times with Html coercion rises an internal error after a non-determistic number of calls of such a function. After this event happens, the next calls of `setSelectedDataAsync` results into the generic internal error too. The content is not inserted in the body.

## Steps to Reproduce, or Live Example

1. Clone `https://github.com/fusiled/outlook-addin-setselecteddatasync-test-bug`
2. Install the dependencies with npm: `npm install`
3. Run the dev server: `npm run dev-server`
4. Import the local manifest of the add-in
5. Compose a new message on outlook
6. Sideload the installed addin (more specifically `Contoso Taks Pane Add-in -> Show Taskpane`)
7. Click the `Run` button at the bottom of the sidepane multiple times until the text is not added anymore to the body
8. At some point, the content is not going to be added anymore to the body 

## Context
Just adding Html content to the mail body. Also adding text with Html coercion generates the same issue. The following snippet causes the issue:

```
const variabile = renderToStaticMarkup(<span>123456</span>);
Office.context.mailbox.item.body.setSelectedDataAsync(variabile,
        {coercionType: Office.CoercionType.Html},
        (asyncResult) => {
            if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                console.log(""Error during insertion"", asyncResult.error.message);
            }}
);
```

## Your Environment

- Outlook on Mac Version 16.45 (20120702)
- MacOS Big Sur Version 11.0.1

Tested on two different MacBooks.

## Useful logs
Not anything special. Just run an example on Mac Big Sur and the issue should happen.
"
https://api.github.com/repos/OfficeDev/office-js/issues/1534,Outlook Clients Do Not Follow Manifest Locale-based values.,"<!--- Provide a general summary of the issue in the Title above -->
Outlook clients, unlike OWA, does not display the right locale-based text values.

## Expected Behavior
<!--- Tell us what you expected to happen -->
Outlook clients must display the right locale-based text.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The current behavior is that Outlook clients do not display the locale-based text.
Instead it displays the default value.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
1. Download and install the evernote addin. This evernote addin has a [French (""fr"") value](https://imgur.com/a/2LG6aNB) for the tool tip text.
2. Once downloaded, hover over the addin name on your addin list and see the French tooltip text. Like in [this image](https://imgur.com/a/qdK85qP).
3. Now open your Outlook client and set the default language to French. 
4. Once the client is in French, hover over the Evernote Addin Button. 
5. The tooltip text for the addin displays the ""default"" value and not the French value. This bug is shown [here](https://imgur.com/a/jITkR5t).

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Windows Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2011 (More details [here](https://imgur.com/a/6AbuJnG).) 
* Operating System: Windows 10
* Browser (if using Office on the web): _____

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1528,Outlook always resets the cursor position after handling a drag&drop email attachment.,"<!--- Provide a general summary of the issue in the Title above -->
We have an Outlook Add-in that can handle attachments by uploading them to a secure storage location and inserting a Url into the body of the email that can be used to access the file.

Our problem is that when the user adds attachments using drag and drop the cursor is being reset so that it is just before the inserted Url rather than after it.
## Expected Behavior
<!--- Tell us what you expected to happen -->
I expect that the insert cursor will be where I placed it just after the inserted Url as shown in this screen shot taken after an attachment was added with the ""Attach File"" button:

![After-button-attachment](https://user-images.githubusercontent.com/22990021/100686626-8ef98d00-3333-11eb-90f5-f96a32a90529.PNG)

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
The cursor is being reset so that it is just before the inserted Url rather than after it as shown in this screen shot taken after an attachment was added by dragging it into the email:
![After-DragAndDrop-attachment](https://user-images.githubusercontent.com/22990021/100686828-f8799b80-3333-11eb-9a16-0982a1a4c383.PNG)

<!--- If suggesting a change/improvement, explain the difference from current behavior -->


## Steps to Reproduce, or Live Example

<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
Here is the code to create a simple Add-in to reproduce this problem:
[ThisAddIn.zip](https://github.com/OfficeDev/office-js/files/5619794/ThisAddIn.zip)


<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
This results in frustrated users because they always have to manually reposition the text insert location after dragging an attachment into their email.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform :PC desktop
* Host : Outlook Version 2010 (Build 13228.20408)
* Operating System: win10

"
https://api.github.com/repos/OfficeDev/office-js/issues/1525,window.open from add-in in Windows Outlook using WebView1 returns null window,"Calling window.open from an add-in on versions of Windows Outlook that use WebView1 (old Edge, specifically Office for 365 16.0.13328.20350) is seen to return null rather than a reference to the newly opened window. The new window is opened however no reference is returned to it. Further the new window will have window.opener set to undefined and its window.parent will refer to itself, effectively meaning it is not possible to communicate between the two windows.

This does not happen if window.open is invoked from JavaScript console of a browser. Just seeing it occur from within the add-in JavaScript context in this WebView1 Windows Outlook. Does not occur on Outlook Mac, in OWA or on Outlook using WebView2.

e.g.
```
var openedWindow = window.open('/samplePage', '_blank');
```
* openedWindow will be null rather than a reference to the window that was opened.

I've checked for various pop-up settings etc that might be blocking this but haven't got any to work. Tried putting all involved sites into Trusted Sites or Internet Sites with Protected mode On or Off but no difference.

## Expected Behavior
window.open should return reference to window that was created when called from inside the add-in.

## Current Behavior
window.open returns null when called from inside the add-in on Outlookfor 365 using WebView1.

## Steps to Reproduce, or Live Example
- Create a simple ExecuteFunction add-in that on launch opens a window using window.open.
- Add-in should store the result of window.open so it can then be examined.
-- Examine either using a script debugger to attach to the code at this point or write a message to the Outlook status bar indicating if window.open result was null or not.

## Context
I want to be able to open a window that i can post messages to from my add-in to give a Windows Outlook desktop user some detailed information about what the UI-less add-in is doing. The approach was to open a window and then pass text to it using postMessage on the returned window reference from opening it which works on some instances of Outlook e.g. WebView2, Outlook for Mac, but is not working with WebView1.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop Windows Outlook
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.13328.20350 (64-bit) Outlook for 365
* Operating System: Windows
"
https://api.github.com/repos/OfficeDev/office-js/issues/1520,mailbox.item.itemId on Android return id in different format,"There is a difference in format in returned value of itemId of the mail item between Android and desktop(windows) platform 

## Expected Behavior
itemId of the same mail item should be the same

## Current Behavior
On desktop browser itemId property return value in following format:
AAMkADYyOWViNTEzLTNkMmItNDBiMC05NDcyLThmZTBiN2FjMjI2NQBGAAAAAADwmiZ0cOqgTb7+Fs7DzKlyBwC6KBvAkVoERJgOYFuMJLI7AAAAAAEMAAC6KBvAkVoERJgOYFuMJLI7AAENeLqQAAA=
And this value allow me to find mail item on backend via ews request.

But on Android device the format completely differs:
AAkALgAAAAAAHYQDEapmEc2byACqAC-EWg0AuigbwJFaBESYDmBbjCSyOwABDXw5lAAA
This value doesn't allow identify mail item on backend.

## Steps to Reproduce, or Live Example
https://github.com/rosergeev/GetItemId

## Your Environment
* Platform: Office on the web, Outook app on Android version 4.2044.3(42044817)
* Host: Outlook
* Office version number: O365
* Operating System: Windows 10, Version 1903 (OS Build 18362.592)
* Browser: Google Chrome Version 86.0.4240.198

This is how it looks  in browser:
![web](https://user-images.githubusercontent.com/12766193/100128278-245ad400-2e91-11eb-970d-486794126b1e.png)

And how on Android:
![Android_crop](https://user-images.githubusercontent.com/12766193/100128611-86b3d480-2e91-11eb-80ca-2be3c14dc6bd.jpg)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1511,Re-introduce `frame-src blob:` CSP directive to re-allow downloading Blobs via the Task Pane,"## Expected Behavior
In Firefox, I expected to get a browser download dialog when clicking on a link with its `href` attribute pointing to a Blob URL.

## Current Behavior
I get the following error reported in the console:
> Content Security Policy: The page’s settings blocked the loading of a resource at blob:https://example.com/52adf0b5-9a45-4e22-829c-cfbe2a2261fe (“frame-src”).

My suggested change involves adding `blob:` as a valid scheme-source to the `frame-src` CSP directive. I would argue that this change does not have any security implications compared to the current situation, since the `frame-src` directive already specifies the `data:` scheme-source and you can always convert a Blob to a data URI, albeit with a heavy performance penalty depending on the Blob size.

## Steps to Reproduce
1. Set up an Outlook Task Pane add-in
2. Create a sample Blob: `const blob = new Blob([""foo""])`
3. Create a Blob URL: `const url = URL.createObjectURL(blob)`
4. Create an anchor element and set its atrributes:
```javascript
const anchorElement = document.createElement(""a"");
anchorElement.href = url;
anchorElement.download = ""foo.txt"";
anchorElement.innerText = ""download foo"";
```
5. Append the anchor element to the document: `document.body.appendChild(anchorElement)`
6. Click on the ""download foo"" link

## Context
About a month or two ago, our Outlook add-in, which is currently in development, stopped working in Firefox. In particular, clicking on a link within the Task Pane with its `href` attribute pointing to a Blob URL, e.g. `blob:https://example.com/52adf0b5-9a45-4e22-829c-cfbe2a2261fe""` resulted in the following console error:

> Content Security Policy: The page’s settings blocked the loading of a resource at blob:https://example.com/52adf0b5-9a45-4e22-829c-cfbe2a2261fe (“frame-src”).

Interestingly enough, it worked and still works in Chrome (and consequently Edge Chromium). We therefore suspected that a Firefox update had broken our feature, but switching to an older Firefox version yielded the same result.

After reading up on CSP and `frame-src`, I noticed that the CSP header delivered by `https://outlook.office.com/mail/` does not contain the `frame-src blob:` directive necessary to allow downloading Blobs from within an iframe (Outlook add-in Task Pane). I confirmed that this is the cause by intercepting all local traffic and re-introducing said `frame-src` directive for all responses, which made the feature functional again.

This leads me to believe that the `frame-src` directive has been modified in the past couple of months. At the time of this writing, this is the content-security-policy header I receive:

```
content-security-policy: default-src *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net swx.cdn.skype.com 'self'; script-src 'nonce-pFKQBjpMB5jXkqYYREcYpA==' *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net *.blob.core.windows.net outlookdev.azureedge.net wss://*.delve.office.com:443 shellprod.msocdn.com amcdn.msauth.net amcdn.msftauth.net *.bing.com *.skype.com *.skypeassets.com *.delve.office.com *.cdn.office.net *.cdn.partner.outlook.cn static.teams.microsoft.com *.arkoselabs.com fabriciss.azureedge.net *.googleapis.com teams.microsoft.com 'report-sample' 'self' 'unsafe-inline' 'unsafe-eval' *.yammer.com; style-src *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net *.res.outlook.com shellprod.msocdn.com *.skype.com *.arkoselabs.com fonts.googleapis.com acthemeconfigs.blob.core.windows.net *.googleapis.com 'self' 'unsafe-inline' *.yammer.com; img-src * data: blob: filesystem: cid:; connect-src blob: data: ninja.outlookweb.io *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net *.services.web.outlook.com *.res.outlook.com spoprod-a.akamaihd.net shellprod.msocdn.com *.bing.com login.live.com *.office.net *.office.com *.office365.com *.officeapps.live.com *.outlook.live.net *.skype.com *.skypeassets.com *.spoppe.com *.onedrive.com substrate.office.de substrate.office.us *.office365-net.de *.office.de *.office365.us browser.pipe.aria.microsoft.com *.gateway.messenger.live.com dev.virtualearth.net *.trouter.skype.com *.trouter.io wss://*.trouter.skype.com wss://*.trouter.skype.com:443 wss://*.trouter.io:443 media.licdn.com *.facebook.com onerm.olsvc.com client.arkoselabs.com *.qas.binginternal.com *.qas.bing.net wss://*.qas.bing.net:443 wss://*.platform.bing.com wss://*.botframework.com:443 wss://augloop.officeppe.com:443 wss://augloop-int.officeppe.com:443 wss://augloop-gcc.office.com:443 outlook.live.com graph.microsoft.com *.graph.microsoft.com graph.microsoft.de graph.microsoft.us microsoftgraph.chinacloudapi.cn *.googleapis.com *.office.microsoft.com api.box.com api.dropboxapi.com *.users.storage.live.com www.onenote.com *.storage.msn.com asgsmsproxyapi.azurewebsites.net meetingintelligenceppe.westus2.cloudapp.azure.com:9001 wss://*.pushd.svc.ms wss://*.pushs.svc.ms wss://*.pushb.svc.ms wss://*.pushp.svc.ms nleditor.osi.officeppe.net api.tenor.com pptservicescast.officeapps.live.com *.sharepoint-df.com *.sharepoint.com *.sharepoint.de wss://*.delve.office.com:443 wss://*.loki.delve.office.com:443 wss://*.loki.delve.office.com *.delve.office.com *.loki.delve.office.com loki.delve-gcc.office.com web.vortex.data.microsoft.com *.events.data.microsoft.com *.online.lync.com *.infra.lync.com 'self' teams.microsoft.com *.teams.microsoft.com *.yammer.com *.licdn.com o365auditrealtimeingestion.manage.officeppe.com o365auditrealtimeingestion.manage.office.com outlook.office365.com *.msedge.net  wss://augloop.office.com wss://*.augloop.office.com *.sharepoint.de; base-uri browser.pipe.aria.microsoft.com 'self'; form-action *.officeapps.live.com *.odwebp.svc.ms; object-src *.office.net *.outlook.live.net 'self'; frame-ancestors outlook.live.com *.skype.com 'self' teams.microsoft.com *.teams.microsoft.com outlook.office.com; font-src data: *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net spoprod-a.akamaihd.net *.skype.com fonts.gstatic.com ms-appx-web: sharepointonline.com *.sharepointonline.com *.delve.office.com 'self' *.yammer.com; media-src *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net *.skype.com *.office.net *.office365.net *.office365-net.de *.office365-net.us *.office365-net.us *.outlook.live.net ssl.gstatic.com 'self' *.yammer.com; frame-src * data: mailto:; manifest-src 'self'; worker-src *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net 'self'; prefetch-src *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net swx.cdn.skype.com; child-src *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net 'self'; report-uri ; upgrade-insecure-requests;
```

Unlike Chrome and Edge, Firefox seems to **not** match sources beginning with e.g. `blob:` when specifying a wildcard source, i.e. `frame-src *`, which conforms to the [Content Security Policy Level 2 spec](https://www.w3.org/TR/CSP11/#match-source-expression), which in turn explains why it still works in Chromium browsers:

> If the source expression a consists of a single U+002A ASTERISK character (*), and url’s scheme is not one of blob, data, filesystem, then return does match. 

**Update**: the inconsistency described above only seems to occur when the `download` attribute is present. To me, this looks like a bug in Chromium.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office on the web (latest)
* Operating System: Windows 10 Pro
* Browser (if using Office on the web): Firefox 84.0b1

## Useful logs
![image](https://user-images.githubusercontent.com/294340/99534640-04667480-29a8-11eb-88e9-80f5fc332922.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1508,Outlook Add-in: Office.loadCustomPropertiesAsync cannot get the custom property of a exception meeting,"<!--- Provide a general summary of the issue in the Title above -->
In my Outlook Add-in, i try to call Office.js API to save some information for a meeting. According to MSFT docs, i use Office.loadCustomPropertiesAsync to do it. Add-in calls this interface to get the custom property(cecp-clientId) of a exception meeting. 
## Expected Behavior
<!--- Tell us what you expected to happen -->
My expect result is that Add-in can get the custom property of this exception.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
But actually, it returns null. Also, it works well when i open an occurrence or the whole series meeting.
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Steps to reproduce:
1. Create a series meeting and use Add-in to set a custom property.
2. Invite some attendees and send it.
3. Change one instance into exception and open it.
4. Open Add-in to get the custom property which i saved before.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
When the customers open a exception meeting, our Add-in cannot recognize this meeting so that our customers cannot do some change through Add-in.
This issue only occurs in the latest Outlook version(after Monthly channel 2005);
Aslo, i have created a stackoverflow [issue](https://stackoverflow.com/questions/64885883/office-365-win-add-in-cannot-get-the-custom-property-of-a-exception-meeting-thr)
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Monthly channel 2008(Build 13127.20638)
* Operating System: Win 10 
* Browser (if using Office on the web): NO

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
Sample code
```
Office.context.mailbox.item.loadCustomPropertiesAsync(function(asyncResult){
  var customProps = asyncResult.value;
  console.log('property = '+JSON.stringify(customProps));

  var myProp = customProps.get(""myProp"");
  customProps.set(""otherProp"", ""value"");

  customProps.saveAsync(function(result){
     console.log('save result'+JSON.stringify(result));
  });
});
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1499,Office.context.mailbox.item.body.getTypeAsync get 5001 error on Mac,"When trying call : 
Office.context.mailbox.item.body.getTypeAsync(function (result) {
                    if (result.status == Office.AsyncResultStatus.Failed){
                        zopLog(""getBodyType: Office.AsyncResultStatus.Failed:""+result.status);
                        //...
                    }
                    else {
                        //...
                    }
                });
Get result: failed :error code: 5001 error message: internal error ...

This problem only happened on 
Mac: 10.15.7
Outlook: 16.44 (20111100)
And some users can fix this by reinstall outlook. But this not work every time.

But it works fine on browser.

## Expected Behavior
Api can work normally.

## Current Behavior
Api not work so that add-in can't insert any content to body.


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.44 (20111100)
* Operating System: Mac 10.15.7
* Browser (if using Office on the web): NA

I see some one mentioned this on https://github.com/OfficeDev/office-js/issues/826.
Is this callback handler register is necessary?"
https://api.github.com/repos/OfficeDev/office-js/issues/1495,Outlook-OWA not displaying email properly when email headers are sent.,"<!--- Provide a general summary of the issue in the Title above -->
As the title states, there is a case where OWA fails to properly display the email if some email headers are in the content of the email. Outlook clients display the headers correctly though.

I don't think this is the right forum, but took a chance at filing the ticket anyway since I have had pleasant experiences with this group. And I am hoping this will be re-routed to the right team. Thank you in advance your kindness and understanding of my decision to post here.

## Expected Behavior
<!--- Tell us what you expected to happen -->
This is how Outlook displays the email. And the right way to display it : 
[Correct Email Display](https://imgur.com/a/v2My2J9)

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
This is how it is displayed in Outlook-via-browser : 
[Reply and Forward Incorrectly Shown](https://imgur.com/HkbzRp2)

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example:  NONE
1. Use MAC or WINDOWS Outlook client.
2. Send the following email as **PLAIN TEXT** : 
```
Received: from SG2PR01MA4000.apcprd01.prod.exchangelabs.com
(2603:1096:4:83::23) by SG2PR01MB2507.apcprd01.prod.exchangelabs.com
(2603:1096:4:51::20) with Microsoft SMTP Server (version=TLS1_2,
cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3499.29; Wed, 4 Nov
2020 04:59:09 +0000
Received: from SG2PR01MA4000.apcprd01.prod.exchangelabs.com
([fe80::d06e:7395:ebbc:8f61]) by SG2PR01MA4000.apcprd01.prod.exchangelabs.com
([fe80::d06e:7395:ebbc:8f61%3]) with mapi id 15.20.3499.032; Wed, 4 Nov 2020
04:59:09 +0000
From: John Doe 
To: John Doe 
Subject: Fw: this is a test message over 1mb
Thread-Topic: this is a test message over 1mb
Thread-Index: AQHWq7Nt16K6R+9SG0K6zdW0c3Tsxam3dvzT
Date: Wed, 4 Nov 2020 04:59:09 +0000
```
3. Once email is sent, view the email in Outlook-via-Browser.

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I am sending some data for header analysis to some of my clients and colleagues. And this gets in the way.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: ______
* Host [Excel, Word, PowerPoint, etc.]: ______
* Office version number: ______
* Operating System: ______
* Browser (if using Office on the web): ______
Just affects OWA.

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
None really.

"
https://api.github.com/repos/OfficeDev/office-js/issues/1522,Outlook Error Code 5010 is not documented,"When using Office.context.mailbox.item.removeAttachmentAsync the following error occurs, but isn't documented:
code: 5010
name: Interner Fehler
message: Ein interner Fehler ist aufgetreten.

Documentation Link:
https://docs.microsoft.com/en-us/office/dev/add-ins/reference/javascript-api-for-office-error-codes

"
https://api.github.com/repos/OfficeDev/office-js/issues/1483,Outlook Desktop: addFileAttachmentAsync adds an attachment (fake?) to the attachments list after unsuccessful call,"In an Outlook add-in for compose mode, we are using the addFileAttachmentAsync function to add attachments. In desktop Outlook, an attachment is added to the attachments list even if a call failed, i.e. result.status === ""failed"".

## Expected Behavior
An attachment shall not be added to the list of attachments in this case.

## Current Behavior
The attachment is added, please see the screenshot below.

## Steps to Reproduce, or Live Example
1) Create a new email in desktop Outlook.
2) Start an add-in and execute the following code:
`    function addFileAttachmentAsyncTest() {`
`      Office.context.mailbox.item.addFileAttachmentAsync('https://microsoft.com/xyz.zip', 'xyz.zip', { },`
`        function (result) {`
`          console.log(result);`
`        });`
`    }`
3) Note, I specially provide the URL to a non-existing zip file to get an error.
4) As you can see, the new attachment is added.

* Additional details:
  1. The issue exists only in Outlook Desktop on Windows. Outlook Online and Outlook for Mac work correctly.

## Context

## Your Environment
* Platform: PC desktop
* Host: Outlook
* Office version number: Version 2010 (build 13328.20340)
* Operating System: Windows 10 version 2004
* Browser:

## Useful logs
- [ x ] Screenshots
![ol-desktop-attachment](https://user-images.githubusercontent.com/28924916/98261657-bc9e2100-1f95-11eb-81a1-d0908de340ed.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1472,"Memory leak issue in Outlook Add-ins when app is pinned, and a user scrolls through the outlook messages","
##  Expected Behavior
The add-in should not cause an abrupt increase in memory utilization and should not cause Outlook to crash.

## Current Behavior
On following the steps below, the add-in becomes unresponsive and eventually crashes Outlook.
**Please note that this issue is reproducible even after the recent [August 2020 IE Patch](https://support.microsoft.com/en-us/help/4566116)**. 

## Steps to Reproduce
* Open any add-in and pin it
* Use the down arrow key of your keyboard and scroll through outlook messages
* After about 5-7 mins of scrolling, Outlook stops responding
* Task manager shows multiple instances of Desktop App Web Viewer running (usually 4-8 in number)
* Memory utilization crosses **400MB** and CPU usage is also > **80%**

## Context
* This issue has affected multiple customers. The fact that this makes Outlook unstable is discouraging the use of our add-in. 

## Your Environment
* Platform: PC Desktop
* Host: MS Outlook
* Office version number: Outlook 16.0.13127.20408, Outlook 16.0.13328.20262
* Operating System: Windows 10 (OS Build 10.0.19041.488)
* Browser: Not Applicable
"
https://api.github.com/repos/OfficeDev/office-js/issues/1484,email opened in new browser window on itemsend,"Hi,

This issue is related to when using the following code to open a dialog box on itemsend within outlook web (Do not run into the issue on the desktop version).

`<ExtensionPoint xsi:type=""Events"">
                  <Event Type=""ItemSend"" FunctionExecution=""synchronous"" FunctionName=""validateSubject"" />
 </ExtensionPoint>`

Instead of opening the dialog box the email to be sent is reopened in a new browser window and then the dialog box is opened (please see screen shots)
Any idea on what would be causing this?
![image](https://user-images.githubusercontent.com/73838303/97881692-a173ad00-1d1a-11eb-89f8-2a1b3401a552.png)
![image](https://user-images.githubusercontent.com/73838303/97881802-c2d49900-1d1a-11eb-8f3f-a67c25aed518.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1465,Addin disappeared. Get addins redirects to web ,"I have this issue: https://github.com/OfficeDev/outlook-dev-docs/issues/514 but cant comment since it has been closed. I had sideloaded my addin correctly and was trying some things when I accidentally closed outlook. Now, after opening again, the addin is not loaded and whenever i click on the get addins button it opens a tab in the browser and redirects me to: https://appsource.microsoft.com/en-us/marketplace/apps?product=office%3boutlook&page=1&src=office
instead of opening the dialog inside outlook.

Curiously, if i go to file -> Info -> Manage addins, it opens https://outlook.office365.com/mail/inbox and there I can see my addin under the ""My addins"" tab. 

Whats going on? Why has it stopped showing my addin? Ive tried rebooting and it still doesnt work.

"
https://api.github.com/repos/OfficeDev/office-js/issues/1460,[Outlook] loadCustomPropertiesAsync can't access custom property on Mac outlook application(error code:9020),"When we open outlook application on Mac . The first 10 ~ 20 minutes we can't access to custom property. 
report error code 9020 .
But after this, we can access custom property normally.
Is this an known issue? Any idea?

## Expected Behavior
User can access to custom property soon after open outlook application on Mac.

## Current Behavior
When we open outlook application on Mac . The first 10 ~ 20 minutes we can't access to custom property. 
report error code 9020 .

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. NA

## Context
We can't schedule meeting with add-in because can't save or read data on custom property.
This bug might effect 10K+ users...

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number:  16.41 
* Operating System:  Catalina 10.15.7
* Browser (if using Office on the web): ______
By the way we are using on prem environment with outlook 2016+.

Looks similar with https://github.com/OfficeDev/office-js/issues/1129

"
https://api.github.com/repos/OfficeDev/office-js/issues/1457,[Outlook] Item.body.getTypeAsync not work when edit an exist meeting on shared calendar (Mac),"We get a problem when we try insert something to meeting body on an exist meeting in shared calendar.
Looks like when I try call 'Office.content.mailbox.item.body.getTypeAsync' will return failed.
The delegate permission role is editor.
  'Office.content.mailbox.item.body.getTypeAsync' can run normally on a new meeting or my own calendar.


## Expected Behavior
  'Office.content.mailbox.item.body.getTypeAsync' can run  on an exist meeting in shared calendar.

## Current Behavior
 When trying run run  on an exist meeting in shared calendar. 'Office.content.mailbox.item.body.getTypeAsync' return status 'failed' ,value: undefined

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.42 (20101102)
* Operating System: Mac
* Browser (if using Office on the web): ______

## Useful logs
![image](https://user-images.githubusercontent.com/15980696/96947293-5f29bf00-1515-11eb-81c0-a4ea03014b00.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1453,Outlook Online + IE11: Unable to move to another site in a pop-up window created by displayDialogAsync method,"In outlook online + IE11, when our Office outlook add-in opens a pop-up window, the add-in tries to redirect users to another site such as `https://login.microsoftonline.com` for authentication by setting the value to `window.location.href`. This approach works on Chrome, but not working with outlook online + IE11. The popup window is created by `Office.context.ui.displayDialogAsync` method.

## Expected Behavior
When users click the link inside a pop up window in IE11 + outlook online, the page should be redirected to the new site.

## Current Behavior
Even though user clicks the link in the pop up window, the pop up window does not change.  (It keeps displaying the same page)

## Steps to Reproduce, or Live Example
1. Create a pop up window by calling `Office.context.ui.displayDialogAsync` method like followings.
```
const dialogScaleInDeviceWindow = 60 //Show dialog 60% of device window
export const ShowAuthDialog = (mode: dialogMode, exToken: string | undefined): void => {
    Office.context.ui.displayDialogAsync(
        'https://<test.com>/signupcontainer',
        {
            height: dialogScaleInDeviceWindow,
            width: dialogScaleInDeviceWindow,
            promptBeforeOpen: true,
            asyncContext: { location: true }
        },
        (asyncResult: Office.AsyncResult<Office.Dialog>) => {
            // This callback is triggered when Pop-up window open
        }
    )
}
```
2. In a pop up window, make the following html appear 
```
//Javascript (we use react)
  <div className=""SignUpContainer"">
                <div className=""Secretary"">Secretary</div>
                <div className=""SignUpMessage""> Please Sign-up with your Microsoft account </div>
                <img
                    src={<any logo>}
                    alt=""logo""
                    width=""200""
                    height=""40""
                    onClick={() => startAuthorization(dispatch, email)}
                />
            </div>

const startAuthorization = (email?: string): void => {
    const urlElements: string[] = [
        `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?`,
        `client_id=${clientId}`,
        `&response_type=code`,
        `&redirect_uri=${createEncodedRedirectUrl()}`,
        `&response_mode=query`,
        `&scope=${createEncodedScopeString()}`
    ]
    if (email) urlElements.push(`&login_hint=${email}`)

    window.location.href = urlElements.join('')
}
``` 

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. I tried changing the value of `window.location.href` from IE11 console on developers tool such as `window.location.href = ""https://google.com"", but it was not changed.

2. I also saw the following article and tried them, but none of them worked.
https://stackoverflow.com/questions/28872598/window-location-href-not-working-in-ie-11

3. In a pop up window created by ``Office.context.ui.displayDialogAsync` method, even a very simple <a href=""https://google.com""></a>  does not work. 

4. I've added the urls at manifest.xml like this, but it did not solve the problem. (I've added the google just for the test)

```
<AppDomains>
    <AppDomain>https://localhost:3000</AppDomain>
    <AppDomain>https://www.google.com</AppDomain>
  </AppDomains>
```

## Your Environment
* Windows 10 Build 2004
* IE 11: 11.572.19041.0

"
https://api.github.com/repos/OfficeDev/office-js/issues/1438, Dialog window does not support add-in for the new Outlook for Mac,"Our clients are using new Outlook design 16.42 (20101102)
Our Add-in uses functions: reply/replyAll/forward they open Dialog window(pop-up) and this window does not support add-ins.
This is really critical issue, because our clients use pinned panel of add-ins to complete their workflow.
Could you please clarify when can we use the add-in inside Dialog window for european region?"
https://api.github.com/repos/OfficeDev/office-js/issues/1435,on send addin is not invoked with new outlook feature of outlook vesion 16.42,"on send addin is not invoked when outlook is used in ""New outlook"" feature for the version 16.42."
https://api.github.com/repos/OfficeDev/office-js/issues/1433,Outlook Add in pinning does not work in Shared folders - Outlook Office Webmail - SupportsPinning and SupportsSharedFolders,"## Summary
We have implemented an Outlook Add in that uses the SupportsPinning option from Req Set 1.5 and the SupportsSharedFolders option from Req Set 1.8. Both options are working fine in Windows Outlook Native client but malfunction in Outlook Office Webmail - https://outlook.office.com/mail/login.html (tested in latest Chrome, IE and Edge).

## Steps to Reproduce, or Live Example
These are the steps:

1. Open Shared Inbox in Outlook 365 Webmail - https://outlook.office.com/mail/login.html
2. Select email
3. Open Add-in
4. Pin Add-in
5. Select another email

## Expected Behavior
Add-in window remains open

## Current Behavior
Add-in window closes

The other strange thing is that if you then select another message, the add-in remains closed BUT if you select an email that you previously opened the add-in on, in the shared inbox, the add-in reopens.

No ItemChanged event is recorded.

## Context
This is a problem as we are attempting to support both Shared Folders and Pinning. It's working perfectly in Native.

## Your Environment
* Platform: Windows 10
* Host: Outlook Office Web - IE 11, Chrome Version 85.0.4183.121 (Official Build) (64-bit), Edge Version 85.0.564.70 (Official build) (64-bit)
* Office version number: 365 Office Version 2008 13127.20408

"
https://api.github.com/repos/OfficeDev/office-js/issues/1425,Loading of the bing map when clicking on the Address,"I have appended the code for regular expression. when hovering on the address then the dialogue box is appearing. Can you please guide me how to activate the Bing map? 

The map is not getting loaded with the map images.



## Issue
Console Error : 
Cannot read property 'getSelectedEntities' of undefined at NLG.SuggestedAddresses.SuggestedAddressesExtension._getSelectedAddresses$p$1

Issue is of loading the map when clicking on the link of add
[MapLoading.docx](https://github.com/OfficeDev/office-js-docs-pr/files/5326340/MapLoading.docx)
ress
 
"
https://api.github.com/repos/OfficeDev/office-js/issues/1421,Displaying appointment form not working in Safari,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- Tell us what you expected to happen -->
When executing the following function, to open the new appointment dialog message:
```javascript
Office.context.mailbox.displayNewAppointmentForm({ ... });
```

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
While testing my plugin, running the following in Safari does not open the new appointment dialog, while its working just fine in Chrome, Firefox and the Outlook app.
```javascript
Office.context.mailbox.displayNewAppointmentForm({
  location: `https://${settings.domain}.easymeeting.net/${settings.number}`,
  subject: 'Easymeeting videomøte',
  requiredAttendees: [],
  optionalAttendees: [],
  resources: [Office.context.mailbox.userProfile.emailAddress],
  body: messageBody,
});
```

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: https://github.com/SpellCraft/em-office-addin

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. https://i.imgur.com/jBdElpK.png Shown working just fine in Firefox
  2. https://i.imgur.com/TYfhZ8P.png Shown working just fine in Outlook app
  3. No error messages generated. Console-logging of Office.context.mailbox.displayNewAppointmentForm shows that it is present

## Context
I've attempted getting my plugin submitted to the office add-in store, but it keeps getting declined because of this issue. I've also tried setting up a barebones project with only this function, while it works on the native Outlook client on both Windows and Mac, and in Chrome/Firefox on either OS, it won't work in Safari.
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ______
* Operating System: macOS Catalina 10.15.6
* Browser (if using Office on the web): Safari 14.0 (15610.1.28.1.9, 15610)

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
No errors reported during testing. It just doesn't do anything it seems."
https://api.github.com/repos/OfficeDev/office-js/issues/1413,[Outlook Add-in] Fetch in UI-Less doesn’t work,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior

Hi, I’m using an Add-in Outlook and I’m using a fetch in a UI-less function. It’s fine and perfectly working on Outlook for Web, but not on Outlook for Mac or Outlook for Windows.

Here’s a snippet : 

```javascript
  const result = await fetch(`${getBackendUrl()}/graphql`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      EXTERNALAUTHENTICATIONTOKEN: Office.context.roamingSettings.get(
        'api-token'
      ),
    },
    mode: 'cors',
    body: JSON.stringify({ blablabla }),
  })
```

## Current Behavior
I got this error on desktop:

![image](https://user-images.githubusercontent.com/7314118/94567287-9507ba80-026b-11eb-8d39-098c71e05ca3.png)


## Steps to Reproduce, or Live Example
Creates an Outlook Office Add-in, write a UI-less function, write a fetch.

## Context
I try to create an appointment on my server during a meeting creation in calendar.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac, Windows, Office on the web
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.41
* Operating System: macOS 10.15.6
* Browser (if using Office on the web): Chrome & Edge
"
https://api.github.com/repos/OfficeDev/office-js/issues/1411,Office.context.mailbox.item does not return recipient email address on copy-paste ,"When copy and paste pre-existing recipients, Office.context.mailbox.item returns recipients without email addresses. This library is used in a outlook add-in, as the recipient email address is not returned, the add-in prompts an error. 

## Expected Behavior
When copy and paste pre-existing recipients, Office.context.mailbox.item returns valid recipient email addresses. 

## Current Behavior
When copy and paste pre-existing recipients, Office.context.mailbox.item returns recipients without email addresses.
![image](https://user-images.githubusercontent.com/71897774/94439075-c8a3f100-0154-11eb-8dc3-4188a339dc9d.png)

## Steps to Reproduce, or Live Example
Repro  steps: 
 
1.	Opens FindTime in outlook desktop 
2.	Adding users to email compose
![image](https://user-images.githubusercontent.com/71897774/94439498-5a136300-0155-11eb-84c2-74c0f363b7b0.png)

3.	Cut “Cal Substrate Test 1” from Cc and paste to To field -> Warning shows up
![image](https://user-images.githubusercontent.com/71897774/94439515-60094400-0155-11eb-97fa-6c0a946e2e36.png)


<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
Same behavior exists in **AC Calendar View** add-in 

## Context
There are approximately 700 api call failures due to this error. 

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop (only)
* Host [Excel, Word, PowerPoint, etc.]: NA
* Operating System: PC"
https://api.github.com/repos/OfficeDev/office-js/issues/1412,Attachment API with blocked attachments,"I have a question about Attachment API specification when attaching a file that is [blocked by Outlook](https://support.microsoft.com/en-us/office/blocked-attachments-in-outlook-434752e1-02d3-4e90-9124-8b81e49a8519).

The behavior differs as described below.
What is the expected behavior?


**Windows Outlook:**
You can retrieve content with `getAttachmentContentAsync()` API after attaching a file with the EXE extension.
Then, if you try to save the email, the warning screen appears as shown below.

![unsafe_dialog](https://user-images.githubusercontent.com/58804032/94408047-3d0b7e00-01af-11eb-9326-183159dc2220.png)

After you accept and save it, if you get a list of attachments using the `getAttachmentsAsync()` API, it is not in the list.

![blocked_windows](https://user-images.githubusercontent.com/58804032/94408141-5ad8e300-01af-11eb-8e9e-fe0d92c5963e.png)

**OWA (Outlook on the web):**
If you attach a file with the EXE extension, it will look like the following screen.

![blocked_owa](https://user-images.githubusercontent.com/58804032/94408254-7d6afc00-01af-11eb-9f09-de0183338019.png)

If you get a list of attachments using the `getAttachmentsAsync()` API, it is included in the list.
In addition, executing the `getAttachmentContentAsync()` API to retrieve the content will succeed, but the `base64` value will contain an empty or unknown value starting with ""_initial-scale=1.0,user-scalable=0""/><metaname=_"".

Note: I have only tested with Windows Outlook and OWA.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 03b32859-121b-cab9-78b9-923fd57628be
* Version Independent ID: c7ac8b7f-0b2a-9389-8d12-8aa0c87817ac
* Content: [Add and remove attachments in an Outlook add-in - Office Add-ins](https://docs.microsoft.com/en-us/office/dev/add-ins/outlook/add-and-remove-attachments-to-an-item-in-a-compose-form)
* Content Source: [docs/outlook/add-and-remove-attachments-to-an-item-in-a-compose-form.md](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/outlook/add-and-remove-attachments-to-an-item-in-a-compose-form.md)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/1405,[Outlook ] Discard recurring meeting issue ,"When we scheduling a recurring meeting and then discard this meeting. 
It will show me an error :  Uncaught (in promise) TypeError: Cannot read property 'IsMeeting' of null
And this meeting was saved even I don't want to save it ...

## Expected Behavior
Recurring meeting will not be saved and with no error

## Current Behavior
Show me an error and saved the discard meeting.

## Steps to Reproduce, or Live Example
Recording:
https://success.zoom.us/rec/share/gtQEszcTdqsgSDr5bzNApoBxj0VGJZCeSCXi_qOtLygOMOb73CscDHQEw8pZ_XAM.R6XoXgkF4pfF0XCv

Access Passcode: diMHH#R0
![image](https://user-images.githubusercontent.com/15980696/94137261-bc8c0b00-fe98-11ea-95f6-4d2fd75aa189.png)



## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: PC
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: online
* Operating System: Windows
* Browser (if using Office on the web): Chrome

reference link: https://github.com/OfficeDev/office-js/issues/1312
"
https://api.github.com/repos/OfficeDev/office-js/issues/1402,Office.context.mailbox.item is null,"I have created an outlook add-in for our customers. For only one customer when we retrieve the Office.context.mailbox.item object, we are getting a null value. This issue only occurs for this customer and others have no issue.

The issue is only with the outlook desktop client. OWA is working fine. Customer is using windows 7/windows 2019 with outlook version 2002.

`Office.onReady(function () {
Office.initialize = function () {}

       refresh: function () {
                try {
                    app.logtext += ""\nRefreshing data"";
                    if (!Office.initialize) {
                        app.logtext += ""\nError initializing office...""
                    } else {
                        if (Office.context) {
                            app.logtext += ""\nOffice.context true""
                        }
                        if (Office.context.mailbox) {
                            app.logtext += ""\nOffice.context.mailbox true""
                        }
                        if (Office.context.mailbox.item) {
                            app.logtext += ""\nOffice.context.mailbox.item true""
                        }
                        app.logtext += ""\nOffice.context.mailbox.item.internetMessageId"" + Office.context.mailbox.item.internetMessageId;
                        app.logtext += ""\nOffice.context.mailbox.item.internetMessageId"" + Office.context.mailbox.item.internetMessageId;
                        app.logtext += ""\nOffice.context.mailbox.item.internetMessageId"" + Office.context.mailbox.item.internetMessageId;
                        app.logtext += ""\nOffice.context.mailbox.item.subject"" + Office.context.mailbox.item.subject;
                        app.logtext += ""\nOffice.context.mailbox.item.itemId"" + Office.context.mailbox.item.itemId;
                    }
                    app.internetMsgId = Office.context.mailbox.item.internetMessageId;
                    app.subject = Office.context.mailbox.item.subject;
                    app.messageId = Office.context.mailbox.item.itemId;
                } catch (err) {
                    app.logtext += ""\n JS error"" + err;
                }
                app.settings_egCookie = Office.context.roamingSettings.get(""Addin-Cookie"");
                app.settings_userEmail = Office.context.roamingSettings.get(""Addin-User-Email"");
                app.settings_userName = Office.context.roamingSettings.get(""Addin-User-Name"");
                app.settings_userId = Office.context.roamingSettings.get(""Addin-User-Id"");
                app.settings_clientId = Office.context.roamingSettings.get(""Addin-Client-Id"");
                app.emailgisticsUser = Office.context.roamingSettings.get(""Addin-Emailgistics-User"");
                
            },

        }
});

$(document).ready(function () {
    Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, itemChanged);
    //UpdateTaskPaneUI(Office.context.mailbox);
    app.logtext += ""\Document is ready and task pane is loaded...."";
});
});`


// if (Office.context.mailbox.item)  this condition is failing and the data is null from my tests.



"
https://api.github.com/repos/OfficeDev/office-js/issues/1401,Windows Outlook: internetHeaders.setAsync being ignored in on-send hook,"When you have a function file that processes a message during the send event any attempt to set internet headers during this window, specifically on Outlook for Windows, seems to result in a success from Office.js, in so much that no error is return in the async result, but when the recipient inspects the message headers, the specified header is not there. 

Setting headers from a taskpane works as expected and these are present on the message in the recipients mailbox.

We have also tried to set headers directly on the message through the use of the Outlook REST API and a single value extended property call using the associated MAPI ID and desired name for the header and whilst this also returns as successful, the header, again, is not persisted after the send event completes. The code for this approach has been omitted from the sample repo for the sake of conciseness and keeping it focused on the APIs Office.js exposes to us but after looking at the calls Office.js is making in OWA, the setAsync method just seems to be a nice wrapper around a MAPI call anyway.

## Expected Behavior
Headers that are set during the send event processing will persist and be sent with the message once the event has completed.

## Current Behavior
Calling the setAsync methods returns as successful but the header is not persisted when the message arrives in the recipients mailbox.

Calling saveAsync on the item after setting the header seems to make no difference as well.

When the same code is run in either OWA or Outlook for Mac, the headers are present as expected when the message arrives in the recipients mailbox.

## Steps to Reproduce, or Live Example
https://github.com/jak-hammond/office-js-on-send/tree/message-headers

* Additional details:
  1. Clone repo and install manifest
  2. Create a new message
  3. Open the taskpane and click Run
  4. Send the message
  5. Inspect the message properties; File -> Properties -> Internet Headers
  6. Find 'x-taskpane-header' and x-onsend-header'

## Context
We run some checks when a message and based on our results, we set various message headers that can be used later on in a users mail flow, at present, this means we cannot support Windows Outlook users unless they are aware they need to open the taskpane first which is a subpar user experience and can interrupt their workflow, the on-send hook should be able to handle this all silently for each send.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Version 2008 (Build 13127.20408 Click-to-run) Current Channel
* Operating System: Windows 10
* Browser (if using Office on the web): Successful functionality can be seen in OWA using Chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/1400,"Several properties are missing from window.Office.context.mailbox on ""New Outlook"" for Mac","I've enabled ""New Outlook"" for Mac and found that several properties are missing from `window.Office.context.mailbox`, and some of them have different values.

| Property | ""Old Outlook"" | ""New Outlook"" |
| ------------ | ------------- | ------------- |
| `window.Office.context.mailbox.userProfile.accountType` | `outlookCom` | `office365` |
| `window.Office.context.mailbox.item.itemId` | `AQMk...E0AAAA=` | `""""` |
| `window.Office.context.mailbox.item.internetMessageId` | `CA+E...gmail.com` | `<CA+E...gmail.com>` |
| `window.Office.context.mailbox.restUrl` | `https://outlook.office.com/api` | `""""` |
| `window.Office.context.mailbox.item.attachments[0].id` | `AQMk...VD/y9I...RA98=` | `362{00000000-0000-0000-F955-000000000000}` |
| Supported Outlook API version | 1.8 | 1.7 |

## Expected Behavior
Properties listed above to be the same for ""Old"" and ""New Outlook""

## Current Behavior
Properties have different values in ""Old"" and ""New Outlook""

## Steps to Reproduce, or Live Example
1. Install Outlook add-in with `ReadWriteItem` permission level.

## Context
This breaks Jira Cloud for Outlook add-in, we can't fetch attachments (mainly because there's no `restUrl`).

## Your Environment
* Platform: Mac
* Host: Outlook
* Office version number: 16.42 (20091509) with ""New Outlook"" enabled
* Operating System: macOS Catalina v10.15.6

## Useful logs
Same manifest as here https://github.com/OfficeDev/office-js/issues/1384#issuecomment-695010631
"
https://api.github.com/repos/OfficeDev/office-js/issues/1399,Windows Outlook localStorage events not firing,"We are building a Vue.js powered add-in that makes use of various APIs in Office.js, one critical part of functionality for us is to sync the client state of the application between the taskpane and any child dialogs that it spawns, this also includes dialogs we spawn when processing the send event.

We started using localStorage to act as a 'cache' and then the client application would register a storage event listener, inspecting the key and then updating itself accordingly, but it seems that on Windows, whilst we do have access to localStorage the WebBrowser control that the iFrame runs in does not respect, or implement, the storage events. 

After a bit of looking around on StackOverflow, there seems to be a suggestion this is infact 'by design' for the implementation of the control itself.

## Expected Behavior
Storage event listeners will be executed when running on Windows Outlook.

## Current Behavior
Storage event listeners are successfully registered, in so much that no errors are thrown when registering, but when local storage does actually change, these handlers are not fired.

## Steps to Reproduce, or Live Example
* Link to live example: https://gist.github.com/jak-hammond/1497fc79a5b8eac50ae5a02c0759d9f7

1) Create a new message and open the taskpane
2) Create a second new message and open the taskpane
3) You'll see the messages saying that the storage event listeners have been successfully registered
4) Click the add or update storage button, the console will not update
    - If running the same test on Chrome and OWA, or Mac Outlook, you will see the storage event properties logged out

## Context
We are trying to sync client app state between the various instances of the Office.js application; taskpane, dialog and on-send function file. Whilst we can pass information to the parent of the dialog, there is no way for the parent to pass new state to the child.

We cannot use the Broadcast API due to the lacking IE11 support and all the polyfills I could find seem to suggest falling back to storage events, which will not work, Likewise, we cannot use SharedWorkers or ServiceWorkers due the current limitations of the IE11 based WebBrowser Control, I believe there is a Chromium Edge based version coming early 2021 but we have no guarantee there won't be changes to how certain technology is implemented there as we are seeing now with these events.

As a result, we have had to fallback to polling localStorage ever second and timestamping the payloads we write there to figure out if the state of the various instances needs updating which is a break from the original event driven approach we were trying to keep. Whilst we could use a dedicated websockets, implemented via SignalR, this seems overkill for simple state syncing :(

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2008 (Build 13127.20408 Click-to-Run) Current Channel
* Operating System: Windows 10
* Browser (if using Office on the web): Successful test of events firing can be seen in Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [x] Screenshots
- [ ] Test file (if only happens on a particular file)

![image](https://user-images.githubusercontent.com/664193/93769609-f51ab300-fc12-11ea-98d4-68e2ebf1bccb.png)

![image](https://user-images.githubusercontent.com/664193/93769765-33b06d80-fc13-11ea-801f-72e8f0db686e.png)


"
https://api.github.com/repos/OfficeDev/office-js/issues/1398,Unable to Pin the TaskPane,"I want to Pin my Outlook Add-Ins to maintain the Persistency and Consistency while it is being used.

I want to pin my Task pane so that while navigating to others mail it should remain open.

I got some support code to Pin the task pane from Microsoft Doc but not working.
I used <SupportsPinning> tag as option 'true'. It supposed to Work as per Microsoft but showing Version Overrides issue.

LINK - https://docs.microsoft.com/en-us/office/dev/add-ins/outlook/pinnable-taskpane

Environment
 Platform - Visual CSharp and JQuery
 Host - Microsoft Outlook Exchange
<img width=""337"" alt=""OutlookError"" src=""https://user-images.githubusercontent.com/42667183/93766187-aaf5f980-fc33-11ea-8a14-b28b08da0143.png"">

 Operating System - Windows 10
 Office version number: Microsoft 365 outlook web version
 Browser Google Chrome

## Useful logs
This app can't be installed. The manifest file doesn't conform to the schema definition. The element 'Action' in namespace 'http://schemas.microsoft.com/office/mailappversionoverrides' has invalid child element 'SupportsPinning' in namespace 'http://schemas.microsoft.com/office/mailappversionoverrides'...
"
https://api.github.com/repos/OfficeDev/office-js/issues/1397,Android Outlook Add-in not support security verify with Android Intune App,"When user open the security verify with Intune App, they can't login in though Outlook Add-in.
it seams that the two app can’t communicate with each other.

here is a step for reproduce this problem:
[Fail Step.docx](https://github.com/OfficeDev/office-js/files/5253340/Fail.Step.docx)

and here is the configure for the CA Policies:
[CA Policies Configure.docx](https://github.com/OfficeDev/office-js/files/5253342/CA.Policies.Configure.docx)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1394,ItemId on shared calendar item is empty,"ItemId on Shared Calendar is not available when the shared calendar is from a mailbox in a different region

## Expected Behavior
ItemId on shared calendar item should be available if the calendar was shared with delegate/edit permissions even if the mailboxes are on different region.

## Current Behavior
There is no ItemId on shared calendar item when the shared mailbox is in a different region

## Steps to Reproduce, or Live Example
1. On Multi-Geo setup of Office 365, share a calendar to a user on different region
2. e.g. When a user with mailbox in APAC that shares calendar with a user who's mailbox is NAM with delegate/write access.
3. Open the APAC user shared calendar item from NAM user's Outlook desktop. 
4. Outlook.context.mail.item.itemId is undefined.

![image](https://user-images.githubusercontent.com/52792802/93629333-1d59a600-f9b6-11ea-87d5-3c012de5d0e9.png)

![image](https://user-images.githubusercontent.com/52792802/93629347-22b6f080-f9b6-11ea-86bf-2aad46a40b66.png)

payload json: 
[0,[[1,1],""{\""hostVersion\"":\""16.0.12325.20298\"", \""itemType\"":5, \""permissionLevel\"":2, \""userEmailAddress\"":\""Anil.Srikantham@Blackstone.com\"", \""userDisplayName\"":\""<REDACTED>\"", \""userProfileType\"":\""office365\"", \""conversationId\"":null, \""userTimeZone\"":\""Eastern Standard Time\"", \""ewsUrl\"":\""https://outlook.office365.com/EWS/Exchange.asmx\"", \""restUrl\"":\""https://outlook.office.com/api\"", \""isFromSharedFolder\"":true, \""shouldRunNewCodeForFlags\"":1, \""seriesId\"":\""<REDACTED>\"", \""itemNumber\"":39}""]]

Let me know if you need additional details.

"
https://api.github.com/repos/OfficeDev/office-js/issues/1388,External requests blocked due to Content Security Policy issue,"We are developing Outlook Web Addin. 

To achieve our desired functionality, we are making HTTP Requests to our backend servers from our addin.

This works fine when using the `MessageReadCommandSurface` `ExtensionPoint` where we are showing  a taskpane.

However, when we try to use `MessageComposeCommandSurface`, and we use the following manifest snippet inside it:

```xml
<Action xsi:type=""ExecuteFunction"">
   <FunctionName>functionName</FunctionName>
</Action>
```

This `functionName` is actually defined in a `js` file, which is called from the HTML file (this is defined as a `FunctionFile` in the manifest)

Here, again, we are making HTTP request to our backend server

Now, we are facing the following error in the browser console:

```
[Report Only] Refused to run the JavaScript URL because it violates the following Content Security Policy directive: ""script-src 'nonce-I193+SQXP9Xe6RXcQym8Mw==' *.res.office.com *.res.office365.com *.cdn.office.net *.cdn.partner.outlook.cn owassets.azureedge.net *.blob.core.windows.net outlookdev.azureedge.net wss://*.delve.office.com:443 shellprod.msocdn.com amcdn.msauth.net amcdn.msftauth.net *.bing.com *.skype.com *.skypeassets.com *.delve.office.com *.cdn.office.net *.cdn.partner.outlook.cn static.teams.microsoft.com *.arkoselabs.com fabriciss.azureedge.net *.googleapis.com teams.microsoft.com 'report-sample' 'self' 'unsafe-inline' 'unsafe-eval' *.yammer.com"". Note that 'unsafe-inline' is ignored if either a hash or nonce value is present in the source list.
```

We have inspected the console and we have found out that the first request to our backend server is being blocked to our server because of some CSP condition.

## Expected Behavior
The browser would not be prevented from making HTTP requests to our backend server.

## Current Behavior
The HTTP requests are blocked to our backend server.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the Web
- Host [Excel, Word, PowerPoint, etc.]: Outlook
- Office version number: Microsoft Outlook for Office 365 MSO (16.0.12527.20260) 64-bit
- Operating System: Window 10
* Browser (if using Office on the web): Mozilla Firefox 80.0 | Chrome Version 84.0.4147.105 (Official Build) (64-bit)

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [x] Screenshots


<img width=""1440"" alt=""csp-browser-console"" src=""https://user-images.githubusercontent.com/8980971/93220696-7c3ad780-f78a-11ea-91e2-4fe6f3ced70e.png"">

<img width=""834"" alt=""csp-compose-pane"" src=""https://user-images.githubusercontent.com/8980971/93220721-8361e580-f78a-11ea-98f7-965ae9d1840f.png"">

- [x] Test file (if only happens on a particular file)

CC @mihirsn @ankitsurkar @shubhashishtiwari"
https://api.github.com/repos/OfficeDev/office-js/issues/1385,[Outlook ] custom properties disappeared on Mac shared calendar,"<!--- Provide a general summary of the issue in the Title above -->
This a problem happening recently. I have met this problem on both 'production' version and 'Inside fast' version.
Production version is 16.40(20081000)
Insider fast version is 16.41 (20083005)
related api :
Office.context.mailbox.item.loadCustomPropertiesAsync

## Expected Behavior
Add-in can save custom properties successfully on Mac Outlook client.

## Current Behavior
The properties will disappear after about one minutes. And this problem only happened on Mac Outlook shared calendar.

## Steps to Reproduce, or Live Example
1. open an add-in then save some thing to custom properties.
2.Save or send this ,open it after one or two minutes. The twice or third time open. The properties will disappear.

I have already make sure the delegate permission is enough.

## Context
The meeting we scheduled by add-in can not be edit any more. 

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.41 (20083005)
* Operating System: 15.5
* Browser (if using Office on the web): ______

This problem have a big effect on add-in . Any request please let me know.
Thanks"
https://api.github.com/repos/OfficeDev/office-js/issues/1384,"Empty attachment id in ""New Outlook"" on Mac","On ""New Outlook"" `window.Office.context.mailbox.item.attachments` returns an array of attachments with empty ids:
```json
[
  {
    ""id"": """",
    ""name"": ""image001.jpg"",
    ""isInline"": true
  },
  {
    ""id"": """",
    ""name"": ""image002.jpg"",
    ""isInline"": false
  }
]
```

## Expected Behavior
Attachment id should be present in `window.Office.context.mailbox.item.attachments` array.

## Current Behavior
Attachment id is an empty string `""""`

## Steps to Reproduce, or Live Example
Enable ""Insider Fast"", enable ""New Outlook"". Check `window.Office.context.mailbox.item.attachments` output. Attachments don't have ids.

## Context
This blocks us retrieve attachments via REST API/EWS API.

## Your Environment
* Platform: Mac
* Host: Outlook
* Office version number: 16.42 (20090901)
* Operating System: macOS Catalina v10.15.6"
https://api.github.com/repos/OfficeDev/office-js/issues/1379,unable to call a function once all the data has been retrieved and call a python API inside outlook add-in,"I am trying to get the subject, email Ids, and pass them in a function once the values are retrieved. How do I check if the values have been already picked? Once that is done I am trying to call a python API inside outlook add-in. I tried using ajax and XMLHttpRequest but unable to trigger the API from outlook add-in.

The code is mentioned below used for calling the API:

`function sendEmail(recipients, cc, bcc, sub, start, end) {
  var xhr = new XMLHttpRequest();
  write(""<br/>Inside Send Email<br/>"");
  var payload_data = JSON.stringify({
    ""torecipients"": recipients,
    ""ccrecipients"": cc,
    ""bccrecipients"": bcc,
    ""subject"" : sub,
    ""startTime"" : start,
    ""endTime"" : end
  });

  write(""<br/> payload_data:"" + payload_data + ""<br/>"")
  
  $.ajax({
    url: 'https://127.0.0.1:5895/meeting',
    data : payload_data,
    type : 'POST',
    error: function(xhr, status, error) {
      write(""Error"" + error);
    }
  }).done(function(dataa) {
    write(""Data:"" + data);
  })`"
https://api.github.com/repos/OfficeDev/office-js/issues/1376,unable to get an unique identifier from outlook,"I have posted the question on outlook as well. 
I am looking for a unique identifier like `GlobalAppointmentID` in VBA. 
https://stackoverflow.com/questions/63811514/how-to-get-an-unique-identifier-to-identify-an-appointment-in-outlook-appointme"
https://api.github.com/repos/OfficeDev/office-js/issues/1374,Unable to retrieve attachment with EWS request ,"I am writing an Outlook add-in that will retrieve a mail's attachment.
(I am not simply using item.attachments because I want to be able to retrieve the S/MIME attachment and item.attachments will not include that)

My code:
https://gist.github.com/hthjthtrh/9627d2731be3aebbfddb4d8dc26e6fe2

Response:
https://gist.github.com/hthjthtrh/4ea1521052936b9ee187e7a5456623dd

In the email that I'm testing, I have pdf, jpg and xlsx files attached. I am able to retrieve the attachmentId but can't use that ID to retrieve the content. How can I gain access to perform the request?"
https://api.github.com/repos/OfficeDev/office-js/issues/1370,[Outlook ] mobile add-in can not be installed on Exchange 2016,"<!--- Provide a general summary of the issue in the Title above -->
When we trying install add-in on mobile end with Exchange 2016. Add-in can not install success.
Any idea?

## Expected Behavior
Add-in can install successful on mobile end with Exchange 2016.

## Current Behavior
Can't see add-in on mobile outlook end.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Android
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 
* Operating System: Android
* Browser (if using Office on the web): 

"
https://api.github.com/repos/OfficeDev/office-js/issues/1364,"Outlook Desktop, Outlook for Mac, setSelectedDataAsync produces incorrect formatting for bulleted and numbered lists","In an Outlook add-in for compose mode, we use the Office JS API to fill in email fields. The setSelectedDataAsync method inserts HTML with incorrect markup.

## Expected Behavior
The setSelectedDataAsync method should work as expected.

## Current Behavior
The setSelectedDataAsync method ignores markup and produces a list with no bullets/numbers and with an extra empty line in between.

## Steps to Reproduce, or Live Example
Create a new email in Outlook Desktop or Outlook for Mac and execute the code below.

`    Office.context.mailbox.item.setSelectedDataAsync(`
`      '<ul style=""margin-left:0cm;"">' +`
`      '  <li><span>Line 1</span></li>' +`
`      '  <li><span>Line 2</span></li>' +`
`      '  <li><span>Line 3</span></li>' +`
`      '</ul>',`
`      { coercionType: Office.CoercionType.Html },`
`      (result) => { }`
`    );`


* Additional details:
  1. Everything seems to work fine in Outlook Online.

## Context

## Your Environment
* Platform: PC desktop, Mac
* Host: Outlook
* Office version number: Microsoft Outlook Version 2008 (build 13127.20296), Microsoft Outlook for Mac Version 16.40 (20081201)
* Operating System: Windows 10 version 2004, macOS Catalina Version 10.15.6
* Browser (if using Office on the web): ______

## Useful logs
![image](https://user-images.githubusercontent.com/28924916/92001679-a4b4e180-ed47-11ea-9de2-572c52f01ceb.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1362,Empty ewsUrl in Outlook for Mac when using Gmail account,"I've connected my Gmail account to Outlook for Mac and tried to get `window.Office.context.mailbox.ewsUrl`, it returns an empty string `''`. I tried to log into my Gmail account using OWA and there it works, it returns `https://outlook.office365.com/EWS/Exchange.asmx`.

## Expected Behavior
Outlook for Mac to be consistent with OWA and return `ewsUrl` when accessing `window.Office.context.mailbox.ewsUrl`.

## Current Behavior
`window.Office.context.mailbox.ewsUrl` is an empty string `''` in Outlook for Mac when using Gmail account.

## Steps to Reproduce, or Live Example
1. Add your Gmail account to Outlook for Mac, run add-in in taskpane. Check `window.Office.context.mailbox.ewsUrl`. It will be an empty string `''`.
1. Add your Gmail account to OWA (outlook.live.com), run add-in in a taskpane. Check `window.Office.context.mailbox.ewsUrl`. It should be something like `https://outlook.office365.com/EWS/Exchange.asmx`.

## Context
We can't access attachments via EWS API, since there's no `ewsUrl`.

## Your Environment
* Platform: Mac
* Host: Outlook
* Office version number: Outlook for Mac, version 16.40 (20081201)
* Operating System: macOS Catalina 10.15.6
* Browser: Chrome 85.0.4183.83 (it works in this browser in OWA)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1360,Outlook/Word Windows 10 Getting Body Text Briefly Hangs Document On Certain Devices,"Currently, our add-in has logic in both Outlook and Word to poll the Word document for current body text or the Outlook mailbox item body text every 5 seconds and perform processing on it. In almost every environment I've tested (Mac, Web, and most Windows 10 environments), the documents are polled with no interrupt to the document, but on these specific organization managed, Windows 10, Surface Pro tablets, the document will hang as I'm typing and random keystrokes will not be entered in the document.

For Outlook, I'm using this code block to get body text:
```
window.Office.context.mailbox.item.body.getAsync(window.Office.CoercionType.Text, {}, (asyncResult) => {
  this.doSomethingWithText(asyncResult.value)
})
```

For Word, I'm using this code block to get body text:
```
window.Word.run((context) => {
  let documentBody = context.document.body
  context.load(documentBody)
  return context.sync().then(() => {
    this.doSomethingWithText(documentBody.text)
  })
})
```

**Note**: The problem is less frequent, but still occurs if I change the setInterval from 5 seconds to say 30 seconds.

## Expected Behavior
I expect for the document to not hang when getting the document text in every environment and all keystrokes to register appropriately. 

## Current Behavior
On these specific organization managed, Windows 10, Surface Pro tablets, the document will hang as I'm typing and random keystrokes will not be entered in the document.

## Steps to Reproduce, or Live Example
You should be able to reproduce the issue by installing the [Huna Add-In](https://appsource.microsoft.com/en-us/product/office/WA200001943) in Word on Windows 10.

But, if not, a simple application with a setInterval that calls a function with one of the above code blocks should trigger it.

## Context
Trying to prevent any Huna users from having to experience this issue while they're working, especially since it may not be apparent to a lot of users where this problem is coming from, and, in the worst case, if they do understand they may remove the add-in over the issue.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC
* Host [Excel, Word, PowerPoint, etc.]: Word / Outlook
* Office version number: Version 2007 (Build 13029.20460)
* Operating System: Windows 10 Enterprise Version 2004 (Build 19041.388)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1355,Office.context.mailbox.item is undefined,"## Expected Behavior
 Office.context.mailbox.item should bring data

## Current Behavior
 Office.context.mailbox.item is undefined

## Steps to Reproduce, or Live Example
```
function (response) {
                        $rootScope.isLogged = true;
                        $scope.$close();

                        if (!loginOutlookService.isEvent(Office.context.mailbox)) {
                            var toMails = """";
                            for (var i = 0; i < Office.context.mailbox.item.to.length; i++) {
                                toMails += Office.context.mailbox.item.to[i].emailAddress + "";"";
                            }
                            var CCMails = """";
                            for (i = 0; i < Office.context.mailbox.item.cc.length; i++) {
                                CCMails += Office.context.mailbox.item.cc[i].emailAddress + "";"";
                            }
                            alreadyMatterAttachedByOtherUserTransparentService.isAlreadyMatterAttachedByOtherUser(Office.context.mailbox.item.internetMessageId, Office.context.mailbox.item.subject, Office.context.mailbox.item.dateTimeCreated.toUTCString(), Office.context.mailbox.item.from.emailAddress, toMails, CCMails).then(function (response) {
                                if (response.data.alreadyAttached) {
                                    $rootScope.myModalAlreadyMatterAttachedByOtherUser = $uibModal.open({ templateUrl: 'AlreadyMatterAttachedByOtherUser.html', controller: 'AlreadyMatterAttachedByOtherUserTransparentController', backdrop: 'static' });
                                }
                            });
                            Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, function (eventArgs) {
                                var toMails = """";
                                for (var i = 0; i < Office.context.mailbox.item.to.length; i++) {
                                    toMails += Office.context.mailbox.item.to[i].emailAddress + "";"";
                                }
                                var CCMails = """";
                                for (i = 0; i < Office.context.mailbox.item.cc.length; i++) {
                                    CCMails += Office.context.mailbox.item.cc[i].emailAddress + "";"";
                                }

                                alreadyMatterAttachedByOtherUserTransparentService.isAlreadyMatterAttachedByOtherUser(Office.context.mailbox.item.internetMessageId, Office.context.mailbox.item.subject, Office.context.mailbox.item.dateTimeCreated.toUTCString(), Office.context.mailbox.item.from.emailAddress, toMails, CCMails).then(function (response) {
                                    if (response.data.alreadyAttached) {
                                        $rootScope.myModalAlreadyMatterAttachedByOtherUser = $uibModal.open({ templateUrl: 'AlreadyMatterAttachedByOtherUser.html', controller: 'AlreadyMatterAttachedByOtherUserTransparentController', backdrop: 'static' });
                                    }
                                });
                                $rootScope.shouldRefresh = true;
                            });
                        }
                    }
```


* Additional details:
(The Email must have 1 attachment)
1- Open a mail in a new window
2- Only happens if you preview the attachment first and then load the addin(i´ve tried with doc and pdf and i got the same result)
3- Load the addin and retrieve the data of the mail 
4- The data now is undefined

## Context
We are importing emails to our software and without the email data we cant.
This only happens if you open the email in a new window and  you preview the attachment first. If you don´t open the preview it brings the data in the ""item"" field correctly.


Video 

https://vimeo.com/453268614

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop, OWA and office365
* Host [Excel, Word, PowerPoint, etc.]: ______
* Office version number: ___
* Operating System: Win 10
* Browser (if using Office on the web): Edge insider, Chrome

## Useful logs

- [X ] Console errors

`TypeError: Cannot read property 'itemType' of undefined
    at Object.factory.isEvent (OutlookRelatedMatters.js:1464)
    at OutlookRelatedMatters.js:994
    at processQueue (angular.js:14569)
    at angular.js:14585
    at Scope.$eval (angular.js:15848)
    at Scope.$digest (angular.js:15659)
    at Scope.$apply (angular.js:15953)
    at done (angular.js:10366)
    at completeRequest (angular.js:10538)
    at XMLHttpRequest.requestLoaded (angular.js:10479)`

- [ X] Screenshots
![Office](https://user-images.githubusercontent.com/23103235/91718319-6aa2de80-eb93-11ea-8224-8d9e8c1ec710.PNG)





"
https://api.github.com/repos/OfficeDev/office-js/issues/1350,Outlook: on-send handler occasionally fails to prependAsync with addRange(): The given range isn't in document.,"An add-in implementing the on-send handler experiences occasional prependAsync failures. In general it succeeds but there are seemingly random failures. I'm not sure what is different to cause the failures.

## Expected Behavior
The prependAsync call should consistently prepend our header or return an error.

## Current Behavior
Certain unknown circumstances seem to cause prependAsync to fail to add our header.

## Steps to Reproduce, or Live Example
```javascript
export function prependValue(item, ...args): Promise<void> {
  return new Promise((resolve, reject) => {
    // set up common callback
    let cb = (result: Office.AsyncResult<void>) => {
      if (result.status === Office.AsyncResultStatus.Succeeded) {
        resolve();
      } else {
        console.log('PREPEND VALUE ERROR');
        console.log(result);
        reject(result.error);
      }
    };
    // call appropriate method
    item.prependAsync(...args, cb);
  });
}

export async function onSendHandler(event) {
  // ... redacted ...
  let email = Office.context.mailbox.item as Office.MessageCompose;
  // ... redacted ...
  try {
    await prependValue(email.body, someHtml, { coercionType: Office.CoercionType.Html });
    event.completed({ allowEvent: true });
  } catch (e) {
    console.log('ERROR');
    console.log(e);
    event.completed({ allowEvent: false });
  }
}
```
* Additional details:
  1. an error is NOT thrown (prependAsync returns Succeeded???) when the html header fails to prepend
  2. an error IS printed out
    addRange(): The given range isn't in document.

## Context
Our product will frequently send emails to users who do not have the add-in installed. They will not know about our product or its features without our header.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: This has been seen on Mac & Office on the web
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Outlook for Mac 16.40 (20081000)
* Operating System: MacOS 10.15.5
* Browser (if using Office on the web): Chrome 84.0.4147.135

## Useful logs
```
addRange(): The given range isn't in document.
t.selectRange	@	selectRange.ts:70
t.focus	@	owa.41.js:1
e.focus	@	Editor.ts:617
(anonymous)	@	prependContentToEditor.ts:26
(anonymous)	@	operateContent.ts:117
u	@	index.ts:1
m	@	createTempHtmlEditor.ts:8
(anonymous)	@	prependContentToEditor.ts:23
Promise.then (async)		
o	@	prependContentToEditor.ts:21
(anonymous)	@	SubjectAdapter.ts:11
(anonymous)	@	setDataAsyncApiMethodBase.ts:66
(anonymous)	@	VM12 inbox:344
(anonymous)	@	VM12 inbox:344
a	@	VM12 inbox:344
Promise.then (async)		
s	@	VM12 inbox:344
(anonymous)	@	VM12 inbox:344
l	@	VM12 inbox:344
oe	@	owa.MailBoot~Addins~…s-marketplace.js:12
(anonymous)	@	bodyPrependAsyncApiMethod.ts:28
(anonymous)	@	VM12 inbox:344
(anonymous)	@	VM12 inbox:344
(anonymous)	@	VM12 inbox:344
l	@	VM12 inbox:344
(anonymous)	@	owa.MailBoot~Addins~…s-marketplace.js:12
hn	@	executeApiMethod.ts:82
(anonymous)	@	EndpointRegistrator.ts:41
invoke	@	osfruntime.js:2246
T	@	osfruntime.js:1710
x	@	osfruntime.js:1701
setInterval (async)		
U	@	osfruntime.js:1890
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1349,Outlook: Office.context.mailbox.item.isAllDayEvent is undefined (always),"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
Office.context.mailbox.item.isAllDayEvent should return either a boolean or a IsAllDayEvent object

## Current Behavior
Always retuning undefined

<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
open an event
open the add-in sidepane
console.log the Office.context.mailbox.item.isAllDayEvent object

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform : Mac OS Catalina 10.15.6
* Browser : Chrome V 84.0.4147.135 (Official Build) (64-bit)
* office.js versioin : 1.1 (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js  ) 
"
https://api.github.com/repos/OfficeDev/office-js/issues/1348,Office.context.mailbox.userprofile doesnt work correct with shared mailboxes,"<!--- Provide a general summary of the issue in the Title above -->
## Expected Behavior
<!--- Tell us what you expected to happen -->
i use Office.context.mailbox.userProfile.emailAddress to get the information and need to get the email adress of the shared mailbox.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
in outlook web everything works fine but in the client i always get my userprofile instead of the profile of the current [mailbox.]

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. just try to get the Office.context.mailbox.userProfile.emailAddress from a shared mailbox in the client application

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I use the office-js with shared mailboxes and need to get the current mailbox email adress.
probably it is a bug inside the client application cause if i add a mailbox and right click it and click on **Data File Properties** (at the bottom of the context menu) and after that click on **Advanced...**. i see my email adress instead of the mailbox adress.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Windows
* Host [Excel, Word, PowerPoint, etc.]: Outlook Client
* Office version number: 2008 (Build 13127.20208 Click-to-Run) Current Channel (Preview)
* Operating System: Windows 10
* Browser (if using Office on the web): Chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/1347,Mac Outlook: client add-in not support prompt for cert selection when using adfs to doing sso login,"as the bug title, when we enable the prompt for cert selection on adfs sso login. when we login to adfs from the browser, it prompts for my certificate selection as it should, and I can select and sign in without any issue. But it seams not support the outlook client add-in. when we call **Office.context.ui.displayDialogAsync** to load our adfs login page. it doesn't prompt anything.

there is a demo code for reproduce this problem:
the manifest file:
```
<?xml version=""1.0"" encoding=""UTF-8""?>
<OfficeApp
          xmlns=""http://schemas.microsoft.com/office/appforoffice/1.1""
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
          xmlns:bt=""http://schemas.microsoft.com/office/officeappbasictypes/1.0""
          xmlns:mailappor=""http://schemas.microsoft.com/office/mailappversionoverrides/1.0""
          xsi:type=""MailApp"">

  <!-- Begin Basic Settings: Add-in metadata, used for all versions of Office unless override provided. -->

  <!-- IMPORTANT! Id must be unique for your add-in, if you reuse this manifest ensure that you change this id to a new GUID. -->
  <Id>a7ca6c74-33fb-43a4-a3e4-781078f0eff7</Id>

  <!--Version. Updates from the store only get triggered if there is a version change. -->
  <Version>1.7.0.0</Version>
  <ProviderName>Zoom Video Communications, Inc</ProviderName>
  <DefaultLocale>en-US</DefaultLocale>
  <!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. -->
  <DisplayName DefaultValue=""Zoom""/>
  <Description DefaultValue=""Zoom Schedule Add-in""/>
  <IconUrl DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/icon-64.png"" />
  <HighResolutionIconUrl DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/icon-128.png"" />
  <SupportUrl DefaultValue=""https://support.zoom.us/"" />

  <!-- Domains that will be allowed when navigating. For example, if you use ShowTaskpane and then have an href link, navigation will only be allowed if the domain is on this list. -->
  <AppDomains>
    <AppDomain>https://zoom.us</AppDomain>
    <AppDomain>https://zoomgov.com</AppDomain>
    <AppDomain>https://zoom.com</AppDomain>
    <AppDomain>https://us02web.zoom.us</AppDomain>
    <AppDomain>*.zoom.us</AppDomain>
    <AppDomain>*.zoomgov.com</AppDomain>
    <AppDomain>*.zoom.com</AppDomain>
    <AppDomain>*.us02web.zoom.us</AppDomain>
  </AppDomains>
  <!--End Basic Settings. -->

  <Hosts>
    <Host Name=""Mailbox"" />
  </Hosts>
  <Requirements>
    <Sets>
      <Set Name=""Mailbox"" MinVersion=""1.1"" />
    </Sets>
  </Requirements>
  <FormSettings>
    <Form xsi:type=""ItemRead"">
      <DesktopSettings>
        <SourceLocation DefaultValue=""https://us02web.zoom.us/office365/schedule""/>
        <RequestedHeight>250</RequestedHeight>
      </DesktopSettings>
    </Form>
  </FormSettings>

  <Permissions>ReadWriteItem</Permissions>
  <Rule xsi:type=""RuleCollection"" Mode=""Or"">
  <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Edit"" />
  <Rule xsi:type=""ItemIs"" ItemType=""Appointment"" FormType=""Edit"" />
  </Rule>
  <DisableEntityHighlighting>false</DisableEntityHighlighting>

  <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
    <Requirements>
        <bt:Sets DefaultMinVersion=""1.3"">
          <bt:Set Name=""Mailbox"" />
        </bt:Sets>
    </Requirements>
    <Hosts>
      <Host xsi:type=""MailHost"">
        <DesktopFormFactor>
          <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
          <FunctionFile resid=""functionFile"" />
          <ExtensionPoint xsi:type=""AppointmentOrganizerCommandSurface"">
            <OfficeTab id=""TabDefault"">
              <Group id=""msgReadGroup"">
                <Label resid=""groupLabel"" />
                <Control xsi:type=""Button"" id=""addZoomButton"">
                  <Label resid=""addZoomButtonLabel"" />
                  <Tooltip resid=""addZoomButtonTooltip"" />
                  <Supertip>
                    <Title resid=""addZoomButtonTipTitle"" />
                    <Description resid=""addZoomButtonTipDescription"" />
                  </Supertip>
                  <Icon>
                    <bt:Image size=""16"" resid=""addzoom16"" />
                    <bt:Image size=""32"" resid=""addzoom32"" />
                    <bt:Image size=""80"" resid=""addzoom80"" />
                  </Icon>
                  <Action xsi:type=""ExecuteFunction"">
                    <FunctionName>oneclickPrepareMeeting</FunctionName>
                  </Action>
                </Control>
                    <!-- Task pane button -->
                    <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                      <Label resid=""paneReadButtonLabel"" />
                      <Supertip>
                        <Title resid=""paneReadSuperTipTitle"" />
                        <Description resid=""paneReadSuperTipDescription"" />
                      </Supertip>
                      <Icon>
                        <bt:Image size=""16"" resid=""settings16"" />
                        <bt:Image size=""32"" resid=""settings32"" />
                        <bt:Image size=""80"" resid=""settings80"" />
                      </Icon>
                      <Action xsi:type=""ShowTaskpane"">
                        <SourceLocation resid=""messageReadTaskPaneUrl"" />
                      </Action>
                    </Control>
                  </Group>
                </OfficeTab>
              </ExtensionPoint>
        </DesktopFormFactor>
      </Host>
    </Hosts>
    <Resources>
      <bt:Images>
        <bt:Image id=""addzoom16"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-16.png""/>
        <bt:Image id=""addzoom32"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-32.png""/>
        <bt:Image id=""addzoom80"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-80.png""/>
        <bt:Image id=""settings16"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-16.png""/>
        <bt:Image id=""settings32"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-32.png""/>
        <bt:Image id=""settings80"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-80.png""/>
      </bt:Images>
      <bt:Urls>
        <bt:Url id=""messageReadTaskPaneUrl"" DefaultValue=""https://us02web.zoom.us/office365/schedule""/>
        <bt:Url id=""functionFile"" DefaultValue=""https://us02web.zoom.us/office365/addzoom""/>
      </bt:Urls>
      <bt:ShortStrings>
        <bt:String id=""groupLabel"" DefaultValue=""Zoom""/>
        <bt:String id=""customTabLabel""  DefaultValue=""Zoom""/>
        <bt:String id=""paneReadButtonLabel"" DefaultValue=""Settings"">
          <bt:Override Locale=""es-ES"" Value=""Configuración"" />
          <bt:Override Locale=""de-DE"" Value=""Einstellungen"" />
          <bt:Override Locale=""zh-CN"" Value=""设置"" />
          <bt:Override Locale=""zh-TW"" Value=""設定"" />
          <bt:Override Locale=""fr-FR"" Value=""Paramètres"" />
          <bt:Override Locale=""pt-PT"" Value=""Configurações"" />
          <bt:Override Locale=""ja-jp"" Value=""設定"" />
          <bt:Override Locale=""ru-RU"" Value=""Настройки"" />
          <bt:Override Locale=""ko-KR"" Value=""설정"" />
        </bt:String>
        <bt:String id=""paneReadSuperTipTitle"" DefaultValue=""Meeting Settings""/>
        <bt:String id=""addZoomButtonLabel"" DefaultValue=""Add a Zoom Meeting"">
          <bt:Override Locale=""es-ES"" Value=""Añadir reunión de Zoom"" />
          <bt:Override Locale=""de-DE"" Value=""Zoom-Meeting hinzufügen"" />
          <bt:Override Locale=""zh-CN"" Value=""添加Zoom会议"" />
          <bt:Override Locale=""zh-TW"" Value=""新增Zoom會議"" />
          <bt:Override Locale=""fr-FR"" Value=""Ajouter une réunion Zoom"" />
          <bt:Override Locale=""pt-PT"" Value=""Adicionar reunião do Zoom"" />
          <bt:Override Locale=""ja-jp"" Value=""Zoomミーティングを追加"" />
          <bt:Override Locale=""ru-RU"" Value=""Добавить конференцию Zoom"" />
          <bt:Override Locale=""ko-KR"" Value=""Zoom 회의 추가"" />
        </bt:String>
        <bt:String id=""addZoomButtonTipTitle"" DefaultValue=""Schedule Zoom Meeting""/>
      </bt:ShortStrings>
      <bt:LongStrings>
        <bt:String id=""paneReadSuperTipDescription"" DefaultValue=""Meeting Settings""/>
        <bt:String id=""addZoomButtonTipDescription"" DefaultValue=""Schedule Zoom Meeting""/>
      </bt:LongStrings>
    </Resources>

    <!-- Implement schema v1.1 to support more new features -->
    <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
      <Requirements>
        <bt:Sets DefaultMinVersion=""1.3"">
          <bt:Set Name=""Mailbox"" />
        </bt:Sets>
      </Requirements>
      <Hosts>
        <Host xsi:type=""MailHost"">
          <DesktopFormFactor>
            <SupportsSharedFolders>true</SupportsSharedFolders>
            <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
            <FunctionFile resid=""functionFile"" />
            <ExtensionPoint xsi:type=""AppointmentOrganizerCommandSurface"">
              <OfficeTab id=""TabDefault"">
                <Group id=""msgReadGroup"">
                  <Label resid=""groupLabel"" />
                  <Control xsi:type=""Button"" id=""addZoomButton"">
                    <Label resid=""addZoomButtonLabel"" />
                    <Tooltip resid=""addZoomButtonTooltip"" />
                    <Supertip>
                      <Title resid=""addZoomButtonTipTitle"" />
                      <Description resid=""addZoomButtonTipDescription"" />
                    </Supertip>
                    <Icon>
                      <bt:Image size=""16"" resid=""addzoom16"" />
                      <bt:Image size=""32"" resid=""addzoom32"" />
                      <bt:Image size=""80"" resid=""addzoom80"" />
                    </Icon>
                    <Action xsi:type=""ExecuteFunction"">
                      <FunctionName>oneclickPrepareMeeting</FunctionName>
                    </Action>
                  </Control>
                      <!-- Task pane button -->
                      <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                        <Label resid=""paneReadButtonLabel"" />
                        <Supertip>
                          <Title resid=""paneReadSuperTipTitle"" />
                          <Description resid=""paneReadSuperTipDescription"" />
                        </Supertip>
                        <Icon>
                          <bt:Image size=""16"" resid=""settings16"" />
                          <bt:Image size=""32"" resid=""settings32"" />
                          <bt:Image size=""80"" resid=""settings80"" />
                        </Icon>
                        <Action xsi:type=""ShowTaskpane"">
                          <SourceLocation resid=""messageReadTaskPaneUrl"" />
                        </Action>
                      </Control>
                    </Group>
                  </OfficeTab>
                </ExtensionPoint>
          </DesktopFormFactor>
          <MobileFormFactor>
            <FunctionFile resid=""functionFile"" />
            <ExtensionPoint xsi:type=""MobileOnlineMeetingCommandSurface"">
              <Control xsi:type=""MobileButton"" id=""msgReadFunctionButton"">
                <Label resid=""addZoomButtonLabel"" />
                <Icon xsi:type=""bt:MobileIconList"">
                    <bt:Image size=""25"" scale=""1"" resid=""addzoommobile25"" />
                    <bt:Image size=""25"" scale=""2"" resid=""addzoommobile25"" />
                    <bt:Image size=""25"" scale=""3"" resid=""addzoommobile25"" />
                    <bt:Image size=""32"" scale=""1"" resid=""addzoommobile32"" />
                    <bt:Image size=""32"" scale=""2"" resid=""addzoommobile32"" />
                    <bt:Image size=""32"" scale=""3"" resid=""addzoommobile32"" />
                    <bt:Image size=""48"" scale=""1"" resid=""addzoommobile48"" />
                    <bt:Image size=""48"" scale=""2"" resid=""addzoommobile48"" />
                    <bt:Image size=""48"" scale=""3"" resid=""addzoommobile48"" />
                  </Icon>
              <Action xsi:type=""ExecuteFunction"">
                  <FunctionName>oneclickPrepareMeeting</FunctionName>
              </Action>
              </Control>
            </ExtensionPoint>
          </MobileFormFactor>
        </Host>
      </Hosts>

      <Resources>
        <bt:Images>
          <bt:Image id=""addzoom16"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-16.png""/>
          <bt:Image id=""addzoom32"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-32.png""/>
          <bt:Image id=""addzoom80"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-80.png""/>
          <bt:Image id=""settings16"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-16.png""/>
          <bt:Image id=""settings32"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-32.png""/>
          <bt:Image id=""settings80"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/settings-80.png""/>
          <bt:Image id=""addzoommobile25"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-mobile-25.png""/>
          <bt:Image id=""addzoommobile32"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-mobile-32.png""/>
          <bt:Image id=""addzoommobile48"" DefaultValue=""https://d24cgw3uvb9a9h.cloudfront.net/assets/addzoom-mobile-48.png""/>
        </bt:Images>
        <bt:Urls>
          <bt:Url id=""messageReadTaskPaneUrl"" DefaultValue=""https://us02web.zoom.us/office365/schedule""/>
          <bt:Url id=""functionFile"" DefaultValue=""https://us02web.zoom.us/office365/addzoom""/>
        </bt:Urls>
        <bt:ShortStrings>
          <bt:String id=""groupLabel"" DefaultValue=""Zoom""/>
          <bt:String id=""customTabLabel""  DefaultValue=""Zoom""/>
          <bt:String id=""paneReadButtonLabel"" DefaultValue=""Settings"">
            <bt:Override Locale=""es-ES"" Value=""Configuración"" />
            <bt:Override Locale=""de-DE"" Value=""Einstellungen"" />
            <bt:Override Locale=""zh-CN"" Value=""设置"" />
            <bt:Override Locale=""zh-TW"" Value=""設定"" />
            <bt:Override Locale=""fr-FR"" Value=""Paramètres"" />
            <bt:Override Locale=""pt-PT"" Value=""Configurações"" />
            <bt:Override Locale=""ja-jp"" Value=""設定"" />
            <bt:Override Locale=""ru-RU"" Value=""Настройки"" />
            <bt:Override Locale=""ko-KR"" Value=""설정"" />
          </bt:String>
          <bt:String id=""paneReadSuperTipTitle"" DefaultValue=""Meeting Settings""/>
          <bt:String id=""addZoomButtonLabel"" DefaultValue=""Add a Zoom Meeting"">
            <bt:Override Locale=""es-ES"" Value=""Añadir reunión de Zoom"" />
            <bt:Override Locale=""de-DE"" Value=""Zoom-Meeting hinzufügen"" />
            <bt:Override Locale=""zh-CN"" Value=""添加Zoom会议"" />
            <bt:Override Locale=""zh-TW"" Value=""新增Zoom會議"" />
            <bt:Override Locale=""fr-FR"" Value=""Ajouter une réunion Zoom"" />
            <bt:Override Locale=""pt-PT"" Value=""Adicionar reunião do Zoom"" />
            <bt:Override Locale=""ja-jp"" Value=""Zoomミーティングを追加"" />
            <bt:Override Locale=""ru-RU"" Value=""Добавить конференцию Zoom"" />
            <bt:Override Locale=""ko-KR"" Value=""Zoom 회의 추가"" />
          </bt:String>
          <bt:String id=""addZoomButtonTipTitle"" DefaultValue=""Schedule Zoom Meeting""/>
        </bt:ShortStrings>
        <bt:LongStrings>
          <bt:String id=""paneReadSuperTipDescription"" DefaultValue=""Meeting Settings""/>
          <bt:String id=""addZoomButtonTipDescription"" DefaultValue=""Schedule Zoom Meeting""/>
        </bt:LongStrings>
      </Resources>
    </VersionOverrides>
  </VersionOverrides>
</OfficeApp>
```
and code snippet: 
```
Office.context.ui.displayDialogAsync('https://zoom.us/office365/sso', { height: 75, width: 40 }, (result) => {
console.log(result);
});
```
after we call the displayDialogAsync, it will create a new dialog load https://zoom.us/office365/sso. and then, we execute another code snippet on the new dialog:
```
location.href = ""https://adfs.kaspersky.com/adfs/ls/?SAMLRequest=fVLLbsIwELzzFcj3JHZ4FQuoaOkDiQIqtIdekEk2xSKxXa9T2r%2BvSfqW2r15dmd2xvYARZEbPi7dTt3CUwnoGk1fL0WukFfNISmt4lqgRK5EAchdwlfjmxmPQ8qN1U4nOie%2FaP%2BzBCJYJ7WqadPJkCzmF7PF1XS%2Bob0T0e9TRilrs24POtCP2bYdZx26bWXQ7bLeScpatKbeg0WvMyReljRqNcQSpgqdUM7jlPUD2gni7ppSzlq8FT%2FU1IkPK5VwFX3nnEEeRSLNMNwLNF53%2FxomuqigKMeoZi3fA59JlUr1%2BH%2FObT2E%2FHq9XgbLxWpdi4w%2F8p9rhWUBdgX2WSZwdzv7snKALUoHv9wcTJDrR6lCszOnx5veiATJqJIdHM%2B8ym9H%2B4PZ%2BNdJy%2BS4aBB9731NGz73rqeTpc5l8lrhx7rUthDu73AsZBUi0yCrRnmpvMtEZhJS8ikzznN9OLcgHAyJsyWQZjRqNGozP7%2Fd6A0%3D&RelayState=%2Fwp-login.php%3Fredirect_to%3Dhttps%253A%252F%252Fwebsite.kaspersky.com%252F%26reauth%3D1""
```

on the native browser it works fine, here the native browser is chrome(outlookOnline add-in).
![image](https://user-images.githubusercontent.com/1878089/91157757-54f76a00-e6f8-11ea-8ce7-42123503f0cf.png)

But when we execute the same code on mac outlook client build-in browser, the certificate selection dialog didn't prompted as excepted like native browser.
![image](https://user-images.githubusercontent.com/1878089/91158379-2037e280-e6f9-11ea-9698-eb78575f6c2c.png)


**when we tested on windows outlook client, the outlook client not prompted the certificate selection dialog also. But after we login on ie, the login session seams have been remembered on the build-in browser(it seams that the ie and outlook client build-in browser use the seam web session storage and cookie area, so they can sync use the login status.) But this is not support safari and mac outlook client.**"
https://api.github.com/repos/OfficeDev/office-js/issues/1338,could outlook add-in support login to browser and then launch back to outlook add-in(which will callback some message from browser),"as we know, office build-in browser has some limitation for example: security.

when we call **Office.context.ui.displayDialogAsync**, we will open a new tab in build-in browser. but there are some limitation for this dialog. 

I have a login sso case for explain the limitation:
right now, when the add-in want to login to sso, we need call **Office.context.ui.displayDialogAsync**, and then location.href to sso page(for example: azure ad). when we use is build-in browser to login to sso, it may meet some problem for conditional access policy requirement. and the sso login failed.(which is worked fine, in native browser: for example: chrome or IE).

if the outlook add-in support communicate with native browser(for example: chrome), our add-in just need open the sso login link from outlook add-in to chrome. after we login in at chrome, and then launch back to outlook add-in, and contain the callback message(for example: login token), our add-in can login success.

As i have researched, when we try to use gmail to login to outlook client, the outlook client will open a new build-in browser, and then navigation to chrome, after login from chrome it will launch back to outlook(which i notice the launch back link is like: `com.microsoft.office.outlook:/mac/google/oauth2redirect?state=A4D4asdf-4534xxxxxx7DBE2767&code=4/asdfasdxzxzz-9Ro&scope=email%20profile%20https://www.googleapis.com/auth/userinfo.profile%20https://www.googleapis.com/auth/userinfo.email%20https://mail.google.com/%20https://www.googleapis.com/auth/calendar%20https://www.googleapis.com/auth/contacts%20https://www.googleapis.com/auth/drive%20https://www.googleapis.com/auth/user.emails.read%20openid&authuser=1&hd=zasds.com&prompt=consent
`) and login to gmail at outlook client success.

Since the Outlook client supports gmail's interworking login mechanism with the native browser, does it have the same support for Add-in?

I think this is a very good and necessary feature support!


"
https://api.github.com/repos/OfficeDev/office-js/issues/1333,[Outlook] Can't save properties in some shared calendar group,"When we tried save some data to properties in calendar under  'People's calendars' .
Save properties will never be success.
Is this by design? 
We tried save properties in calendar owner's calendar, it works fine.And this only happened on browser.[office online]

## Expected Behavior
Can save properties success or it's by design.

## Current Behavior
Can't save any data to property.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: PC
* Host [Excel, Word, PowerPoint, etc.]: outlook
* Office version number: online
* Operating System: Windows
* Browser (if using Office on the web): Chrome

Any idea?"
https://api.github.com/repos/OfficeDev/office-js/issues/1330,[Outlook] Dialog for Outlook web addin not rendering fonts in Outlook windows client,"We are developing Outlook Web Addin. With the help of `Office.context.ui.displayDialogAsync` we are opening dialog box where our HTML is getting rendered. This HTML is rendering perfectly for all clients such as browsers and Outlook for Mac but problem is with Outlook windows client.
Issue is with font icons which are not getting rendered. We have pre-downloaded font icons from [icomoon](https://icomoon.io/app/#/select). We have provided HTML buttons in dialog box where user can perform some actions. And we are putting icons on these buttons for conveying button functionality.

CSS we are using:
```css
@font-face {
  font-family: 'icomoon';
  src:  url('fonts/icomoon.eot?hkrva0');
  src:  url('fonts/icomoon.eot?hkrva0#iefix') format('embedded-opentype'),
    url('fonts/icomoon.ttf?hkrva0') format('truetype'),
    url('fonts/icomoon.woff?hkrva0') format('woff'),
    url('fonts/icomoon.svg?hkrva0#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
```

## Expected Behavior
Font icons should get rendered in dialog box.

## Current Behavior
In Outlook windows client font icons unable to render

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Because of this issue we are not able give uniform user interface for all clients.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: __PC desktop__
* Host [Excel, Word, PowerPoint, etc.]: __Outlook__
* Office version number: __Microsoft Outlook for Office 365 MSO (16.0.12527.20260) 64-bit__
* Operating System: __Window 10__

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [x] Screenshots
- [ ] Test file (if only happens on a particular file)

IE Screenshot (Working as expected)

![IE](https://user-images.githubusercontent.com/42827526/90247888-2904fa80-de55-11ea-9a9a-b558eff8e5b6.JPG)
---
Outlook windows desktop client Screenshot (Font icons not rendered)

![outlook-windows-desktop-client](https://user-images.githubusercontent.com/42827526/90247890-2a362780-de55-11ea-80dd-5702bcf35ef0.JPG)

@SanketDG
"
https://api.github.com/repos/OfficeDev/office-js/issues/1327,[Outlook] Can't set start/end time of recurring meeting,"For normal events everything works fine, when creating recurring meeting `start.setAsync()` and `end.setAsync()` fails.

## Expected Behavior
Time is set for recurring meeting

## Current Behavior
Internal Error

## Steps to Reproduce, or Live Example
Open new meeting,
Create any recurrence pattern,
Use `Office.context.mailbox.item.start.setAsync()` or `Office.context.mailbox.item.end.setAsync()`
Result to callback will be with `5001` error 

## Context
I am trying to change end time of meeting, but it doesnt work for meeting with recurrence. Same code works fine in Outlook Web, even for recurring meetings.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 1910 (Build 12130.20272)
* Operating System: Windows

## Useful logs
`
{
   error: {
      code: 5001,
      message: ""An internal error has occurred."",
      name: ""Internal Error"",
   },
   status: ""failed"",
   value: undefined
}
`
"
https://api.github.com/repos/OfficeDev/office-js/issues/1326,When hosted officeaddin site is down.,"Hi,

In a scenario that an Outlook Addin needs triggering the ""OnSend"" event - the manifest looks for the configured implementation.. but what happens if the implementation for the Command URL is not available -say the site hosting the implementation is not available? at the moment for me it looks like it will no longer be possible to send emails unless you disable the office addin. - what would be nice would be to be given the option to not proceed with the office addin implementation if the hosted implementation is not available. - what do we do in such scenarios? 

"
https://api.github.com/repos/OfficeDev/office-js/issues/1312,Office.context.mailbox.item.recurrence.getAsync throws error ,"<!--- Provide a general summary of the issue in the Title above -->

When making a call to `Office.context.mailbox.item.recurrence.getAsync` on an existing recurring appointment it throws the following error:

`
Uncaught TypeError: Cannot read property 'startYear' of undefined
    at SeriesTime.importFromSeriesTimeJsonObject (outlook-web-16.01.debug.js:13514)
    at seriesTimeJsonConverter (outlook-web-16.01.debug.js:14879)
    at outlook-web-16.01.debug.js:9783
    at Object.invokeResponseCallback [as callback] (outlook-web-16.01.debug.js:9819)
    at _receive (outlook-web-16.01.debug.js:4650)
`


## Expected Behavior
 Returns the entire Recurrence object for the appointment series.

## Current Behavior
The above error is thrown. If I debug `SeriesTime.prototype.importFromSeriesTimeJsonObject` it looks like the `jsonObject` parameter being passed is occasionally undefined causing the aforementioned error.

## Steps to Reproduce, or Live Example

1. Access the outlook web application
2. Create a recurring appointment (in my case I've been trying a daily recurrence for 4 days).
3. Open the recurrence for editing (single occurrence ""this"" edit, ""this and followng"" edit, or entire series edit)
4. Attempt to make the `Office.context.mailbox.item.recurrence.getAsync` call.

## Context
I need the recurrence information to properly display information to the users of our outlook add-in.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: latest of office on the web on August 4th 2020
* Operating System: MacOS
* Browser (if using Office on the web): Chrome

## Useful logs
- [x] Console errors
- [x] Screenshots
- [ ] Test file (if only happens on a particular file)
`
Uncaught TypeError: Cannot read property 'startYear' of undefined
    at SeriesTime.importFromSeriesTimeJsonObject (VM14 outlook-web-16.01.debug.js:13514)
    at seriesTimeJsonConverter (VM14 outlook-web-16.01.debug.js:14879)
    at VM14 outlook-web-16.01.debug.js:9783
    at Object.invokeResponseCallback [as callback] (VM14 outlook-web-16.01.debug.js:9819)
    at _receive (VM14 outlook-web-16.01.debug.js:4650)
`

![screenshot1](https://user-images.githubusercontent.com/69220875/89350066-85edfd00-d66c-11ea-89fb-691071878d95.png)

![screenshot2](https://user-images.githubusercontent.com/69220875/89350062-838ba300-d66c-11ea-9fe5-a5cc3524f356.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1304,[Outlook ] getSharedPropertiesAsync not supported on Mac ,"<!--- Provide a general summary of the issue in the Title above -->
getSharedPropertiesAsync  not supported on Mac yet.
Is there any plan this feature will be done?


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: Mac

"
https://api.github.com/repos/OfficeDev/office-js/issues/1301,Office Dialog API not working on Outlook Client from Outlook AddIn,"Pop-Up opened with office dialog API not getting closed in Outlook Client. It is working for OWA. We are trying to open dialog using Outlook -AddIn.

## Expected Behavior
Pop-Up should close on every environment.

## Current Behavior
Pop-Up not getting close in Outlook Client from Outlook Add-In.

## Steps to Reproduce, or Live Example
Template used for Outlook AddIn  :Office Add-in Task Pane project using React framework

## Context
Using Dialog API to open Authentication form but normal dialog also without any authentication flow is not getting closed.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook Client
* Office version number: 2002
* Operating System: Windows 10/ Windows Server 2016
* Browser (if using Office on the web):NA

## Useful logs
Below are the sample snippet to open and close the dialog.

Open Dialog using Dialog API
Office.context.ui.displayDialogAsync(
        ""https://localhost:3000/login/login.html"",
        { height: 40, width: 30, promptBeforeOpen: false, displayInIframe: false },
        (result) => {
            if (result.status === Office.AsyncResultStatus.Failed) {
            }
            else {
                loginDialog = result.value;
                loginDialog.addEventHandler(Office.EventType.DialogMessageReceived, processLoginMessage); // this callback  method is used to close the Pop-Up
                loginDialog.addEventHandler(Office.EventType.DialogEventReceived, processLoginDialogEvent);

            }
        }
    );

Send message from Dialog to closure
  Office.initialize = () => {
    Office.context.ui.messageParent(JSON.stringify({ status: 'success'}));
  };
“

"
https://api.github.com/repos/OfficeDev/office-js/issues/1293,Office.SharedProperties delegatePermissions contains int value not defined in Office.MailboxEnums.DelegatePermissions,"I've not looked at all of the users, but of the two that I've looked at the delegatePermissions value returned getSharedPropertiesAsync has a value not defined in the enum Office.MailboxEnums.DelegatePermissions.  I'm seeing values like 63 and 49. 

We're unable to use this property if we can't lookup/translate the value in the enum.

## Expected Behavior
The value of delegatePermissions is always defined in the enum Office.MailboxEnums.DelegatePermissions

## Current Behavior
The value of delegatePermissions is not always defined in the enum Office.MailboxEnums.DelegatePermissions

## Steps to Reproduce, or Live Example
I'm assuming this is specific to the user's I'm looking at, @exextoc You should still have a login to our exchange instance from a previous issue, please let me know if there's any issue with that.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office on the web]: All
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 365
* Operating System: Any
* Browser (if using Office on the web): Chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/1291,displayDialogAsync callback unable to bind to dialog object due to 5001 error.,"Whilst opening a dialog (displayDialogAsync) from an Outlook web add-in running on Android v10, the callback's AsyncResult parameter has a status property value of Office.AsyncResultStatus.Failed, which prevents binding to the created dialog object via the AsyncResult's value property.

I have only experienced this issue on Android. Web and desktop clients as well as ios work as expected.

## Expected Behavior
The displayDialogAsync callback should return a value property that can be used to bind to the opened dialog object.

## Current Behavior
The displayDialogAsync callback returns a status value of Office.AsyncResultStatus.Failed with an error.code of ""5001"" and error.message ""An internal error has occured.""

## Steps to Reproduce, or Live Example
```typescript
let loginDialog: Office.Dialog;
const dialogLoginUrl: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/login/login.html';
Office.context.ui.displayDialogAsync(
    dialogLoginUrl,
    { height: 40, width: 30 },
    (result) => {
        if (result.status === Office.AsyncResultStatus.Failed) {
            console.log(`${result.error.code}: ${result.error.message}`);
            // result - ""5001: An internal error has occured.""
        }
        else {
            loginDialog = result.value;
            loginDialog.addEventHandler(Office.EventType.DialogMessageReceived, processLoginMessage);
            loginDialog.addEventHandler(Office.EventType.DialogEventReceived, processLoginDialogEvent);
        }
    }
);
```
## Context
The dialog window is used to facilitate Azure auth, but as a result of the aforementioned 5001 error, the dialog object is never bound and therefore the dialog window cannot be closed via the Office.EventType.DialogMessageReceived handler after successful authentication.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office on the web]: Android (Outlook mobile app)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Android Outlook app version - 4.2026.6 (42026813)
* Operating System: Android
* Browser (if using Office on the web): Android Outlook mobile app built-in browser
"
https://api.github.com/repos/OfficeDev/office-js/issues/1285,"Outlook Online, IE & Edge, the displayDialogAsync method does not work","In an Outlook add-in for compose mode, we call displayDialogAsync. In IE and Edge, the method does nothing, the dialog window does not show up, the callback is not executed.

## Expected Behavior
The displayDialogAsync method shall work correctly.

## Current Behavior
Nothing happens, the dialog window does not show up, the callback is not executed.

## Steps to Reproduce, or Live Example
Please try the following code:

`Office.context.ui.displayDialogAsync('https://ablebits.com', { width: 30, height: 30 }, (asyncResult) => {`
`  console.log(asyncResult);`
`});`

## Context

## Your Environment
* Platform: Office Online
* Host: Outlook
* Office version number:
* Operating System: Windows 10
* Browser (if using Office Online): IE 11.959.18362.0 & Edge 44.18362.449.0

"
https://api.github.com/repos/OfficeDev/office-js/issues/1280,Internet Message header with spaces in value cause failure on Windows,"When attempting to set an internet message header that contains a space in the value, both quoted and un-quoted, the call fails with an error code of 2006 saying that the given object was of an invalid format.

## Expected Behavior
The header should be set without issue.

## Current Behavior
When run on Windows, values that contain a space will cause a failure when calling `setAsync` on an item that is currently being composed.

## Steps to Reproduce, or Live Example
https://gist.github.com/jak-hammond/ec61adb4333941d9e3387a999ef7bd02

## Context
We set message headers based on some externally loaded which we have no control over the format of some of the values that are returned to us in. Some cases, these values may contain spaces which will then end up being set in the message headers of the current item.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC 
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2006 (Build 13001.20266 Click-to-Run)
* Operating System: Windows 10

## Useful logs
![image](https://user-images.githubusercontent.com/664193/87413073-bbe61700-c5c1-11ea-91e6-831a7c551390.png)


![image](https://user-images.githubusercontent.com/664193/87412667-34000d00-c5c1-11ea-82f6-7d1f6d3b9093.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1279,Outlook Add-in not showing on web version menu with sideload,"Hi,

I am developing outlook add-in on Mac and using visual code. I am following [https://docs.microsoft.com/en-us/office/dev/add-ins/quickstarts/outlook-quickstart?tabs=yeomangenerator](this) tutorial to create Taskpane App using Yeoman generator. I am able to build and run dev-server. I uploaded the manifest file on the web version of outlook to run and test the add-in. Everything works fine to this point and my add-in is showing up in custom-add-ins section as you can see in the image 
![Screen Shot 2020-07-14 at 1 54 02 AM](https://user-images.githubusercontent.com/8552862/87365012-5ff5a100-c575-11ea-9d6c-5346fc9ff762.png)

But the add-in is not showing up in the menu section as in the image

![Screen Shot 2020-07-14 at 1 54 45 AM](https://user-images.githubusercontent.com/8552862/87365059-887d9b00-c575-11ea-9d26-0ee85f22c25c.png)

I have tried creating the task pane app and also tested with React and simple javascript. But it's not working for me. Currently, I am on a free plan with 5GB storage and only access to online apps. 

Does it require to upgrade office membership for the development? or Am I missing something?



"
https://api.github.com/repos/OfficeDev/office-js/issues/1266,Outlook: Contextual add-ins behave differently on Outlook Native and Outlook web,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- Tell us what you expected to happen -->
When we using contextual addins on Outlook web mentioned words as per regex should get highlighted whther its new mail received or fowarded mail or replied mail or sent mail in both.
RegEx is **\b(\r\n|\r|\n)|(leave|holiday|vacation|sick|ill|sickness|poorly|absent|absence)|(\r\n|\r|\n)\b**

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
When we using contextual addins on Outlook  web mentioned words as per regex not get highlighted when mail is either forwarded or as reply. But same works fine in Outlook native dekstop app.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlok Native, Outlook on Web
* Office version number: ______
* Operating System: ______
* Browser (if using Office Online): Chrome, Edge Chromium

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
**From Web outlok where its not working...**
![image](https://user-images.githubusercontent.com/15957229/86886306-9901c180-c0ee-11ea-82fd-b042e198947d.png)
**From Dekstop Outlook App where its working...**
![image](https://user-images.githubusercontent.com/15957229/86886452-dcf4c680-c0ee-11ea-8b44-c3c378026c6a.png)

- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1265,In Contextual office addins in Outlook specific word not gets highlighted properly,"<!--- Provide a general summary of the issue in the Title above -->
## Expected Behavior
<!--- Tell us what you expected to happen -->
When using contextual addins in Outlook, I wanted to highlight few words like ill, holiday, leave and wrote regex as **\b(\r\n|\r|\n)|(leave|holiday|vacation|sick|ill|sickness|poorly|absent|absence)|(\r\n|\r|\n)\b**

So if  the message contains below text...
**Hi I'm still on holiday.**

It should only highlight **Holiday**
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
When using contextual addins in Outlook, using regex as **\b(\r\n|\r|\n)|(leave|holiday|vacation|sick|ill|sickness|poorly|absent|absence)|(\r\n|\r|\n)\b** it highlights **ill** word in st**ill** and **holiday** in **holiday**ing which is not expected. I have tried various ways but result is same and I think regex written by me is straight forward and its working on online third-party regex tools.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook, Outlook on Web
* Office version number: ______
* Operating System: Windows 10
* Browser (if using Office Online): Chrome, Chromium

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
![image](https://user-images.githubusercontent.com/15957229/86805404-c3606a00-c06f-11ea-8ada-0113aef204ab.png)

- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1264,Outlook: body.getAsync fails with non-char ascii codes,"`Office.context.mailbox.item.body.getAsync` throws `SyntaxError: JSON Parse error: Unterminated string` when email content has non-char ascii codes (i.e. `&#17;`). It is observed in Outlook for Mac, and Outlook for Windows, but not in Outlook for Web (OWA). 

## Expected Behavior
`body.getAsync` should return email's content (like OWA)

## Current Behavior
- Error is thrown for Outlook for Mac
- No error thrown, and returns undefined for Outlook for Windows. 
The issue happens in read mode only (inbound email with non-char ascii codes).

## Steps to Reproduce, or Live Example
1. Open new compose
2. Use `body.setBodyAsync` to set non-char ascii characters
```
Office.context.mailbox.item.body.setAsync(
    '<span>&#17;</span><span>&#18;</span><span>&#19;</span><span>&#20;</span>',
    {coercionType: Office.CoercionType.Html},
    () => {console.log('success')});
```
3. [Unrelated] notice the `?` chars that get inserted to the compose window.
![image](https://user-images.githubusercontent.com/7740509/86654131-93936280-bf9a-11ea-85d0-0340a862ef8c.png)
4. Send the email, open the email from sent folder
5. Use `body.getAsync` to retrieve email's content in text mode
```
Office.context.mailbox.item.body.getAsync('text', (res) => {console.log(res)});
```
6. Notice the following errors.

Outlook for Mac
![image](https://user-images.githubusercontent.com/7740509/86654630-f08f1880-bf9a-11ea-8249-44d7772749ab.png)

Outlook for Windows
![image](https://user-images.githubusercontent.com/7740509/86654699-00a6f800-bf9b-11ea-91e8-e8522210a0c8.png)

## Context
There are some automated antivirus or email filtering software that appends links at the bottom of the email which sometimes contain these non-char ascii codes. In such `<a>` tag, only the link's text content (the text that gets rendered in the email) breaks the API, but not the URL on the href attribute. Currently, our add-in is failing to grab the email content.

For example:

```<a href=""https://example.com/test?param&#17;"">https://example.com/test?param&#17;</a>```

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC, Mac
  - Outlook for Mac (16.38), MacOS 10.15.5
  - Outlook for Windows (Version 1912, 12307.20000 C2R)
  - Both on O365
* Host: Outlook
* Office version number: Mac (16.38), Windows (Version 1912, 12308.20000 C2R)
* Operating System: MacOS 10.15.5, Windows 10 Pro (1903)
* Browser (if using Office Online): Tested the issue is **not** reproducible in OWA with Chrome browser

## Useful logs
Screenshots are attached in the repro steps"
https://api.github.com/repos/OfficeDev/office-js/issues/1253,Outlook OWA pinned task pane does not navigate to correct url based on mode,"When replying to an email in OWA, the pinned task pane loads the ""edit mode"" url, but when clicking the discard button the url does not change back to the ""read mode"" url. This only occurs when replying to an email, if creating a new email, it functions as expected.

## Expected Behavior
The url should change to reflect what action the user is currently taking, edit or read, as it does on the desktop version.

## Current Behavior
![page-reload-example](https://user-images.githubusercontent.com/12947514/86107037-2c475100-ba76-11ea-855b-edec0afa05cc.gif)

## Steps to Reproduce, or Live Example
1. Create empty project with a different url for MessageReadCommandSurface and MessageComposeCommandSurface in the manifest.
2. Load OWA and pin the task pane (for both modes).
3. Select email to read, click reply, then click discard.

## Context
I need the url to reflect the current mode since the add-in will allow different actions for users depending on whether the mode is read or compose.

For example; the ability to insert attachments if the user is in compose mode vs extracting any attachments in read mode.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Microsoft 365 E5 Developer
* Operating System: Windows 10
* Browser (if using Office Online): Chromium based
"
https://api.github.com/repos/OfficeDev/office-js/issues/1252,Outlook: Office JS API to retrieve mail body does not return entire email thread when mail is replied in OWA,"<!--- Provide a general summary of the issue in the Title above -->
OWA has option to reply or reply to messages in email reading window. 
When we reply or reply all using this option, the mail thread is not loaded in compose window till ellipsis option is selected by user. 
If the user edits the email and new content is added with ellipsis not selected then getAsync api for body only returns new content. Previous email body are not returned. 


## Expected Behavior
<!--- Tell us what you expected to happen -->
API should return entire email thread which will be sent irrespective of ellipsis is selected or not.

## Current Behavior
Only recent content of mail body is returned through Outlook Office JS API of getting body.

## Steps to Reproduce, or Live Example
1. Open mailbox in OWA and draft a new email. Sent the Email. (This step is optional and can move to step 2 if already mails available in inbox).
<img width=""1455"" alt=""NewEmail"" src=""https://user-images.githubusercontent.com/67500503/86448824-f08ddf00-bd34-11ea-9a1d-1ceeed44b540.png"">

2. Reply to the email received. Do not select ellipsis. This will not load entire email body in compose window.
<img width=""1450"" alt=""ReplyEmailWithoutLoadingEmailThread"" src=""https://user-images.githubusercontent.com/67500503/86449017-2fbc3000-bd35-11ea-84b3-1c0ad6bb7b79.png"">

3. Send email. Email is sent with entire email thread.
<img width=""956"" alt=""EmailSent"" src=""https://user-images.githubusercontent.com/67500503/86450705-92163000-bd37-11ea-8cc0-82018a1483b0.png"">


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
We are not able to check content of entire email being sent.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: __Online____
* Host [Excel, Word, PowerPoint, etc.]: ___Outlook___
* Browser (if using Office Online): _Safari_____

"
https://api.github.com/repos/OfficeDev/office-js/issues/1251,Outlook: Onsend addin is not invoked for mails sent with Do not forward option,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- Tell us what you expected to happen -->
Onsend Addin should be invoked for Do not forward mails

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
1. Configure certificates for encryption.
2. Open a new mail window and draft a mail.
3. Go to Draft->Encrypt and select Do Not Forward option.

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: ___Mac___
* Host [Excel, Word, PowerPoint, etc.]: __Outlook____
* Office version number: _16.33_____
* Operating System: _10.14.6_____
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1250,Outlook: emailAddress property returns LegacyExchangeDN format,"<!--- Provide a general summary of the issue in the Title above -->
The emailAddress property of Office.From is returned in LegacyExchangeDN format instead of SMTP email address.

## Expected Behavior
<!--- Tell us what you expected to happen -->
The Office.From emailAddress property is set to the SMTP email address.

Office.EmailAddressDetails interface
https://docs.microsoft.com/en-us/javascript/api/outlook/office.emailaddressdetails?view=outlook-js-1.8#emailaddress

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The Office.From emailAddress property is set to LegacyExchangeDN.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
1. Open sent or received mail
2. Select ""Resend This Message..."" in the File menu
3. Run ""Get from (Message Compose)"" using Script Lab for Outlook

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Our Office add-in use the SMTP email address to distinguish the sender.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office 365 ProPlus Version 2006 (Build 13001.20266 Click-to-Run)
* Operating System: Windows 10 Pro, version 1903
* Browser (if using Office Online): Microsoft Edge 44.18362.449.0
"
https://api.github.com/repos/OfficeDev/office-js/issues/1126,Outlokk mobile add-in for an online-meeting provider: complete status button unable to keep,"with follow this document, and use this beta api: https://appsforoffice.microsoft.com/lib/beta/hosted/office.js, everything is fine for my add-in, but the complete status button unable to keep after next edit this event.

when create a new event, this button will be switch on and the complete status is right, after save this event, and re-open to edit it, the status still switch to off and the complete status is wrong.

And when i use the same example code which your guide provide [Create an Outlook mobile add-in for an online-meeting provider (preview)](https://docs.microsoft.com/en-us/office/dev/add-ins/outlook/online-meeting) it still have this problem. But when i checked on your teams add-in, that's right result.

![image](https://user-images.githubusercontent.com/1878089/80558857-5c3e8d80-8a0e-11ea-8f90-a0179e580a35.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1123,iOS Outlook Add-in not respecting Set-Cookies header for external sites in Dialog,"Outlook Web Add-in in iOS Outlook app does not seem to set cookies for external pages opened in Dialogs that use the Set-Cookie header.

## Expected Behavior
External page that Add-in Dialog navigates to should be able to set cookies based on the Set-Cookie header and later retrieve those set cookies if redirected to another page on that same external domain.

## Current Behavior
Works as expected on desktop but not on iOS. Cookie does not appear to have been set by the header.

## Steps to Reproduce, or Live Example
(Below steps use placeholder URLs, I do not have a live example I can expose).
1. Launch dialog from add-in (dialog URL should be same domain as add-in).
2. Have dialog page redirect to an external site that passes back a Set-Cookie header on load.
3. That external page should redirect to another page on its external domain and try to access the cookie that should have been set.
4. Should see that on iOS the cookie will not have been set.

Add-in code should just be calling Office.context.ui.displayDialogAsync, then in the dialog redirecting to the non-add-in domain. That external domain should passes back Set-Cookie header, redirect to another page on same domain and try to read the cookie that should have been set.

## Context
I've an Outlook web add-in that uses the Office.js Dialog API to open a dialog that navigates to an external (i.e. not on my add-in domain) authentication landing page. When that page is loaded in the dialog it passes back a Set-Cookie header with a return URL value set to a page in my add-in, then redirects to a different external site to perform SAML authentication (whoever the user has configured as their SAML provider). When login completes the user is navigated to a completion page on the authentication landing domain, which is then expected to read the cookie that was initially set and redirect back to the add-in using the URL in the cookie.

This works fine on desktop platforms however when using the add-in through the Outlook IOS app I'm seeing that the Set-Cookies header does not seem to work as when the flow reaches the completion page there are no cookies present.

I cannot modify the behaviour of pages outside of my add-in.

The page I redirect to has X-Frame-Options set to sameorigin so I cannot load it in a hidden iFrame outside of the dialog.

This flow works on desktop Safari, Chrome, IE, Windows Outlook client, Mac Outlook client and was previously seen to work on iOS back in September 2019 indicating a change on the platform itself.

On the iOS device under Safari settings 'Prevent Cross-Site Tracking' and 'Block All Cookies' settings are both off.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: iOS 12.4.1.
* Host [Excel, Word, PowerPoint, etc.]: Outlook App 4.34.1
* Office version number: O365 Account, latest Outlook App.
* Operating System: iOS
* Browser (if using Office Online): N/A

## Useful logs

**Example Header not being respected on iOS**
```
Set-Cookie: ReturnURL=https://my-addin.com/finalize;Version=1;Path=/auth;Domain=auth-helper;Max-Age=86400;HttpOnly;Secure;SameSite=None
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1119,getAttachmentContentAsync fails with CORS error in OWA with Chrome,"We are experiencing frequent but intermittent behavior with the getAttachmentContentAsync api.  It fails with CORS error(s) in OWA.

'https://outlook.office365.com/owa/<redactedUserId>/service.svc/s/GetAttachmentDownloadToken?redirect=/owa/<redactedUserId>/service.svc/s/GetFileAttachment<removed>k.&isDownload=true&animation=true&asDataUri=true' (redirected from 'https://attachments.office.net/owa/<redactedUserId>/service.svc/s/GetFileAttachment?<removed>&isDownload=true&animation=true&asDataUri=true') from origin 'https://outlook.office365.com' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled

## Expected Behavior
getAttachmentContentAsync should not fail

## Current Behavior
getAttachmentContentAsync fails

## Steps to Reproduce, or Live Example
- Install this [addin](https://32b3g.csb.app/OutlookManifest.xml)
- Send an email with attachments
- Open the email with attachments in OWA from sent items
- Open the add-in
- Click the ""Get Attachments Only"" button

It's possible it will take multiple attempts to recreate but please persist and you should get the failure.  If you need any additional data about the request or response (i.e a cross origin header value)

## Context
We need the attachment content available on the client-side.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: OWA
* Office version number: o365
* Operating System: OSx / Ubuntu
* Browser (if using Office Online): Chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/1105,Problems with using the microsoft graph document preview functionality from outlook addin,"We are building an outlook addin that uses the MS graph API. We are trying to use the drive item preview endpoint (https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_preview?view=odsp-graph-online) But it fails, specifically when used in the addin pane. We have already posted the issues on 
https://github.com/OneDrive/onedrive-api-docs/issues/1232 

But since it is not getting any attention, I will cross post it here, as I'm not sure which team should be responsible for a fix (both teams can fix it as far as I can tell). "
https://api.github.com/repos/OfficeDev/office-js/issues/1104,"Outlook Online, all browsers, setSelectedDataAsync produces incorrect formatting","In an Outlook add-in for compose mode, we use the Office JS API to fill in email fields. The setSelectedDataAsync method inserts HTML with incorrect markup.

## Expected Behavior
The setSelectedDataAsync method should work as expected.

## Current Behavior
The setSelectedDataAsync method ignores markup and produces ""stairs"".

## Steps to Reproduce, or Live Example
Create a new email in Outlook Online using, for example, the Chrome or Edge browser and execute the code below. NOTE, the newly created email shall be completely empty, if you use signature, please turn it off.

`const data = '<p>List 1:</p>' +`
`'<ul>' +`
`'  <li>A</li>' +`
`'</ul>' +`
`'<p>List 2:</p>' +`
`'<ol>' +`
`'  <li>B</li>' +`
`'</ol>' +`
`'<p>Indented 1:</p>' +`
`'<p style=""margin-left:30px;"">This text is intended</p>' +`
`'<p>Indented 2:</p>' +`
`'<p style=""margin-left:30px;"">This text is also intended</p>';`
`Office.context.mailbox.item.body.setSelectedDataAsync(data, { coercionType: Office.CoercionType.Html }, (asyncResult) => { });`

I have attached 2 screenshots with the results, the first one is from Chrome, the other from Edge.

## Context

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ______
* Operating System: Windows 10, Mac OS Catalina
* Browser (if using Office Online): Chrome Version 81.0.4044.92 (Official Build) (64-bit) and Microsoft Edge 44.18362.449.0 on Windows, Safari Version 13.0.5 (15608.5.11) on Mac

## Useful logs
- [ ] Screenshots
![ol-online-chrome](https://user-images.githubusercontent.com/28924916/79453054-cbb98380-7ff1-11ea-887b-67015a40450b.png)
![ol-online-edge](https://user-images.githubusercontent.com/28924916/79453081-d3792800-7ff1-11ea-842e-363f7c6e10da.png)


"
https://api.github.com/repos/OfficeDev/office-js/issues/1099,Cannot deploy OWA add-in in the admin portal as file or URL,"Hi there,
[This issue](https://github.com/OfficeDev/office-js/issues/853) is fixed but when I try to deploy the add-in (v1.8) from the admin portal as file or URL, I got this error:
```
No Supported Office Products. There are no platforms which fulfil the requirements specified in the manifest. The most common reasons for this failure are issues in the Requirements section. Please review the manifest and try again.
Correlation ID: cf770ed5-41a6-418a-8043-a92b22f69845
```
That error did not occur when deploying the same manifest with v1.7 or less


This issue is occurring only when deploying the add-in through the admin portal, not when adding a new add-in as a user.
Thanks"
https://api.github.com/repos/OfficeDev/office-js/issues/1096,addHandlerAsync ItemChanged not working correctly with conversation items and pinned Add-In in browsers,"<!--- Provide a general summary of the issue in the Title above -->
## Expected Behavior
<!--- Tell us what you expected to happen -->
ItemChanged event should always fire when user switches between conversation items with pinned Add-In.
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
ItemChanged event fires only once per each item in conversation. And then after switching it doesn't fire again.
For example - we have 4 items in conversation:
item1 - received
item2 - sent
item3 - received
item4 - sent

User goes to item1, opens Add-In, pins it and switches to the next item2. In this case everything works as expected and ItemChanged event fires.
But when he switches back to the item1, the ItemChanged event doesn't fire.
So, if User clicks on each of conversation items once, the ItemChanged event works well and fires. But then if he/she tries to click some of already clicked items, the ItemChanged event doesn't fire.
it looks like some kind of cache.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

1. Create new Add-in app: yo office. In my case it was:
     -  Choose a project type: Office Add-in Task Pane project
     -  Choose a script type: TypeScript
     -  What do you want to name your add-in? test-add-in
     - Which Office client application would you like to support? Outlook
2. Add version_overrides to support pin for add-in. Manifest is below:
```xml
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes"" ?>
<OfficeApp xmlns=""http://schemas.microsoft.com/office/appforoffice/1.1"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:bt=""http://schemas.microsoft.com/office/officeappbasictypes/1.0"" xmlns:mailappor=""http://schemas.microsoft.com/office/mailappversionoverrides/1.0"" xsi:type=""MailApp"">
  <Id>611a1fac-62e2-473a-8c3b-3efdcc5f5f5a</Id>
  <Version>1.0.0.0</Version>
  <ProviderName>Contoso</ProviderName>
  <DefaultLocale>en-US</DefaultLocale>
  <DisplayName DefaultValue=""test-add-in"" />
  <Description DefaultValue=""A template to get started."" />
  <IconUrl DefaultValue=""https://localhost:3000/assets/icon-32.png"" />
  <HighResolutionIconUrl DefaultValue=""https://localhost:3000/assets/icon-80.png"" />
  <SupportUrl DefaultValue=""https://www.contoso.com/help"" />
  <AppDomains>
    <AppDomain>contoso.com</AppDomain>
  </AppDomains>
  <Hosts>
    <Host Name=""Mailbox"" />
  </Hosts>
  <Requirements>
    <Sets>
      <Set Name=""Mailbox"" MinVersion=""1.1"" />
    </Sets>
  </Requirements>
  <FormSettings>
    <Form xsi:type=""ItemRead"">
      <DesktopSettings>
        <SourceLocation DefaultValue=""https://localhost:3000/taskpane.html"" />
        <RequestedHeight>250</RequestedHeight>
      </DesktopSettings>
    </Form>
  </FormSettings>
  <Permissions>ReadWriteItem</Permissions>
  <Rule xsi:type=""RuleCollection"" Mode=""Or"">
    <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Read"" />
  </Rule>
  <DisableEntityHighlighting>false</DisableEntityHighlighting>
  <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
    <Requirements>
      <bt:Sets DefaultMinVersion=""1.3"">
        <bt:Set Name=""Mailbox"" />
      </bt:Sets>
    </Requirements>
    <Hosts>
      <Host xsi:type=""MailHost"">
        <DesktopFormFactor>
          <FunctionFile resid=""Commands.Url"" />
          <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
            <OfficeTab id=""TabDefault"">
              <Group id=""msgReadGroup"">
                <Label resid=""GroupLabel"" />
                <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                  <Label resid=""TaskpaneButton.Label"" />
                  <Supertip>
                    <Title resid=""TaskpaneButton.Label"" />
                    <Description resid=""TaskpaneButton.Tooltip"" />
                  </Supertip>
                  <Icon>
                    <bt:Image size=""16"" resid=""Icon.16x16"" />
                    <bt:Image size=""32"" resid=""Icon.32x32"" />
                    <bt:Image size=""80"" resid=""Icon.80x80"" />
                  </Icon>
                  <Action xsi:type=""ShowTaskpane"">
                    <SourceLocation resid=""Taskpane.Url"" />
                  </Action>
                </Control>
                <Control xsi:type=""Button"" id=""ActionButton"">
                  <Label resid=""ActionButton.Label"" />
                  <Supertip>
                    <Title resid=""ActionButton.Label"" />
                    <Description resid=""ActionButton.Tooltip"" />
                  </Supertip>
                  <Icon>
                    <bt:Image size=""16"" resid=""Icon.16x16"" />
                    <bt:Image size=""32"" resid=""Icon.32x32"" />
                    <bt:Image size=""80"" resid=""Icon.80x80"" />
                  </Icon>
                  <Action xsi:type=""ExecuteFunction"">
                    <FunctionName>action</FunctionName>
                  </Action>
                </Control>
              </Group>
            </OfficeTab>
          </ExtensionPoint>
        </DesktopFormFactor>
      </Host>
    </Hosts>
    <Resources>
      <bt:Images>
        <bt:Image id=""Icon.16x16"" DefaultValue=""https://localhost:3000/assets/icon-16.png"" />
        <bt:Image id=""Icon.32x32"" DefaultValue=""https://localhost:3000/assets/icon-32.png"" />
        <bt:Image id=""Icon.80x80"" DefaultValue=""https://localhost:3000/assets/icon-80.png"" />
      </bt:Images>
      <bt:Urls>
        <bt:Url id=""Commands.Url"" DefaultValue=""https://localhost:3000/commands.html"" />
        <bt:Url id=""Taskpane.Url"" DefaultValue=""https://localhost:3000/taskpane.html"" />
      </bt:Urls>
      <bt:ShortStrings>
        <bt:String id=""GroupLabel"" DefaultValue=""Contoso Add-in"" />
        <bt:String id=""TaskpaneButton.Label"" DefaultValue=""Show Taskpane"" />
        <bt:String id=""ActionButton.Label"" DefaultValue=""Perform an action"" />
      </bt:ShortStrings>
      <bt:LongStrings>
        <bt:String id=""TaskpaneButton.Tooltip"" DefaultValue=""Opens a pane displaying all available properties."" />
        <bt:String id=""ActionButton.Tooltip"" DefaultValue=""Perform an action when clicked."" />
      </bt:LongStrings>
    </Resources>
    <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
      <Requirements>
        <bt:Sets DefaultMinVersion=""1.3"">
          <bt:Set Name=""Mailbox"" />
        </bt:Sets>
      </Requirements>
      <Hosts>
        <Host xsi:type=""MailHost"">
          <DesktopFormFactor>
            <FunctionFile resid=""Commands.Url"" />
            <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
              <OfficeTab id=""TabDefault"">
                <Group id=""msgReadGroup"">
                  <Label resid=""GroupLabel"" />
                  <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                    <Label resid=""TaskpaneButton.Label"" />
                    <Supertip>
                      <Title resid=""TaskpaneButton.Label"" />
                      <Description resid=""TaskpaneButton.Tooltip"" />
                    </Supertip>
                    <Icon>
                      <bt:Image size=""16"" resid=""Icon.16x16"" />
                      <bt:Image size=""32"" resid=""Icon.32x32"" />
                      <bt:Image size=""80"" resid=""Icon.80x80"" />
                    </Icon>
                    <Action xsi:type=""ShowTaskpane"">
                      <SourceLocation resid=""Taskpane.Url"" />
                      <SupportsPinning>true</SupportsPinning>
                    </Action>
                  </Control>
                  <Control xsi:type=""Button"" id=""ActionButton"">
                    <Label resid=""ActionButton.Label"" />
                    <Supertip>
                      <Title resid=""ActionButton.Label"" />
                      <Description resid=""ActionButton.Tooltip"" />
                    </Supertip>
                    <Icon>
                      <bt:Image size=""16"" resid=""Icon.16x16"" />
                      <bt:Image size=""32"" resid=""Icon.32x32"" />
                      <bt:Image size=""80"" resid=""Icon.80x80"" />
                    </Icon>
                    <Action xsi:type=""ExecuteFunction"">
                      <FunctionName>action</FunctionName>
                    </Action>
                  </Control>
                </Group>
              </OfficeTab>
            </ExtensionPoint>
          </DesktopFormFactor>
        </Host>
      </Hosts>
      <Resources>
        <bt:Images>
          <bt:Image id=""Icon.16x16"" DefaultValue=""https://localhost:3000/assets/icon-16.png"" />
          <bt:Image id=""Icon.32x32"" DefaultValue=""https://localhost:3000/assets/icon-32.png"" />
          <bt:Image id=""Icon.80x80"" DefaultValue=""https://localhost:3000/assets/icon-80.png"" />
        </bt:Images>
        <bt:Urls>
          <bt:Url id=""Commands.Url"" DefaultValue=""https://localhost:3000/commands.html"" />
          <bt:Url id=""Taskpane.Url"" DefaultValue=""https://localhost:3000/taskpane.html"" />
        </bt:Urls>
        <bt:ShortStrings>
          <bt:String id=""GroupLabel"" DefaultValue=""Contoso Add-in"" />
          <bt:String id=""TaskpaneButton.Label"" DefaultValue=""Show Taskpane"" />
          <bt:String id=""ActionButton.Label"" DefaultValue=""Perform an action"" />
        </bt:ShortStrings>
        <bt:LongStrings>
          <bt:String id=""TaskpaneButton.Tooltip"" DefaultValue=""Opens a pane displaying all available properties."" />
          <bt:String id=""ActionButton.Tooltip"" DefaultValue=""Perform an action when clicked."" />
        </bt:LongStrings>
      </Resources>
    </VersionOverrides>
  </VersionOverrides>
</OfficeApp>
```
3. Add handler for ItemChanged event in taskpane.ts. And just console.log appropriate result of ItemChanged event. The code of taskpane.ts is below:
```javascript
/*
    * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
    * See LICENSE in the project root for license information.
    */

   /* global document, Office */

   Office.onReady(info => {
     if (info.host === Office.HostType.Outlook) {
       document.getElementById(""sideload-msg"").style.display = ""none"";
       document.getElementById(""app-body"").style.display = ""flex"";
       document.getElementById(""run"").onclick = run;
     }
     Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, e => {
       console.log(""Item Changed"", e);
     });
   });

   export async function run() {
     /**
      * Insert your Outlook code here
      */
   }
```
4. Run app with ""npm run start:web"".
5. Open outlook.office.com and sideload the app.
6. Open some conversation tree with conversation items.
7. Open Add-in and pin it.
8. Go to the next item in conversation. As a result: event fires and it appears in browser console.
9. Switch between already clicked items. As a result: event doesn't fire.
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->

## Context
This issue is critical for us, because we can't handle item change correctly for conversation.
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Mac, PC desktop
* Host: Outlook
* Office version number: Office 365 for web 
* Operating System: Mac OS, Windows 10
* Browser (if using Office Online): Chrome, Safari
"
https://api.github.com/repos/OfficeDev/office-js/issues/1095,Outlook: Deeplinks to mail items returned by Outlook API no longer load,"When attempting to navigate to a WebLink for a mail item returned by the Outlook API, the user receives a blank page with a spinner and 'loading' indefinitely.

## Expected Behavior
The OWA read item view is displayed with the mail item

## Current Behavior
The user is stuck on a blank loading screen indefinitely

## Steps to Reproduce, or Live Example
- Call https://outlook.office365.com/api/v2.0/me/messages/{itemID}, where {itemID} is the Id if a valid mail item.
- Copy the value of 'WebLink' from the response
- Navigate to the url in a browser

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Any
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Operating System: Any
* Browser (if using Office Online): Any
"
https://api.github.com/repos/OfficeDev/office-js/issues/1092,Handler not called: Office.context.mailbox.item.addHandlerAsync(Office.EventType.RecipientsChanged,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
The handler which is passed to the `addHandlerAsync` function when the event type is `Office.EventType.RecipientsChanged` should be called.

## Current Behavior
The handler is not called when the recipients change

## Steps to Reproduce, or Live Example

With the following snippet:

```typescript
Office.onReady(() => {
    const email = Office.context.mailbox.item
    email.body.prependAsync(` ${Office.context.requirements.isSetSupported('Mailbox', '1.7')} `)

    email.body.prependAsync(` ${email.addHandlerAsync} `)
    email.addHandlerAsync(Office.EventType.RecipientsChanged, function () {
        email.body.prependAsync(` RecipientsChanged: ${arguments} `)
    })
})
```

When the add-in loads, the following is prepended to the email body:

>  function (){var c=OSF._OfficeAppFactory.getHostFacade()[OSF.DDA.DispIdHost.Methods.AddEventHandler];c(arguments,b,a,e)}  true 

but after recipients are changed in the ""To"", ""Cc"", and ""Bcc"" fields, the body is not modified.


## Context

In order for our add-in to function correctly, it needs to be notified when the recipients list changes.

The documentation says that [this feature requires API 1.7](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item#events), and that [Outlook for Mac in Office 365 supports API 1.7](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets#outlook-client-support):
![image](https://user-images.githubusercontent.com/10189808/78834909-87543500-79ac-11ea-94b9-23a536b5b465.png)
![image](https://user-images.githubusercontent.com/10189808/78834043-2a0bb400-79ab-11ea-81c4-2d1c0833ef5c.png)

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Mac
* Host: Outlook
* Office version number: 16.35 (20030802)
* Operating System: macOS 10.15.4

![image](https://user-images.githubusercontent.com/10189808/78835297-29741d00-79ad-11ea-9b74-51fed6373f97.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1090,Possible documentation error with VersionOverrides flagged as optional?,"We had an Add-in submission rejected for having no Extension points defined.  Extension points are a required element of VersionOverrides by those themselves are flagged as optional based on the content of this page.  
I tried to get clarification on the Stackoverflow forum but my query was closed for being off-topic - see https://stackoverflow.com/questions/61078237/outlook-office-add-in-rejected-please-define-extension-points-in-your-add-in-m


---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: ec89556a-6d87-c17e-4f68-33e1b2abe7f6
* Version Independent ID: 846a32b7-5194-f71e-3efc-0dc2594d2700
* Content: [OfficeApp element in the manifest file - Office Add-ins](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/officeapp#feedback)
* Content Source: [docs/reference/manifest/officeapp.md](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/reference/manifest/officeapp.md)
* Product: **non-product-specific**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/1089,Outlook web contextual addin can't highlight results that has special chars,"I'm developing an outlook contextual addin that highlights phone numbers with a regular expression.
Office 365 web Outlook will not highlight any number that has regex special chars, just to give some example: `+`,`(`, `)`.

## Expected Behavior
I expect that results that match the provided regex are highlighted and can activate the addin.

## Current Behavior
Results seems to be found by Outlook, then during the highlight process it breaks, since it uses the results in a second RegEx, which fails.


## Steps to Reproduce, or Live Example
Manifest to match a number starting with `+`: (it can be reproduced by any other special char)
```
<ExtensionPoint xsi:type=""DetectedEntity"">
  <Label resid=""contextLabel"" />
  <SourceLocation resid=""testResId"" />
  <Rule xsi:type=""RuleCollection"" Mode=""And"">
    <Rule xsi:type=""RuleCollection"" Mode=""Or"">
      <Rule xsi:type=""ItemIs"" ItemType=""Message"" />
      <Rule xsi:type=""ItemIs"" ItemType=""Appointment"" />
    </Rule>
    <Rule xsi:type=""ItemHasRegularExpressionMatch"" RegExName=""Test"" RegExValue=""\+1"" PropertyName=""BodyAsPlaintext"" Highlight=""All""/>
  </Rule>
</ExtensionPoint>
``` 

Then open a mail that contains `+1` in the message.

## Context
I can't highlight phone numbers in outlook for web that has usual special chars `+`, `(`,`)`
When it start with a `+`, there is also a console error provided below, since it result in an invalid regex for the second round, but for other cases it just simply is not highlighted (for the same reason).

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: ___Office online___
* Host [Excel, Word, PowerPoint, etc.]: ___Outlook___
* Office version number: __Current Office 365 web____
* Operating System: ___OSX Catalina___
* Browser (if using Office Online): ___Chrome___

## Useful logs
Console error:
```
constants.ts:1 Uncaught (in promise) SyntaxError: Invalid regular expression: /+1/: Nothing to repeat
    at new RegExp (<anonymous>)
    at constants.ts:1
    at Array.forEach (<anonymous>)
    at markElements.ts:54
    at AAQkADAzYTZlYTYyLWQyMGMtNDFhOS05MTAzLTQyYjJhNjBhMTYwZgAQAINoPf%2BPCdhNj6AVUpiXz4w%3D:347
    at Object.next (AAQkADAzYTZlYTYyLWQyMGMtNDFhOS05MTAzLTQyYjJhNjBhMTYwZgAQAINoPf%2BPCdhNj6AVUpiXz4w%3D:347)
    at a (AAQkADAzYTZlYTYyLWQyMGMtNDFhOS05MTAzLTQyYjJhNjBhMTYwZgAQAINoPf%2BPCdhNj6AVUpiXz4w%3D:347)
```

Based on the sourcemap, the issue is probably here, the keyword should be escaped for special chars before provided to regex, or be highlighted in any other way:
![image](https://user-images.githubusercontent.com/59829360/78777542-055b1080-799a-11ea-809d-10d774b34db4.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1085,Office.context.mailbox.item.addFileAttachmentAsync fails to attach files by URI in Outlook 2013 (Outlook 2016/2019/O365 fine),"## Expected Behavior
After obtaining the download URL of a SharePoint file from the Graph API https://docs.microsoft.com/en-us/graph/api/resources/driveitem?view=graph-rest-1.0 (using the @microsoft.graph.downloadUrl property of the DriveItem), I expect to be able to use that URL to attach the file to a new email message being compose by using Office.context.mailbox.item.addFileAttachmentAsync in Outlook 2013 Windows Desktop.

Example format of the download URL returned by the call to Graph API:
![image](https://user-images.githubusercontent.com/16345690/78657630-676d3480-790c-11ea-8d3f-d053054aba52.png)

## Current Behavior
The above technique works for Outlook 2016/2019/O365/OWA but fails in Outlook 2013 without providing an error.

## Steps to Reproduce, or Live Example
Make a call to the Graph API to get the downloadUrl property of a DriveItem

Make a call from an Outlook 2013 add-in using Office.context.mailbox.item.addFileAttachmentAsync and the downloadUrl (it fails to attach the file)

Make the same call from an Outlook 2016/2019/O365/OWA host (it attaches the file as expected)

## Context
This is preventing us being able to attach files from SharePoint/OneDrive to email in Outlook 2013 Desktop. I am aware of the alternate method addFileAttachmentFromBase64 but this isn't available in Outlook 2013 as it was introduced in requirement set 1.8. Having the bug fixed for addFileAttachmentAsync would be my preference over making addFileAttachmentFromBase64 available for Outlook 2013. In all other hosts where we had both approaches available we chose addFileAttachmentAsync as it was much more suited to the requirement.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook 2013
* Office version number: 15.0.5172.1000
* Operating System: Problem occurs on both Windows 8.1 & Windows 10
* Browser (if using Office Online): N/A

## Useful logs

### Outlook Desktop O365 (where the addFileAttachmentAsync is working)
Here's what the traffic looks like in Fiddler when the Outlook add-in calls addFileAttachmentAsync  in Outlook Desktop O365 (that does not have the problem).

1. Add-in makes call to Graph API to get the download URL (this comes back successfully)
![image](https://user-images.githubusercontent.com/16345690/78657936-d3e83380-790c-11ea-9c3a-bc6851d1f703.png)

2. Add-in calls addFileAttachmentAsync passing the downloadFile URL > then Outlook makes the CORS OPTIONS request.
![image](https://user-images.githubusercontent.com/16345690/78658178-2de8f900-790d-11ea-8dda-d759efa32e72.png)

3. Outlook then makes the call to GET the file and the attachment appears on the email as expected
![image](https://user-images.githubusercontent.com/16345690/78658217-3c371500-790d-11ea-9a5f-004908f4c3f8.png)

### Outlook Desktop 2013 (where the addFileAttachmentAsync is failing)
1. Add-in makes call to Graph API to get the download URL (this comes back successfully)
![image](https://user-images.githubusercontent.com/16345690/78658285-55d85c80-790d-11ea-8ef1-82d07721c240.png)

2. Add-in calls addFileAttachmentAsync passing the downloadFile URL > then Outlook makes the CORS OPTIONS request. This request fails with status code 401 (where the successful scenario above responded with a 405) and no further attempt is made by Outlook 2013 to request the file and the attachment process fails.
![image](https://user-images.githubusercontent.com/16345690/78658346-68eb2c80-790d-11ea-8108-c3ec9bff8fd6.png)

### Troubleshooting the cause
The issue seems to be in the CORS request generated by Outlook 2013 that results in the 401 response. I can use Fiddler to intercept the 401 response and modify it to have a status of 405 (same as what happens in Outlook Desktop 365).
![image](https://user-images.githubusercontent.com/16345690/78658603-b23b7c00-790d-11ea-8ed6-bfaeb9a40273.png)

When I do this and pass the response back to Outlook 2013 it continues to make the call to download the file and attaches the file as expected.
![image](https://user-images.githubusercontent.com/16345690/78658634-bff10180-790d-11ea-8e14-d01f3e1399a5.png)

![image](https://user-images.githubusercontent.com/16345690/78658646-c54e4c00-790d-11ea-84c7-d610bc5a9065.png)



"
https://api.github.com/repos/OfficeDev/office-js/issues/1201,Outlook Consume Graph API Login Frequency,"**Question**

I am investigating how to convert an existing outlook add-in to authenticate to one of our APIs via AAD. The way the add-in works, it would severely limit the user experience if they were constantly  prompted with a dialog. If I were to base my solution off this sample project, how often could we expect the user to have to interact with a dialog or login?"
https://api.github.com/repos/OfficeDev/office-js/issues/1082,[Outlook] Office.context.mailbox.item.body.prependAsync() prepends multiline text in reverse order (OWA),"When I call `prependAsync()` API with the following ways, the inserted text appears in reverse order in the message body.  

```
Office.context.mailbox.item.body.prependAsync(
  ""line 1<br/>line 2<br/>line 3"", 
  {coercionType: Office.CoercionType.Html});
```

```
Office.context.mailbox.item.body.prependAsync(
  ""<HTML><BODY>line 1<br/>line 2<br/>line 3<br/></BODY></HTML>"", 
  {coercionType: Office.CoercionType.Html});
```

## Expected Behavior
The text should be inserted as 

line 1
line 2
line 3

## Current Behavior
The text is inserted as

line 3
line 2
line 1

in the message body.  I see this behavior only on OWA. 

## Steps to Reproduce, or Live Example
* Link to live example:  https://prlbg.csb.app/manifest.xml

Install debug add-in from above manifest then click the ""Run"" button to evaluate the script.
Or just run above `prependAsync()` code in dev console of any Office.js plugin context.

## Context
We provide the functionality to insert snippet HTML from the plugin using prependAsync() API. This feature works most of the times but we see this issue with certain HTML like above.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]:  Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number:  
* Operating System: Mac OS v10.15 / Windows 10
* Browser (if using Office Online): Chrome v80, IE11 11.1098.17763.0, Edge 44.17763.831.0, Firefox 74.

## Useful logs

![image](https://user-images.githubusercontent.com/90184/78194961-5d8e9180-7433-11ea-9714-19cc7f82256b.png)l‘«
"
https://api.github.com/repos/OfficeDev/office-js/issues/1081,getUserIdentityTokenAsync function return a null token to Exchange 2013,"I have a problem for one of my production customers with my Outlook addin.

The Office API call to getUserIdentityTokenAsync() returns a ""succeeded"" status but a null token (empty).

## Expected Behavior
For example :
`{value: ""eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1..............."",
status: ""succeeded""}`

## Current Behavior
`{ value: """", status: ""succeeded"" }` on OWA and on-premise client

## Steps to Reproduce, or Live Example
It's difficult to give steps to reproduce because we only encountered  this problem on customer environment. I can only give customer environment details for help you.

## Context
This problem affect this customer which can't use our Outlook addin. We use this function to authenticate a user with an identity token for Exchange. Without this Exchange user identity token, we can't uniquely identify an add-in user.

## Customer environment
* Platform : Office Online, PC Desktop
* Host : Outlook
* Operating System: Windows 10
* Browser : Chrome, Firefox last version 
* Outlook client version : Outlook 2016 MSO (16.0.4266.1001) 32 bits
* Exchange server version : 15.0.1473.3 (Exchange 2013 - CU22)
* Permissions in the manifest : ReadWriteItem
"
https://api.github.com/repos/OfficeDev/office-js/issues/1080,Error in Outlook Add-in after deploying to office 365 add-ins,"Hi all,

I have question about how to deploy simple add-in I created, that is a button that open web site

I built it with Sideloading and it work perfectly with my Outlook, now I need to publish it to all of my organization.

So I built VS project and connected it to Azure Web App and publish the solution, changed all the URL's to the Azure site and checked that the files are accessible anonymously. with this article: https://docs.microsoft.com/en-us/office/dev/add-ins/publish/host-an-office-add-in-on-microsoft-azure

I upload the manifest to Office 365, after couple of hours I saw the button on my Outlook but when I click on it I get an error:

![AddinError](https://user-images.githubusercontent.com/62870871/78243173-f54fb680-74eb-11ea-85f7-c2548de2f940.PNG)


""We're sorry, we couldn't access {0}. Make sure you have a network connection. If the problem continues, please try again late.

Can anyone help me with this case?

Thanks :)"
https://api.github.com/repos/OfficeDev/office-js/issues/1079,getSharedPropertiesAsync encounters a 404 Bad Request,"<!--- Provide a general summary of the issue in the Title above -->
While calling `Office.context.mailbox.item.getSharedPropertiesAsync` on a shared item, there's a 404 Bad Request error logged in the console. However, the shared properties data is retrieved successfully. 

## Expected Behavior
The `getSharedPropertiesAsync` call should not log a 404 Bad Request

## Current Behavior
The `getSharedPropertiesAsync` call logs a 404 Bad Request

## Steps to Reproduce, or Live Example
- Login to an OWA account
- Navigate to a shared mailbox (delegate mailbox) email
 - Open dev tools
- Execute `Office.context.mailbox.item.getSharedPropertiesAsync((props) => { console.log(props); });`

## Context
We're trying to retrieve shared property details on a shared mailbox (delegate mailbox) email. The shared properties are retrieved successfully, but there's an un-related 404 that is logged every time `getSharedPropertiesAsync` is executed.  

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: OfficeOnline (Outlook Web App)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.10908.10000 (Office JS 1.8)
* Operating System: Mac OS X
* Browser (if using Office Online): Google Chrome 

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [X] Console errors
[GetSharedPropertiesAsync (1).log](https://github.com/OfficeDev/office-js/files/4417984/GetSharedPropertiesAsync.1.log)

```
VM6:1 GET https://outlook.office.com/autodiscover/autodiscover.json/v1.0/mailappinfo@sfdcmsft.com?Protocol=REST 404
(anonymous) @ VM6:1
(anonymous) @ getSharedPropertiesApiMethod.ts:34
(anonymous) @ getAutoDiscoverRestUrl.ts:12
(anonymous) @ VM11:405
(anonymous) @ VM11:405
(anonymous) @ VM11:405
l @ VM11:405
(anonymous) @ getSharedPropertiesApiMethod.ts:26
cn @ executeApiMethod.ts:74
(anonymous) @ EndpointRegistrator.ts:169
invoke @ osfruntime.js:2003
A @ osfruntime.js:1565
I @ osfruntime.js:1556
setInterval (async)
M @ osfruntime.js:1693
sse-hooks.js:1 Got shared properies OSF.DDA.AsyncResult {value: {…}, status: ""succeeded""}
VM6:1 POST https://browser.pipe.aria.microsoft.com/Collector/3.0/?qsp=true&content-type=application%2Fbond-compact-binary&client-id=NO_AUTH&sdk-version=AWT-Web-JS-1.8.5&x-apikey=a387cfcf60114a43a7699f9fbb49289e-9bceb9fe-1c06-460f-96c5-6a0b247358bc-7238&client-time-epoch-millis=1584635606980&time-delta-to-apply-millis=-18101 403 (All records were throttled.)
(anonymous) @ VM6:1
sendPOST @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e._sendRequest @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e.sendQueuedRequests @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e.sendEventsForPriorityAndAbove @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e._batchAndSendEvents @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
(anonymous) @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
setTimeout (async)
e.scheduleTimer @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e.sendEvent @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e._sendEvent @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e._logEvent @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e.logEvent @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
(anonymous) @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
e.flush @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
(anonymous) @ vendors~aria-webjs-sdk_4b9dd84a1de46dedeffb.js:1
```
- [X] Screenshots
![image (3)](https://user-images.githubusercontent.com/53920805/78193484-844ac900-742f-11ea-9866-0c35bf8f6c68.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1074,ExtensionPoint can't contain RequestedWidth and RequestedHeight elements,"<!--- Provide a general summary of the issue in the Title above -->
Even if the document describes `ExtensionPoint` element can contain `RequestedHeight` element, we can't add it. We also can't add `RequestedWidth`, either. You can refer validation tool error log on the bottom of this page

[Referred document](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/requestedheight)

## Expected Behavior
- We can add both `RequestedHeight` and `RequestedWidth` as child elements of `ExtensionPoint`
- Validation tool doesn't show error

## Current Behavior
- If we add both `RequestedHeight` and `RequestedWidth`, we can't install this manifest
- Validation tool shows error (please refer `Useful logs` section)

## Steps to Reproduce, or Live Example
1. Download [this manifest file](https://contextaddinmasota.blob.core.windows.net/share2/contoso-order-number-manifest.xml)
1. Launch Outlook (I'm using Outlook for Mac)
1. Click [Get Add-ins] button in the [Home] tab. -> Open [Office Add-ins] window.
1. Click [My add-ins] menu. You can see [Custom add-ins] in bottom.
1. Click [+ Add a custom add-in] button, then click [Add from file].
1. Select downloaded Manifest file (contoso-order-number-manifest.xml) and install it.

## Context
For better UX, we want to arrange contextual add-in height and width. Our add-in need higher height than that of default one.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.35 (20030802)
* Operating System: Mac OS Catalina (Version 10.15.3)
* Browser (if using Office Online): NA

## Useful logs
validation tools shows following error message
```
Masayukis-MacBook-Pro:Outlook-Add-In-Contextual-Regex masa$ npx office-addin-manifest validate contoso-order-number-manifest.xml 
npx: installed 32 in 2.722s
The manifest is not valid.

Error # 1: 
XML Schema Violation: Your manifest does not adhere to the current set of XML schema definitions for Office Add-in manifests. (link: https://aka.ms/add-in-manifest-schema-violation)
  - Details: The element 'ExtensionPoint' in namespace 'http://schemas.microsoft.com/office/mailappversionoverrides/1.1' has invalid child element 'RequestedHeight' in namespace 'http://schemas.microsoft.com/office/mailappversionoverrides/1.1'. List of possible elements expected: 'Rule'
 in namespace 'http://schemas.microsoft.com/office/mailappversionoverrides/1.1'.
  - Line: 75
  - Column: 16
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1072,Manifest file including multiple extension points doesn't work,"## Summary
We are creating Outlook add-in which has ""Add-in commands"" and ""Contextual add-ins"" extension points. Even if installation succeeded, Outlook doesn't show Add-in commands and doesn't detect context (RegularExpressionMatch).

## Expected Behavior
- Outlook shows Add-in commands as ""Add-in commands"".
- Some of email texts are colored blue and underlined if it is matched regular expression as ""Contextual add-ins"".

## Current Behavior
""Add-in commands"" and ""Contextual add-ins"" doesn't work.
- Outlook doesn't show Add-in commands
- Any email texts are not colored blue and underlined.
- Even if installation succeeded, I can't see the add-in in the [My add-ins] view.

## Steps to Reproduce, or Live Example
### Preparation
Please download following files for your test. First 2 files works expectedly.
- Simple ""Add-in Commands"" add-in manifest file (https://contextaddinmasota.blob.core.windows.net/share/simple-manifest.xml)
-  Simple ""Contextual add-ins"" manifest file (https://contextaddinmasota.blob.core.windows.net/share/contoso-order-number-manifest.xml)
- Manifest file including ""Add-in Commands"" and ""Contextual add-ins"" (https://contextaddinmasota.blob.core.windows.net/share/simple-2extensions.xml).

**All manifest files have been validated** by [validation tool](https://docs.microsoft.com/en-us/office/dev/add-ins/testing/troubleshoot-manifest#validate-your-manifest-with-office-addin-manifest).

### Steps
Because this is manifest problem, I can't provide live example. So, let me share repro steps.
1. Launch Outlook (I'm using Outlook for Mac)
2. Click [Get Add-ins] button in the [Home] tab. -> Open [Office Add-ins] window.
3. Click [My add-ins] menu. You can see [Custom add-ins] in bottom.
4. Click [+ Add a custom add-in] button, then click [Add from file].
5. Select downloaded Manifest file (simple-2extensions.xml) and install it.

Outlook sometimes take longer time and fail installation. If you see this error, please install other manifest file and uninstall the add-in, then please retry installation with `simple-2extensions.xml`.

6. You can see ""SampleAddin"" as the Custom add-ins.
7. Close [Office Add-ins] window.
You can't see both ""Add-in commands"" and ""Contextual add-ins"". If you open [Office Add-ins] window, you can't see installed add-in as custom add-in.

## Context
We are creating add-in with backend. User-A can create item on task pane (Add-in commands), then Outlook add-in send it to back-end. Other users vote in the item by other application. When all users complete vote, back-end app will send email to User-A. User-A need to see item detail page to check result.
Because we want to improve UX, we want let User-A open item detail page by clicking email text (contextual add-in). It can reduce 3 steps, so we really want to use both contextual add-in and Add-in commands.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.35 (20030802)
* Operating System: Mac OS Catalina (Version 10.15.3)
* Browser (if using Office Online): NA

## Useful logs
When I use validation tool for all manifest files I saw following messages
```
masayukis-MacBook-Pro:SecretaryExtension masa$ npx office-addin-manifest validate simple-2extensions.xml 
npx: installed 32 in 2.13s
The manifest is valid.

Based on the requirements specified in your manifest, your add-in can run on the following platforms; your add-in will be tested on these platforms when you submit it to the Office Store:
  - Outlook 2013 or later
  - Outlook 2016 or later
  - Outlook 2016 for Mac
  - Outlook on the Web
Important: This analysis is based on the requirements specified in your manifest and does not account for any runtime JavaScript calls within your add-in. For information about which API sets and features are supported on each platform, see Office Add-in host and platform availability. (https://docs.microsoft.com/office/dev/add-ins/overview/office-add-in-availability).
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1071,[Outlook] Add-in pane within Outlook OWA now incorrectly scrolling,"## Expected Behavior
A scrollable region isn't shown when it isn't required. This has visually and functionally broken all Outlook Add-ins

## Current Behavior
There is an unnecessary vertical scrollbar because a div with class ""ms-Panel-commands"" now has a top margin of 18px, this causes unnecessary vertical scrolling within the div of class ""ms-Panel-scrollableContent"".

## Steps to Reproduce, or Live Example
- Open any Addin in Outlook OWA of type MessageReadCommandSurface or MessageComposeCommandSurface and observe the add-in pane.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook OWA
* Host [Excel, Word, PowerPoint, etc.]: Outlook OWA
* Office version number: N/A
* Operating System: Windows 10
* Browser (if using Office Online): Chrome, Firefox, Edge all versions

## Useful logs
![image](https://user-images.githubusercontent.com/42198746/77712054-668bf700-701e-11ea-9095-760781f73558.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/1064,Outlook add-in: Calling saveAsync on CustomProperties results in Undefined AsyncResult,"I have only seen this issue on the Outlook Web App on Exchange 2016 and Exchange 2019. OWA on Exchange 2013 and Office 365 works as expected.

In our Outlook Add-In, we are making use of custom properties. We add a property and call `saveAsync`: https://docs.microsoft.com/en-us/javascript/api/outlook/office.customproperties?view=outlook-js-preview#saveasync-callback--asynccontext- , passing a `callback`

This callback should be called with a `Office.AsyncResult` but instead it is getting ""Undefined"".



## Expected Behavior
The `callback` function being passed into `saveAsync` should get called with a `Office.AsyncResult`

## Current Behavior
The `callback` **is** getting called but the passed `Office.AsyncResult` is Undefined

## Steps to Reproduce, or Live Example
I can reproduce using the code example on https://docs.microsoft.com/en-us/javascript/api/outlook/office.customproperties?view=outlook-js-preview:

```js
(function () {
    'use strict';

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var item = Office.context.mailbox.item;
            item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };

    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get(""myProp"");
        console.log(""myProp: "" + myProp); // First run on current item will return `undefined`.

        // Set myProp custom property.
        customProps.set(""myProp"", ""value"");
        customProps.saveAsync(saveCallback);
    }

    function saveCallback(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Failed) {
            console.error(asyncResult.error.message);
        }
        else {
            console.log(""save successful"");
        }
    }

})();
```
I serve that from a file called `addin.js` and this is the error in the chrome console logs:
![Screenshot from 2020-03-26 13-29-35](https://user-images.githubusercontent.com/11697734/77652268-e2763880-6f65-11ea-8022-b30290728000.png)

So the `asyncResult` being passed into the `saveCallback` is undefined.

Also, this might be interesting: If I run the add-in a second time, this is the console output:
![Screenshot from 2020-03-26 13-31-44](https://user-images.githubusercontent.com/11697734/77652566-557faf00-6f66-11ea-9dac-e68975c93b70.png)

So notice the property has actually been set. I think this means the custom property is getting successfully saved. It's just that the passed in  `asyncResult` is Undefined.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook Web App (OWA) on Exchange Server 2016 and 2019
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: I updated the Exchange 2019 server I am testing with to CU5
* Operating System: Seen on MacOS Mojave 10.14.8, Ubuntu 18.04.4, Windows 10 Pro 1909
* Browser (if using Office Online): Chrome / Firefox on Mac & Ubuntu, Edge on Windows
"
https://api.github.com/repos/OfficeDev/office-js/issues/1061,[Outlook add-in] All add-in can't refresh page,"<!--- Provide a general summary of the issue in the Title above -->
For windows 1909 18363.720 with outlook 2019.
All add-in can't use location.reload() or refresh the page with F5.
And can't show right click menu on any add-in.
 I tried some PC with 1909 and almost all have same problem.

All above works fine on lower windows version which use IE core.
Is Microsoft change a new way refresh pages on add-in?Please let me know.
Thanks

## Expected Behavior
<!--- Tell us what you expected to happen -->
 location.reload() can reload the page.


## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
Try use  location.reload() , F5 and  right click menu refresh add-in page.

## Steps to Reproduce, or Live Example
Just try use  location.reload() , F5 and  right click menu refresh add-in page.
You can reproduce this problem.



## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook 2019
* Office version number: 2002
* Operating System: Windwos 1909 
* Browser (if using Office Online):  NA

"
https://api.github.com/repos/OfficeDev/office-js/issues/1052,addHandlerAsync ItemChanged not working on OWA,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
Callback should be called every time a new email is selected.

## Current Behavior
Callback is never called

## Steps to Reproduce, or Live Example
Manifest looks like the following: 
```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<OfficeApp
          xmlns=""http://schemas.microsoft.com/office/appforoffice/1.1""
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
          xmlns:bt=""http://schemas.microsoft.com/office/officeappbasictypes/1.0""
          xmlns:mailappor=""http://schemas.microsoft.com/office/mailappversionoverrides/1.0""
          xsi:type=""MailApp"">

  <!-- Begin Basic Settings: Add-in metadata, used for all versions of Office unless override provided. -->

  <!-- IMPORTANT! Id must be unique for your add-in, if you reuse this manifest ensure that you change this id to a new GUID. -->
  <Id>904ab911-0807-4d85-94c5-0f53cdbd4a55</Id>

  <!--Version. Updates from the store only get triggered if there is a version change. -->
  <Version>1.0.0.0</Version>
  <ProviderName>TestProvider</ProviderName>
  <DefaultLocale>fr-Fr</DefaultLocale>
  <!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. -->
  <DisplayName DefaultValue=""Mail"" />
  <Description DefaultValue=""test""/>

  <!-- Icon for your add-in. Used on installation screens and the add-ins dialog. -->
  <IconUrl DefaultValue=""https://localhost:3000/assets/icon-32.png"" />
  <HighResolutionIconUrl DefaultValue=""https://localhost:3000/assets/icon-80.png.png""/>

  <!--If you plan to submit this add-in to the Office Store, uncomment the SupportUrl element below-->
  <SupportUrl DefaultValue=""https://google.fr"" />

  <!-- Domains that will be allowed when navigating. For example, if you use ShowTaskpane and then have an href link, navigation will only be allowed if the domain is on this list. -->
  <AppDomains>
    <AppDomain>AppDomain1</AppDomain>
    <AppDomain>AppDomain2</AppDomain>
    <AppDomain>AppDomain3</AppDomain>
  </AppDomains>
  <!--End Basic Settings. -->

  <Hosts>
    <Host Name=""Mailbox"" />
  </Hosts>
  <Requirements>
    <Sets>
      <Set Name=""Mailbox"" MinVersion=""1.3"" />
    </Sets>
  </Requirements>
  <FormSettings>
    <Form xsi:type=""ItemRead"">
      <DesktopSettings>
        <SourceLocation DefaultValue=""https://localhost:3000/index.html""/>
        <RequestedHeight>250</RequestedHeight>
      </DesktopSettings>
    </Form>
  </FormSettings>

  <Permissions>ReadWriteMailbox</Permissions>
  <Rule xsi:type=""RuleCollection"" Mode=""Or"">
    <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Read"" ItemClass=""IPM.Note"" />
  </Rule>
  <DisableEntityHighlighting>false</DisableEntityHighlighting>

  <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
    <Requirements>
      <bt:Sets DefaultMinVersion=""1.3"">
        <bt:Set Name=""Mailbox"" />
      </bt:Sets>
    </Requirements>
    <Hosts>
      <Host xsi:type=""MailHost"">

        <DesktopFormFactor>
          <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
          <FunctionFile resid=""Commands.Url"" />

          <!-- Message Read -->
          <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
            <!-- Use the default tab of the ExtensionPoint or create your own with <CustomTab id=""myTab""> -->
            <OfficeTab id=""TabDefault"">
              <!-- Up to 6 Groups added per Tab -->
              <Group id=""msgReadGroup"">
                <Label resid=""GroupLabel"" />
                <!-- Launch the add-in : task pane button -->
                <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                  <Label resid=""TaskpaneButton.Label"" />
                  <Supertip>
                    <Title resid=""TaskpaneButton.Label"" />
                    <Description resid=""TaskpaneButton.Tooltip"" />
                  </Supertip>
                  <Icon>
                    <bt:Image size=""16"" resid=""Icon.16x16"" />
                    <bt:Image size=""32"" resid=""Icon.32x32"" />
                    <bt:Image size=""80"" resid=""Icon.80x80"" />
                  </Icon>
                  <Action xsi:type=""ShowTaskpane"">
                    <SourceLocation resid=""Taskpane.Url"" />
                  </Action>
                </Control>
                <!-- Go to http://aka.ms/ButtonCommands to learn how to add more Controls: ExecuteFunction and Menu -->
              </Group>
            </OfficeTab>
          </ExtensionPoint>
          <!-- Go to http://aka.ms/ExtensionPointsCommands to learn how to add more Extension Points: MessageRead, AppointmentOrganizer, AppointmentAttendee -->
        </DesktopFormFactor>
      </Host>
    </Hosts>

    <Resources>
      <bt:Images>
        <bt:Image id=""Icon.16x16"" DefaultValue=""https://localhost:3000/assets/icon-16.png""/>
        <bt:Image id=""Icon.32x32"" DefaultValue=""https://localhost:3000/assets/icon-32.png""/>
        <bt:Image id=""Icon.80x80"" DefaultValue=""https://localhost:3000/assets/icon-80.png""/>
      </bt:Images>
      <bt:Urls>
        <bt:Url id=""Commands.Url"" DefaultValue=""https://localhost:3000/commands.html"" />
        <bt:Url id=""Taskpane.Url"" DefaultValue=""https://localhost:3000/taskpane.html"" />
      </bt:Urls>
      <bt:ShortStrings>
        <bt:String id=""GroupLabel"" DefaultValue=""Contoso Add-in""/>
        <bt:String id=""TaskpaneButton.Label"" DefaultValue=""Show Taskpane""/>
      </bt:ShortStrings>
      <bt:LongStrings>
        <bt:String id=""TaskpaneButton.Tooltip"" DefaultValue=""Opens a pane displaying all available properties.""/>
      </bt:LongStrings>
    </Resources>
    <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
        <Requirements>
            <bt:Sets DefaultMinVersion=""1.5"">
                <bt:Set Name=""Mailbox"" />
            </bt:Sets>
        </Requirements>
        <Hosts>
            <Host xsi:type=""MailHost"">

                <DesktopFormFactor>
                    <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
                    <FunctionFile resid=""Commands.Url"" />

                        <!-- Message Read -->
                    <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
                        <!-- Use the default tab of the ExtensionPoint or create your own with <CustomTab id=""myTab""> -->
                            <OfficeTab id=""TabDefault"">
                                <!-- Up to 6 Groups added per Tab -->
                                <Group id=""msgReadGroup"">
                                    <Label resid=""GroupLabel"" />
                                        <!-- Launch the add-in : task pane button -->
                                    <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                                        <Label resid=""TaskpaneButton.Label"" />
                                        <Supertip>
                                            <Title resid=""TaskpaneButton.Label"" />
                                            <Description resid=""TaskpaneButton.Tooltip"" />
                                        </Supertip>
                                        <Icon>
                                            <bt:Image size=""16"" resid=""Icon.16x16"" />
                                            <bt:Image size=""32"" resid=""Icon.32x32"" />
                                            <bt:Image size=""80"" resid=""Icon.80x80"" />
                                        </Icon>
                                        <Action xsi:type=""ShowTaskpane"">
                                            <SourceLocation resid=""Taskpane.Url"" />
                                            <SupportsPinning>true</SupportsPinning>
                                        </Action>
                                    </Control>
                                    <!-- Go to http://aka.ms/ButtonCommands to learn how to add more Controls: ExecuteFunction and Menu -->
                                </Group>
                            </OfficeTab>
                        </ExtensionPoint>
                        <!-- Go to http://aka.ms/ExtensionPointsCommands to learn how to add more Extension Points: MessageRead, AppointmentOrganizer, AppointmentAttendee -->
                    </DesktopFormFactor>
                </Host>
            </Hosts>

            <Resources>
                <bt:Images>
                    <bt:Image id=""Icon.16x16"" DefaultValue=""https://localhost:3000/assets/icon-16.png""/>
                    <bt:Image id=""Icon.32x32"" DefaultValue=""https://localhost:3000/assets/icon-32.png""/>
                    <bt:Image id=""Icon.80x80"" DefaultValue=""https://localhost:3000/assets/icon-80.png""/>
                </bt:Images>
                <bt:Urls>
                    <bt:Url id=""Commands.Url"" DefaultValue=""https://localhost:3000/commands.html"" />
                    <bt:Url id=""Taskpane.Url"" DefaultValue=""https://localhost:3000/taskpane.html"" />
                </bt:Urls>
                <bt:ShortStrings>
                    <bt:String id=""GroupLabel"" DefaultValue=""Contoso Add-in""/>
                    <bt:String id=""TaskpaneButton.Label"" DefaultValue=""Show Taskpane""/>
                </bt:ShortStrings>
                <bt:LongStrings>
                    <bt:String id=""TaskpaneButton.Tooltip"" DefaultValue=""Opens a pane displaying all available properties.""/>
                </bt:LongStrings>
            </Resources>
        </VersionOverrides>
  </VersionOverrides>
</OfficeApp>
```

Code is like the following:

```javascript
Vue.config.productionTip = false
Office.initialize = () => {

    // new Vue({
    //   store: CredentialsStore,
    //   render: h => h(App),
    //   router: router,
    // }).$mount('#app')

    console.log('iteminit');
    Office.context.mailbox.removeHandlerAsync(Office.EventType.ItemChanged);
    Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, (type) => {
        console.log('itemChanged' + type);
    }, (result: Office.AsyncResult<void>) => {
        console.log('item ' + result.status);
    });
};
```

* Additional details:
  1. I generated a vue app and then only manifest using yeoman

## Context
I simply need to know when a different mail is selected from the reading pane on the left
## Your Environment

<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook Web App
* Office version number: Latest (365 subscription)
* Operating System: Os 10.14.5
* Browser (if using Office Online): Chrome 80.0.3987.132 64bits

## Useful logs
Only iteminit is logged. result.status returns ""succeeded"" but my callback is never called.

Also this is logged when taskpane is pinned and I select a different mail:
```
VM12018 outlook-web-16.01.alpha.js:19 Uncaught TypeError: Cannot set property 'permissionLevel' of undefined
    at e.initialize (VM12018 outlook-web-16.01.alpha.js:19)
    at Object.OSF.DDA.OMFactory.manufactureEventArgs (VM12018 outlook-web-16.01.alpha.js:19)
    at Object.onEvent (VM12018 outlook-web-16.01.alpha.js:19)
    at VM12018 outlook-web-16.01.alpha.js:19
    at J (VM12018 outlook-web-16.01.alpha.js:19)
```"
https://api.github.com/repos/OfficeDev/office-js/issues/1051,recurrenceAdapter.ts:13 Uncaught (in promise) TypeError: Cannot read property 'Recurrence' of null,"<!--- Provide a general summary of the issue in the Title above -->
When outlook add-in loading in OWA ""recurrenceAdapter.ts:13 Uncaught (in promise) TypeError: Cannot read property 'Recurrence' of null"" error can be seen in console. and add-in stops working
## Expected Behavior
<!--- Tell us what you expected to happen -->
add-in should work without issue
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
add-in does not work  
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
 
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
 
 
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
 
* Operating System: windows
* Browser (if using Office Online): Chrome 

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
```
 Uncaught (in promise) TypeError: Cannot read property 'Recurrence' of null
    at recurrenceAdapter.ts:13
    at VM144:405
    at Object.next (VM144:405)
    at VM144:405
    at new Promise (<anonymous>)
    at l (VM144:405)
    at Object.q [as getRecurrence] (recurrenceAdapter.ts:11)
    at getInitialAppointmentReadData.ts:52
    at VM144:405
    at Object.next (VM144:405)
```
![image](https://user-images.githubusercontent.com/5784846/76934750-bb8c8680-6915-11ea-8a3d-826e38bc8010.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1050,Outlook Web Access (OWA) fails to load add-ins for calendar items,"OWA fails to load add-ins. The callback for onReady is never executed for Meetings/Appointments

## Expected Behavior
The call back for onReady should be executed.  Please note that this was working earlier and broke only recently ( ~ a week ago)

## Current Behavior
onReady callback is never executed. Console log has a null reference exception. (Attached is the log) 

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. Side load a test Outlook add-in with an ""onReady"" callback
  2. Console.log should below exception. 
![image](https://user-images.githubusercontent.com/52792802/76863138-75f88c80-6835-11ea-84bb-713ca1154c45.png)


## Context
The add-in never loads on OWA for meetings

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Windows 10, Office Web
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Semi annual channel
* Operating System: Windows 10
* Browser (if using Office Online): Chrome v79

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ x] Console errors
- [ x] Screenshots
![image](https://user-images.githubusercontent.com/52792802/76863349-bf48dc00-6835-11ea-9ed8-57aa6ec79437.png)

`recurrenceAdapter.ts:13 Uncaught (in promise) TypeError: Cannot read property 'Recurrence' of null
    at recurrenceAdapter.ts:13
    at VM148:405
    at Object.next (VM148:405)
    at VM148:405
    at new Promise (<anonymous>)
    at l (VM148:405)
    at Object.q [as getRecurrence] (recurrenceAdapter.ts:11)
    at getInitialAppointmentReadData.ts:52
    at VM148:405
    at Object.next (VM148:405)
(anonymous) @ recurrenceAdapter.ts:13
(anonymous) @ VM148:405
(anonymous) @ VM148:405
(anonymous) @ VM148:405
l @ VM148:405
q @ recurrenceAdapter.ts:11
(anonymous) @ getInitialAppointmentReadData.ts:52
(anonymous) @ VM148:405
(anonymous) @ VM148:405
(anonymous) @ VM148:405
l @ VM148:405
Tt @ getInitialAppointmentReadData.ts:23
(anonymous) @ TimeTypeEnum.ts:1
(anonymous) @ VM148:405
(anonymous) @ VM148:405
(anonymous) @ VM148:405
l @ VM148:405
Ft @ getInitialData.ts:25
(anonymous) @ owa.Addins.js:1
(anonymous) @ VM148:405
(anonymous) @ VM148:405
(anonymous) @ VM148:405
l @ VM148:405
(anonymous) @ getInitialDataApiMethod.ts:19
cn @ executeApiMethod.ts:74
(anonymous) @ EndpointRegistrator.ts:169
invoke @ osfruntime.js:2003
A @ osfruntime.js:1565
M @ osfruntime.js:1691
Promise.then (async)
s @ VM148:405
(anonymous) @ VM148:405
l @ VM148:405
(anonymous) @ getInitialDataApiMethod.ts:19
cn @ executeApiMethod.ts:74
(anonymous) @ EndpointRegistrator.ts:169
invoke @ osfruntime.js:2003
A @ osfruntime.js:1565
M @ osfruntime.js:1691
`
"
https://api.github.com/repos/OfficeDev/office-js/issues/1040,Outlook add-in OfficeOnline IE11: Office.context.mailbox.item.body.setAsync not work on IE11,"```
var options = {coercionType: Office.CoercionType.Html};
Office.context.mailbox.item.body.setAsync(""1234"",  options, function (result) {
    console.log(result);
});
```

execute above code for ie11 outlook office365 online on add-in, it can't set any body to the mail invitation body."
https://api.github.com/repos/OfficeDev/office-js/issues/1039,"Outlook Online, Safari, setSelectedDataAsync produces incorrect formatting","In an Outlook add-in for compose mode, we use the Office JS API to fill in email fields.  The setSelectedDataAsync method inserts HTML with incorrect markup.

## Expected Behavior
The setSelectedDataAsync method should work as expected.

## Current Behavior
The setSelectedDataAsync method ignores markup in Safari.

## Steps to Reproduce, or Live Example
Create a new email in Outlook Online using the Safari browser and execute the following code:
`const data = '<strong>bold</strong> normal text';
Office.context.mailbox.item.body.setSelectedDataAsync(data, { coercionType: Office.CoercionType.Html }, (asyncResult) => {});`

Result: all the inserted text is bold.
Expected: only the 'bold' text should be bold.

* Additional details:
  1. Everything works as expected on Outlook for Mac 16.35 (20030802) and Outlook Online in Chrome

## Context

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ______
* Operating System: Mac OS Catalina 10.15.3 (19D76)
* Browser (if using Office Online): Safari Version 13.0.5 (15608.5.11)

## Useful logs
"
https://api.github.com/repos/OfficeDev/office-js/issues/1035,Microsoft Outlook 2013 meet crash when starting,"I am developing Outlook add-in using add-in execute a function.
I implement TLS 1.2 for add-in by:
**ServicePointManager.SecurityProtocol = (SecurityProtocolType)3072;**
After that, I build .exe file and install into outlook. It works ok on outlook 2016, outlook 365 but meet crash on outlook 2013 when starting.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Microsoft Outlook 2013
* Office version number: 15.0.4569.1506
* Operating System: Windows 7
* .Net Framework: 4.0 and 4.5"
https://api.github.com/repos/OfficeDev/office-js/issues/1030,Not a real useful feature,"Given that the SaveAsync method doesn't really ""save"" the data and it gets reset to default (see ""Important"" note at the top of the page) means this API method is not dependable enough to actually use.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 48ebc3bd-026b-1f53-9759-d08f528b1a5b
* Version Independent ID: a5b370a0-ec65-7e19-4748-20d3235eacda
* Content: [Office.RoamingSettings interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook/office.roamingsettings?view=outlook-js-preview)
* Content Source: [docs/docs-ref-autogen/outlook/outlook/office.roamingsettings.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook/outlook/office.roamingsettings.yml)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/1028,[Outlook] Office.context.mailbox.displayNewMessageForm doesn't show form correctly,"<!--- Provide a general summary of the issue in the Title above -->
Sometimes when I call the Office.context.mailbox.displayNewMessageForm API, the compose new email form is not right. The code calling API is like:
if (!!Office.context.requirements.isSetSupported && Office.context.requirements.isSetSupported(""Mailbox"", 1.6)) {
    Office.context.mailbox.displayNewMessageForm({
        toRecipients: [""user1@microsoft.com"", ""user2@microsoft.com""],
        subject: ""Test subject"",
        htmlBody: ""Test body""
    });
}

When run this Outlook App Add-in, it's all right, it shows a new email with the to recipients, body and subject. But in [Outlook web service](https://outlook.office.com/mail/)'s add-in, sometimes in the new email, to recipients, subject and body are all empty. I checked the console logs and network logs, no explicit errors or warnings.

The same issue when I was calling:
Office.context.mailbox.displayNewAppointmentForm({
                requiredAttendees: [],
                optionalAttendees: [""user1@microsoft.com"", ""user2@microsoft.com""],
                start: startTime,
                end: endTime,
                location: """",
                resources: [],
                subject: ""Test subject"",
                body: ""Test body""
            });

There is a new meeting form, but sometimes the attendees, subject and body are all empty.
It's a transient issue, sometimes it woks fine, sometimes not.
Appreciate any suggestions about how to fix it.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Laptop
* Host [Excel, Word, PowerPoint, etc.]: Outlook Web Service
* Operating System: Windows 10
* Browser (if using Office Online): Edge and Chrome

"
https://api.github.com/repos/OfficeDev/office-js/issues/1027,Outlook Add-in can't work on Android 9 and Android 10,"I am developing Outlook add-in using add-in command to execute a function.
The test version of the add-in will open dialog then user can choose to click OK or cancel then another dialog will appear and user can click OK to complete the action.
The add-in works well on iOS and web, but not on Android

**Expected Behavior**
I expected the add-in can work on web, iOS, Android

1. The add-in will show notification "" is working on your request""
2. The add-in then show notification ""step 1""
3. The add-in then open a dialog allow user to click button to send message back to parent and the dialog is closed
4. The notification show ""step 2""
5. The dialog will appear and allow user to click button to send message back to parent and the dialog is closed
6. Action complete

**Current Behavior**
The add-in works very well on web and iOS. But when it comes to Android, the problem appears:

Sometimes the add-in stops working, the only notification message appears is "" is working on your request"" and it spinning forever.
Sometimes the add-in successfully opens the dialog but I click many times to the button on the dialog and nothing happened, no error showing up, it just stays there. Need to press X to close the dialog.
Sometimes the add-in can stop at any step.
Sometimes the add-in does successfully the expected steps.

**Steps to Reproduce, or Live Example**
Link to live example: ______
https://github.com/ntranvinh/AndroidOutlookAddinSample

**Your Environment**
Platform [PC desktop, Mac, iOS, Office Online]: Android
Host [Excel, Word, PowerPoint, etc.]: Outlook
Office version number: the latest version of Outlook for Android on 2020-04-02
Operating System: Android version 9 and Android version 10"
https://api.github.com/repos/OfficeDev/office-js/issues/1026,"Getting error ""Cannot set property 'permissionLevel' of undefined"" when switching folders","When switching folders and my add-in is pinned, I see an error from office.js library
`Cannot set property 'permissionLevel' of undefined`

It is coming from these lines, source map indicates it is https://appsforoffice.microsoft.com/lib/1.1/hosted/outlook-web-16.01.alpha.debug.js:

```
    this.initialize = function (data) {
      if (data === null) { // Should check not only for null. Should be if(!data)
        recreateAdditionalGlobalParametersSingleton(true);
        _this.initialData = null;
        _this.item = null;
      } else {
        _this.initialData = data;
// _this.initialData is undefined since data is undefined
        _this.initialData.permissionLevel = calculatePermissionLevel();
        _this.item = prepareApiSurface_getItem();
        var supportsAdditionalParameters = getAppName() !== OutlookAppOm_OSF.AppName.Outlook || isOutlook16_isOutlook16OrGreater(getInitialDataProp(""hostVersion"")) || isApiVersionSupported(""1.5"", _this.officeAppContext);
        recreateAdditionalGlobalParametersSingleton(supportsAdditionalParameters);

        if (typeof data.itemNumber !== ""undefined"") {
          getAdditionalGlobalParametersSingleton().setCurrentItemNumber(data.itemNumber);
        }
      }
    };


```
## Steps to Reproduce, or Live Example
1. Open a mail item with a sidebar pinned.
2. Click on a different folder.

## Context

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform"" Office Online
* Host: Outlook
* Operating System: Ubuntu
* Browser (if using Office Online): Chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/1021,Outlook: How to detect which screen the add-in is working?,"Does someone know how to detect which screen the add-in is working when we are working with Outlook? Thank you since now.

This question is related to this strange behaviour: https://stackoverflow.com/questions/60435454/microsoft-outlook-web-desktop-add-in/60441711"
https://api.github.com/repos/OfficeDev/office-js/issues/1019,Outlook on the web: custom property not saved in onsend script,"when you set properties in onsend script, the last property you set is not being saved. I have an onsend script that saves some custom data in the mail item metadata. After each property change I save the custom property and wait until the save callback called with success. All data is saved except from the last one. If I repeat the last property set twice, it works. The bug doesn't exist in windows or mac, just in the web version.



---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 6df38293-7e0a-a019-ded2-3ed960ceb18b
* Version Independent ID: 62a8ffba-8baa-c6ff-4063-81b507fc8dd4
* Content: [Get and set metadata in an Outlook add-in - Office Add-ins](https://docs.microsoft.com/en-us/office/dev/add-ins/outlook/metadata-for-an-outlook-add-in?view=outlook-js-preview#feedback)
* Content Source: [docs/outlook/metadata-for-an-outlook-add-in.md](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/outlook/metadata-for-an-outlook-add-in.md)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/1015,body.getAsync returns different value in native outlook and OutlookWeb in different browsers,"<!--- Provide a general summary of the issue in the Title above -->
When using the context.mailbox.item.body to get the email content, for some email, the results are different in native outlook Mac/Windows and Outlook online in different browser

## Expected Behavior
<!--- Tell us what you expected to happen -->
Expects the results are the same for all
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
The results are different. Some words are with whitespace for the API in outlook online which is unexpected.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
I hope the API from different platforms return the same result as possible as they can.
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______Install any add-in which has the privilege to read email
  2. ______Open outlook for mac and the test add-in panel, inspect the add-in
  3. ______use the Office API body.getAsync to get the email content
  4. ______Do the same steps 2,3 in outlook Web in chrome, firefox
  5. ______The returned text for some email are a little different. Some text are not split by whitespace in native outlook, but it's split in outlook online.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Use this script to quick test

```
await new Promise((resolve, reject) => {
   window.Office.context.mailbox.item.body.getAsync('text', (result) => {
     if (result.status === 'succeeded') {
       const output = result.value.replace(/(\r\n|\n|\r)/gm,"" "").replace(/\s+/g, ' ')
       console.log(output)
       return resolve(output);
     } else {
       console.error(result.error)
       return reject(result.error);
     }
   })
 })
```
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: ______ Mac 
* Host [Excel, Word, PowerPoint, etc.]: ______ Outlook
* Office version number: ______  16.33 (20011301)
* Operating System: ______ 10.15.3 (19D76)
* Browser (if using Office Online): ______  Chrome Version 79.0.3945.130 (Official Build) (64-bit)  / Firefox 73.0.1

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [x] Console info
For the example Email I chose, the body.getAync by`html` from native outlook and outlook online are very different, while the result by 'text' are better but still different.

The html from native outlook
```
""<!DOCTYPE html PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EN\""> <html> <head> <meta http-equiv=\""Content-Type\"" content=\""text/html; charset=utf-8\""> <script> </script> <title></title> <style type=\""text/css\""> .formattedID{ -webkit-user-select: none; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-size: auto; border-bottom-color: rgb(41, 190, 255); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-image-outset: 0px; border-image-repeat: stretch; border-image-slice: 100%; border-image-source: none; border-image-width: 1; border-left-color: rgb(41, 190, 255); border-left-style: none; border-left-width: 0px; border-right-color: rgb(41, 190, 255); border-right-style: none; border-right-width: 0px; border-top-color: rgb(41, 190, 255); border-top-style: none; border-top-width: 0px; box-sizing: border-box; color: rgb(41, 190, 255); cursor: auto; display: inline; font-family: NotoSansBold, Helvetica, Arial; font-size: 18px; font-style: normal; font-variant: normal; font-weight: normal; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: rgb(41, 190, 255); outline-style: none; outline-width: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: left; text-decoration: none; vertical-align: top; white-space: nowrap; width: auto; zoom: 1; } .artifactName{ background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-image-outset: 0px; border-image-repeat: stretch; border-image-slice: 100%; border-image-source: none; border-image-width: 1; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; border-top-color: rgb(0, 0, 0); box-sizing: border-box; color: rgb(0, 0, 0); cursor: auto; display: inline; font-family: NotoSans, Helvetica, Arial; font-size: 17px; font-stretch: normal; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: left; text-indent: 0px; text-rendering: auto; text-shadow: none; text-transform: none; width: auto; word-spacing: 1px; writing-mode: lr-tb; } .th{ vertical-align: top; text-align: left; } .headerTable{ -webkit-user-select: none; background-repeat: no-repeat; border-bottom-color: rgb(34, 34, 34); border-bottom-style: none; border-bottom-width: 0px; border-image-outset: 0px; border-image-repeat: stretch; border-image-slice: 100%; border-image-source: none; border-image-width: 1; border-left-color: rgb(34, 34, 34); border-left-style: none; border-left-width: 0px; border-right-color: rgb(34, 34, 34); border-right-style: none; border-right-width: 0px; border-top-color: rgb(34, 34, 34); border-top-style: none; border-top-width: 0px; box-sizing: border-box; color: rgb(34, 34, 34); cursor: pointer; display: inline; font-family: ProximaNovaSemiBold, Helvetica, Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; height: auto; line-height: 18px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: rgb(34, 34, 34); outline-style: none; outline-width: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: left; text-transform: uppercase; vertical-align: text-bottom; white-space: normal; width: auto; zoom: 1; } .tbl{ border-collapse: collapse; } .trr{ -webkit-user-select: none; background-color: rgb(230,230,230); border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-image-outset: 0px; border-image-repeat: stretch; border-image-slice: 100%; border-image-source: none; border-image-width: 1; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; border-top-color: rgb(0, 0, 0); border-top-style: solid; border-top-width: 1px; box-sizing: border-box; color: rgb(0, 0, 0); cursor: default; display: table-row; font-family: NotoSans, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; height: 50px; line-height: 14.2857px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; vertical-align: baseline; width: 1482.73px; } .italics{ font-style: italic; } </style> </head> <body> <table border=\""0\"" cellpadding=\""0\"" cellspacing=\""0\""> <tbody> <tr> <td style=\""vertical-align: top\""><span class=\""formattedID\""><a href=\""https://rally1.rallydev.com/#/detail/defect/372469324424\"">DE162329:</a></span> </td> <td style=\""text-align: left\""><span class=\""artifactName\"">[HyperOutlook] It shows no keyword first, then show matched keywords after reopen the app.<br> <br> </span></td> </tr> </tbody> </table> <br> <table class=\""tbl\"" cellpadding=\""0\"" cellspacing=\""0\""> <thead> <tr class=\""theaderr\""> <th scope=\""col\""><span class=\""headerTable\"">Ting Dong said:</span> </th> </tr> </thead> <tbody> <tr class=\""trr\""> <td>The issue is FCed in the latest hyperoutlook build 11.2.0.521.<br> @jzeng @lichen</td> </tr> </tbody> </table> <br> <p class=\""italics artifactName\"">Click <a href=\""https://rally1.rallydev.com/#/detail/defect/372469324424/discussion\""> here</a> to answer</p> </body> </html> ""
```

The html from outlook online
```
""<div> <div> <table border=""0"" cellspacing=""0"" cellpadding=""0""> <tr> <td style=""vertical-align:top;""><span style=""color:#29BEFF;font-size:18px;font-family:NotoSansBold,Helvetica,Arial;font-weight:normal;font-style:normal;font-variant:normal;text-align:left;vertical-align:top;display:inline;border-collapse:separate;text-decoration:none;white-space:nowrap;margin:0;padding:0;border:0 none #29BEFF;background-attachment:scroll;background-clip:border-box;background-image:none;background-origin:padding-box;background-size:auto;box-sizing:border-box;outline-color:rgb(41,190,255);outline-style:none;outline-width:0px;zoom:1;""><a href=""https://rally1.rallydev.com/#/detail/defect/372469324424"">DE162329:</a></span> </td> <td style=""text-align:left;""><span style=""color:black;font-size:17px;font-family:NotoSans,Helvetica,Arial;font-weight:normal;font-style:normal;font-variant:normal;text-transform:none;text-align:left;text-indent:0;background-color:white;display:inline;border-collapse:separate;margin:0;padding:0;border-color:black;border-right-width:0;border-bottom-width:0;border-left-width:0;border-right-style:none;border-bottom-style:none;border-left-style:none;background-attachment:scroll;background-clip:border-box;box-sizing:border-box;font-stretch:normal;letter-spacing:normal;word-spacing:1px;writing-mode:lr-tb;"">[HyperOutlook] It shows no keyword first, then show matched keywords after reopen the app.<br> <br> </span></td> </tr> </table> <br> <table cellspacing=""0"" cellpadding=""0"" style=""border-collapse:collapse;""> <tr> <th scope=""col""><span style=""color:#222222;font-size:16px;font-family:ProximaNovaSemiBold,Helvetica,Arial;font-weight:bold;font-style:normal;font-variant:normal;text-transform:uppercase;text-align:left;vertical-align:text-bottom;display:inline;white-space:normal;margin:0;padding:0;border:0 none #222222;background-repeat:no-repeat;box-sizing:border-box;line-height:18px;outline-color:rgb(34,34,34);outline-style:none;outline-width:0px;zoom:1;"">Ting Dong said:</span> </th> </tr> <tr style=""color:black;font-size:16px;font-family:NotoSans,Helvetica,Arial,sans-serif;font-weight:normal;font-style:normal;font-variant:normal;vertical-align:baseline;background-color:#E6E6E6;display:table-row;width:1482.73px;height:50px;border-collapse:separate;margin:0;padding:0;border-width:1px 0 0 0;border-style:solid none none none;border-color:black;box-sizing:border-box;line-height:14.2857px;outline-color:rgb(0,0,0);outline-style:none;outline-width:0px;""> <td>The issue is FCed in the latest hyperoutlook build 11.2.0.521.<br> @jzeng @lichen</td> </tr> </table> <br> <p>Click <a href=""https://rally1.rallydev.com/#/detail/defect/372469324424/discussion"">here</a> to answer</p> </div> </div> ""
```

The text from outlook native
```
DE162329:[HyperOutlook] It shows no keyword first, then show matched keywords after reopen the app. Ting Dong said: The issue is FCed in the latest hyperoutlook build 11.2.0.521. @jzeng @lichen Click here to answer 
```
The text from outlook online
```
DE162329: [HyperOutlook] It shows no keyword first, then show matched keywords after reopen the app. Ting Dong said: The issue is FCed in the latest hyperoutlook build 11.2.0.521. @jzeng @lichen Click here to answer 
```
- [x] Screenshots
As shown in the two pictures, there is additional whitespace in result from outlook web in Chrome, after the `DE162415:`
The screenshot from the outlook for Mac
![image](https://user-images.githubusercontent.com/10008129/75809119-3d958080-5d56-11ea-884d-9ffd1606000e.png)

The screenshot for outlook web in Chrome
![image](https://user-images.githubusercontent.com/10008129/75809243-76355a00-5d56-11ea-9341-9e92eeb300c9.png)


- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/1013,[Outlook] All Add-in disabled in shared calendar on outlook,"<!--- Provide a general summary of the issue in the Title above -->
We are on o365 using outlook windows 10 version 1901 with outlook version 1908 (16.0.12130.20272).
When we try to use add-in in a shared calendar all add-in are disabled.(the owner delegated editor authority).
Not every PC got this problem but I wonder why this happened? And how to fix it.

## Expected Behavior
add-in is available in shared calendar.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
All add-ins are disabled in shared calendar.

## Steps to Reproduce, or Live Example
Open a shared calendar and open a new event. Then trying open an add-in in this event.
Will find add-in are all disabled.


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.12130.20272
* Operating System: windows 10 1803
* Browser (if using Office Online): ______

If this is an known issue please give me a link.
If anything else info you need please let me know, Thanks.
"
https://api.github.com/repos/OfficeDev/office-js/issues/1009,"Shared MailBox, OfficeJS saveAsync() and other OfficeJS API not working","<!--- Provide a general summary of the issue in the Title above -->
On our Outlook add-in for compose mode, we are using the Office JS API to save the email draft by calling ```Office.context.mailbox.item.saveAsync()```

## Expected Behavior
<!--- Tell us what you expected to happen -->
Office JS methods should work.



## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

code: 5009 
message: “This browser does not support the requested API.” 
Name: “API Not Supported” 
status: “failed”

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->

Add a shared mailbox:

1. Find and Open a shared mailbox

Steps to reproduce:

1. Create a new email in Outlook for Mac
2. In the From field, select the shared mailbox
3. Open and add-in's pane and try to call
Office.context.mailbox.item.saveAsync()
console log the result and returns the following:
  - code: 5009 
  - message: “This browser does not support the requested API.” 
  - Name: “API Not Supported” 
  - status: “failed”


<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:

This use to work in older version of Mac Outlook prior to the described Mac Outlook version

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Mac
* Host: Outlook for Mac
* Office version number: 16.34 (20020900)
* Operating System: ______
* Browser (if using Office Online): ______

"
https://api.github.com/repos/OfficeDev/office-js/issues/1008,"Outlook desktop: addFileAttachmentFromBase64Async throws code: 5001, message: ""An internal error has occurred."" in pinned add-in","In an Outlook add-in for compose mode, we are using the addFileAttachmentFromBase64Async method to add attachments. In Outlook desktop, the ""Internal Error"" occurs if the add-in's pane is pinned.

## Expected Behavior
The error should not occur.

## Current Behavior
Error:
code: 5001
message: ""An internal error has occurred.""
name: ""Internal Error""

## Steps to Reproduce, or Live Example
1. Create a new email in Outlook desktop.
2. Open the add-in’s pane and pin it.
3. Close the created email.
4. Select any email in the Outlook Inbox
5. Click the Reply or Forward button. The add-in’s pane opens automatically.
6. Execute the following code:
`const options: Office.AsyncContextOptions & { isInline: boolean } = { isInline: false };
Office.context.mailbox.item.addFileAttachmentFromBase64Async('MQ==', 'test.txt', options, (result: Office.AsyncResult<string>) => {
   console.log(result);
});`

* Additional details:
  1. The event handler for the ItemChanged event is registered.
  2. Other API methods work correctly.

## Context

## Your Environment
* Platform: PC desktop
* Host: Outlook
* Office version number: Microsoft Outlook for Office 365 MSO (16.0.12430.20112) 32-bit
* Operating System: Windows 10 x64
* Browser (if using Office Online): ______

"
https://api.github.com/repos/OfficeDev/office-js/issues/997,Office.context.mailbox.item.internetMessageId has inconsistent formatting on clients,"Office.context.mailbox.item.internetMessageId has inconsistent formatting on clients

## Expected Behavior
When accessing this property, regardless of client, the return value formatting should be consistent.

## Current Behavior
On Mac and Window Outlook clients the property value is NOT wrapped in greater/less than symbols.

## Steps to Reproduce, or Live Example
Access the internetMessageId property on specified clients and view the discrepancy.  

## Context
We need a correctly formatting value that is consistent across clients.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: ~~PC Desktop~~, Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.35
* Operating System: ~~Windows~~ / OSx
* Browser (if using Office Online): n/a

## Useful logs
n/a
"
https://api.github.com/repos/OfficeDev/office-js/issues/996,displayMessageForm failures without an indicator,"There appears to be some race conditions around the outcome of this feature that cause a failure when a newly created item.itemId is specified.  The caller/consumer has no indication that the request failed.

## Expected Behavior
The ability to display a message form should permit a callback to be passed that expects an indicator of success/failure for the request.

## Current Behavior
When displayMessage form fails the caller is never made aware.
Allowing a callback to be passed would permit the request to handle the failure.

## Steps to Reproduce, or Live Example
(psuedo)

```
const request = // create new draft xml
Office.context.mailbox.makeEwsRequestAsync(request, (asyncResult) => {
    const draftId = parseXmlAndGetItemIdFromResponse(asyncResult.value)
    Office.context.mailbox.displayMessageForm(draftId);
})
```

## Context
Attempting to create an email draft with an EWS request then displaying the new draft in a message form.  

## Your Environment

This bug can be reproduced in all versions, platforms, hosts.  The nature of the race condition may mean that multiple attempts are required to reproduce.

* Platform [PC desktop, Mac, iOS, Office Online]: ALL
* Host [Excel, Word, PowerPoint, etc.]: Outlook Client / Browser
* Office version number: ALL
* Operating System: ALL
* Browser (if using Office Online): ALL

## Useful logs
n/a
"
https://api.github.com/repos/OfficeDev/office-js/issues/999,Deployment. Self hosting the source (?),"## Article URL
https://docs.microsoft.com/en-us/office/dev/add-ins/publish/publish

Greetings.
I have built a add-in for Outlook following the tutorials. When the time came to deploy, I made a build and uploaded the dist files to a personal server. Its accessible through the web without restricting, the files are all being served correctly.
Then I edited my manifest.xml file changing the file source from `localhost:3000` to my online url.

When I tried to install the add-in in Outlook, desktop application, it installs and displays correctly. However, when clicking on the button to see the taskpane, outlooks reports a network error and tells me to make sure I am connected to the internet.

I tried installing the add-in in the web client at `outlook.office.com` and it installed and loads correctly. No network error whatsoever.

So my question is, is it possible that Outlook deskptop is blocking the requests to my custom server?
Is my method of deployment valid at all, or am I forced to go through AppSource?

Thanks, I googled this but could not find anything related to my particular problem / question.
 
"
https://api.github.com/repos/OfficeDev/office-js/issues/991,Getting Cross-Origin error when using OWA rest api in owa add-in in On-Premises,"I'm getting this error:
```
Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https:///{onPremisesOrigin}/v2.0/me/messages/…/?$expand=attachments($select=Name,Size,IsInline,ContentType). (Reason: CORS request did not succeed).
```
when fetching the message using [OWA REST API](https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations)
As far as I know, using rest api is available since [the add-in api 1.5](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/outlook-requirement-set-1.5), which has to be supported as it's mentioned [this the documentation](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets#exchange-server-support)
Is this a bug or On-Premises dose not support OWA rest api? if so do I need to do hybrid deployments? following [this](https://docs.microsoft.com/en-us/graph/hybrid-rest-support#requirements-for-the-rest-api-to-work-in-hybrid-deployments) and [this](https://techcommunity.microsoft.com/t5/exchange-team-blog/on-premises-architectural-requirements-for-the-rest-api/ba-p/605609#)? knowing that in the [first link](https://docs.microsoft.com/en-us/graph/hybrid-rest-support) it says in preview!
Thanks

## Environment
Exchange On-Premises 2019 CU4
Office api 1.5"
https://api.github.com/repos/OfficeDev/office-js/issues/989,"Outlook add-in for ie browser and windows client: The ui display is strange, when block untrusted fonts in enterprise","when block untrusted fonts in enterprise like this link: https://docs.microsoft.com/en-us/windows/security/threat-protection/block-untrusted-fonts-in-enterprise

the office 365 ui display is strange, some icon missed.

![image](https://user-images.githubusercontent.com/1878089/74628595-07ba9e80-5191-11ea-8c93-353d34f53b08.png)

and we use office css class in our add-in(which is .ms-ChoiceField-input): and **Office365Icons** font is untrusted. and this make our checkbox can't display checked status. even we have installed Office365Icons.ttf
```css
.ms-ChoiceField-input[type=checkbox]:checked+.ms-ChoiceField-field:before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    font-family: Office365Icons;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    speak: none;
    content: '\e041';
    background-color: transparent;
    border-radius: 0;
    font-size: 13px;
    top: 3px;
    left: 3px
}
```
![image](https://user-images.githubusercontent.com/1878089/74629493-50735700-5193-11ea-8cd7-38f7a1644c7a.png)

even we have installed Office365Icons.ttf
![image](https://user-images.githubusercontent.com/1878089/74629572-831d4f80-5193-11ea-98e2-7960f035417c.png)


"
https://api.github.com/repos/OfficeDev/office-js/issues/987,Office.context.mailbox.displayNewMessageForm doesn't work in outlook 16.35,"Office.context.mailbox.displayNewMessageForm doesn't work in outlook 16.35

## Expected Behavior
run `Office.context.mailbox.displayNewMessageForm({htmlBody: ""Platform: Mac<br/>Outlook Version: 16.35<br/> Add-in Version: 11.2.1.9999"",subject: ""Outlook Add-in Feedback"",toRecipients: [""info@xxx.com""]})` with Office.js context should pop up a new email with the corresponding content.

## Current Behavior
this method will return undefine
<img width=""1364"" alt=""Screen Shot 2020-02-14 at 2 20 56 PM"" src=""https://user-images.githubusercontent.com/5601033/74560787-4eac5800-4f35-11ea-9fd6-f0099bef6082.png"">


## Steps to Reproduce, or Live Example
1. open outlook
2. open add-in
3. inspect element
4. run `Office.context.mailbox.displayNewMessageForm({htmlBody: ""Platform: Mac<br/>Outlook Version: 16.35<br/> Add-in Version: 11.2.1.9999"",subject: ""Outlook Add-in Feedback"",toRecipients: [""info@xxx.com""]})`

## Context
We just want to use this API to open a new email window and fill in some content automatically, so user can send us some feedback when they use our outlook add-in

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.35(20021300)
* Operating System: can be reproduced in catalina and mojave
* Browser (if using Office Online): N/A

## Useful logs
N/A
"
https://api.github.com/repos/OfficeDev/office-js/issues/981,Compatibility between Toggling 'Up/Down' arrows in Inspector View and Pinnable Taskpane,"The Outlook Addin has inconsistent behavior when it is pinned in Inspector View while the user interacts the 'up' and 'down' arrows to toggle through emails in Read Mode. Additionally, as the user toggle through emails in the Inspector View, the Explorer View also updates with the respective email. Because the addin is pinned, it also loads up in Explorer View and we observed a delay in the getItem call. 

## Expected Behavior
In the Outlook Addin, both the Inspector and Explorer views should load getItem context without error

## Current Behavior
1. In the Outlook Addin, the Explorer View often times has a delay when attempting to getItem
2. The pinned Addin in the Inspector View sometimes sometimes does not remain pinned on email toggle

## Steps to Reproduce, or Live Example
1. Open Outlook Addin and pin it to Explorer View
2. Double click on any email in the Inbox Folder to open up Inspector View
3. Observe the Addin open in the Inspector View
4. Use the 'Up/Down"" arrows to switch to another email and observe Addin behavior in both Explorer and Inspector Views.

Inspector View up/down arrows
![updownarrows](https://user-images.githubusercontent.com/14811552/74385549-a8334c00-4da8-11ea-884b-c097172a61d7.jpeg)

Failed getItem call in Explorer View
![explorerview](https://user-images.githubusercontent.com/14811552/74385557-abc6d300-4da8-11ea-8a45-aed5052bda4d.jpeg)

## Context
- Arose from a customer investigation

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook Desktop on Windows
"
https://api.github.com/repos/OfficeDev/office-js/issues/979,Unable to save draft from context of pinned taskpane after switching to a different draft,"## Expected Behavior
The Outlook.js API call to save the draft should not fail when I try to call it from a pinned compose taskpane.

## Current Behavior

If you have already pinned the compose taskpane from a previous message compose, when you click reply on a message from your inbox again, the call to `Office.context.mailbox.item.saveAsync` will yield the following error:

| Code | Name | Message|
| --- | --- | --- |
| 9021 | SaveError | Connection error occurred while trying to save the item on the server. |

If you close the pinned taskpane and open it again, the API call will succeed as expected.

## Steps to Reproduce, or Live Example

1. Ensure that you have Cached Exchange Mode enabled for your Outlook client
1. Go to your inbox
1. Click Reply on a message (inline, not pop-out)
1. Open the add-in Taskpane and pin it
1. Click Delete on this Draft to close it
1, Click reply on 
1. Attach an Edge debugger to the taskpane context
1. Directly invoke `Office.context.mailbox.item.saveAsync`
1. See the error

## Context

This affects the email send functionality of our product. We rely on `Office.context.mailbox.item.saveAsync` to yield the draft ID, which is sent to our server and later used to invoke the [`send` Graph API function](https://docs.microsoft.com/en-us/graph/api/message-send?view=graph-rest-1.0&tabs=http).

We would like our add-in's send functionality to reliably work using the pinned compose taskpane and inline reply (instead of a pop-out), as that will be one of the most widely used contexts for our email send functionality.

We would prefer not to hack around this issue ourselves if the root cause can be identified and fixed.

### Note

This is with Cached Exchange Mode enabled. We have to support this feature of the PC Desktop client as our customers depend on it.

## Your Environment

* Platform: **PC desktop**
* Host: **Outlook**
* Outlook version number: **Microsoft Outlook for Office 365 MSO (16.0.12430.20112) 32-bit**
* Operating System: **Windows 10 Home**
* Browser (if using Office Online): **N/A**

## Useful logs

Screenshot with error:

![9021_error_message](https://user-images.githubusercontent.com/692632/74288492-5e336300-4ce1-11ea-927f-a5dd395f6522.PNG)

Recording:

![2020-02-11 15 22 46](https://user-images.githubusercontent.com/692632/74288911-94251700-4ce2-11ea-8511-735cf14d7165.gif)

Manifest source URL: https://addin.grooveapp.com/manifest.xml"
https://api.github.com/repos/OfficeDev/office-js/issues/970,"Outlook for Mac, addFileAttachmentFromBase64Async, An internal error has occurred.","In an Outlook add-in for compose mode, we are using the addFileAttachmentFromBase64Async method to add attachments. In Outlook for Mac, the ""Internal Error"" occurs if attachmentName contains space characters.

## Expected Behavior
The Internal Error should not occur.

## Current Behavior
The following error occurs:
OSF.DDA.Error
name: ""Internal Error""
message: ""An internal error has occurred.""
code: undefined

## Steps to Reproduce, or Live Example
Please use the following code to reproduce the issue:
`const options2: Office.AsyncContextOptions & { isInline: boolean } = {
    isInline: false
};
Office.context.mailbox.item.addFileAttachmentFromBase64Async('MQ==', 'test 1.txt', options2, (result: Office.AsyncResult<string>) => {});`

## Context

## Your Environment
* Platform: Mac
* Host: Outlook for Mac
* Office version number: 16.33 (20011301)
* Operating System: ______
* Browser (if using Office Online): ______

"
https://api.github.com/repos/OfficeDev/office-js/issues/969,[outlook add-in]Can we get more info about recurring meeting,"<!--- Provide a general summary of the issue in the Title above -->
I consult the microsoft add-in Doc. Only get this recurring meeting info. But when I edit this event or all events in this series I can't see any different. 
As a result, A user can different what they are editing but as an add-in can't.

## Expected Behavior
I wonder is there a api for add-in to different what they are editing an event or entire series.
I see outlook have notification to let me know what I am editing so I think add-in should get these info.

## Current Behavior
call Office.context.mailbox.item.recurrence.getAsync

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: All
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2016&2019&Online
* Operating System: windows 10
* Browser (if using Office Online): chrome
"
https://api.github.com/repos/OfficeDev/office-js/issues/968,Outlook Add-in is not working on Android 9 and Android 10,"I am developing Outlook add-in using add-in command to execute a function.
The test version of the add-in will open dialog then user can choose to click OK or cancel then another dialog will appear and user can click OK to complete the action.
The add-in works well on iOS and web, but not on Android<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
I expected the add-in can work on web, iOS, Android

1. The add-in will show notification "" is working on your request""
2. The add-in then show notification ""step 1""
3. The add-in then open a dialog allow user to click button to send message back to parent and the dialog is closed
4. The notification show ""step 2""
5. The dialog will appear and allow user to click button to send message back to parent and the dialog is closed
6. Action complete
<!--- Tell us what you expected to happen -->

## Current Behavior
The add-in works very well on web and iOS. But when it comes to Android, the problem appears:

- Sometimes the add-in stops working, the only notification message appears is "" is working on your request"" and it spinning forever.
- Sometimes the add-in successfully opens the dialog but I click many times to the button on the dialog and nothing happened, no error showing up, it just stays there. Need to press X to close the dialog.
- Sometimes the add-in can stop at any step.
- Sometimes the add-in does successfully the expected steps.

<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______
https://github.com/ntranvinh/AndroidOutlookAddinSample
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Android
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: the latest version of Outlook for Android on 2020-04-02
* Operating System: Android version 9 and Android version 10
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/965,"Outlook for Mac, setSelectedDataAsync, font-size problem","In an Outlook add-in for compose mode, we are using the setSelectedDataAsync method to insert HTML text into the email body. In Outlook for Mac, the default font size is set to 11pt (please see the screenshot attached). The setSelectedDataAsync method does not allow inserting HTML text with the default font size.

## Expected Behavior
The setSelectedDataAsync method shall insert HTML text with the specified font size or the default font size (if the font-size property is not specified).

## Current Behavior
The setSelectedDataAsync method inserts HTML text with font size === 12pt. 

## Steps to Reproduce, or Live Example
Please see the test code below:
`Office.context.mailbox.item.body.setSelectedDataAsync(‘We appreciate the time you have spent on this issue’, { coercionType: Office.CoercionType.Html }, (asyncResult) => {
});`

`Office.context.mailbox.item.body.setSelectedDataAsync(‘<p>We appreciate the time you have spent on this issue</p>’, { coercionType: Office.CoercionType.Html }, (asyncResult) => {
});`

`Office.context.mailbox.item.body.setSelectedDataAsync(‘<span style=”font-size:11pt”>We appreciate the time you have spent on this issue</span>’, { coercionType: Office.CoercionType.Html }, (asyncResult) => {
});`

`Office.context.mailbox.item.body.setSelectedDataAsync(‘<p><span style=”font-size:11pt”>We appreciate the time you have spent on this issue</span></p>’, { coercionType: Office.CoercionType.Html }, (asyncResult) => {
});`


The four code samples above do the same thing, the difference is in HTML tags and styles. All the code samples insert paragraphs with font size = 12pt, please see the screenshot attached.

* Additional details:
  1. Only Outlook for Mac is affected. Everything works fine in Outlook Online and Outlook 2016 & 2019.

## Context

## Your Environment
* Platform: Mac
* Host: Outlook for Mac
* Office version number: 16.33 (20011301)

* Operating System: ______
* Browser (if using Office Online): ______

## Useful logs
- [ ] Screenshots
<img width=""586"" alt=""OutlookForMac-Settings"" src=""https://user-images.githubusercontent.com/28924916/73670014-8b688b80-46b9-11ea-8956-e2215e01239a.png"">
<img width=""469"" alt=""OutlookForMac-Inspector"" src=""https://user-images.githubusercontent.com/28924916/73670042-96bbb700-46b9-11ea-8557-91c097eaa136.png"">
"
https://api.github.com/repos/OfficeDev/office-js/issues/964,"OWA add-in error: We're sorry, we couldn't access [add-in name]. Make sure that you have a network connection. If the problem continues, please try again later","`We're sorry, we couldn't access [add-in name]. Make sure that you have a network connection. If the problem continues, please try again later`
This error message starts showing on IE11 and we couldn't reproduce it.
Then it starts showing on Chrome as well, it happened randomly, but there's a way to reproduce it in one case only:
- having onsend functionality that will trigger a dialog when the send button clicked
- add debugger in the dialog.
- trigger (press) send, that is going to show the dialog, therefore the debugger.
- leave it for more than 5min (dialog lifetime).
Now I expect the dialog to be closed automatically after ~5min, and that happened but the error message is shown as well.
But still, sometimes this error message is shown randomly once the send button clicked! it shown instead of this message: `[Add-in name] is working on your request.`
I cant troubleshoot/log or even control the add-in at that time, it happened before the add-in gets initialized, however, I can see in the Devtools in Chrome an error log (see below) from your side (I'm not using React in our add-in).

Knowing that this issue is affecting our costumers and preventing them from sending messages.
And again, the step to reproduce this issue is for one case, but costumers are getting it when they click send.

## Environment
* OS: Mac, Windows
* Browser: Chrome, IE11

## Useful logs
- Console errors:
```
react-dom.production.min.js:114 Uncaught TypeError: Cannot read property 'extension' of null
    at IFrameableDialog.tsx:43
    at index.module.js:200
    at index.module.js:178
    at an (mobx.module.js:3321)
    at e.track (mobx.module.js:3525)
    at h (index.module.js:176)
    at index.module.js:200
    at Ui (react-dom.production.min.js:148)
    at va (react-dom.production.min.js:166)
    at ma (react-dom.production.min.js:166)
```"
https://api.github.com/repos/OfficeDev/office-js/issues/953,Outlook add-in keeps cache even though last-modified header from CDN is updated,"We store our html and javascript files on CloudFront CDN. When we update our code, we see that CloudFront successfully updates the `last-modified` HTTP response header, but nevertheless, at some occasions Outlook (on all device types) will show a blank page and only clearing cache would show the updated code.

## Expected Behavior
When we update our code, Outlook will show the most recent version and not a blank page.

## Steps to Reproduce
1. Deliver your add-in's HTML+javascript code from CloudFront CDN.
1. Update your code.
1. Test that cloudfront delivers the latest code with up-to-date HTTP response headers (specifically `last-modified`). Example of headers (please excuse my replacements with `<I_hid_this>`):
```
content-length: 1771813
content-type: application/javascript
date: Tue, 28 Jan 2020 14:01:29 GMT
etag: ""34c30b36188c68a41d8e0ac4292d479d""
last-modified: Tue, 28 Jan 2020 13:55:03 GMT
server: AmazonS3
status: 200
via: 1.1 <I_hid_this>.cloudfront.net (CloudFront)
x-amz-cf-id: <I_hid_this>
x-amz-cf-pop: <I_hid_this>
x-cache: Miss from cloudfront
```
4. Launch Outlook on any device (tested on Windows, Mac, and outlook.office.com OWA) and show the add-in. *Sometimes* Outlook will not show the updated version, and instead show a blank screen!


## Context
Our add-in is updated frequently, so we need Outlook to show the most recent version. 

## Your Environment
* Platform: Tested on PC desktop Outlook, Mac Outlook, Android Outlook and Office Online Outlook
* Host: Outlook
* Office version number: latest on all platforms
* Operating System: latest on all platforms (except Android)
* Browser (if using Office Online): Chrome"
https://api.github.com/repos/OfficeDev/office-js/issues/951,"Comment of ""timeZone"" is obviously wrong","It's an obvious copy error by commenting ""timeZone"" as ""Gets the user's SMTP email address."".

In fact I'd like to know what time zone ID this property shows, Windows, Rails, or Iana. Could you please specify this as well?

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 32ddf3ef-2ff6-0046-19a4-191578b09135
* Version Independent ID: 39937c7a-37f8-32a3-6db5-bf7c6d5c0c00
* Content: [Office.UserProfile interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook/office.userprofile?view=outlook-js-preview#feedback)
* Content Source: [docs/docs-ref-autogen/outlook/outlook/office.userprofile.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook/outlook/office.userprofile.yml)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/948,Outlook: Office.context.mailbox.item.cc and Office.context.mailbox.item.to returns only 20 email addresses in OWA,"Office.context.mailbox.item.to and Office.context.mailbox.item.cc returns only 20 email addresses for each field if add-in was opened in Email with more than 20 emails in each of these fields.

## Expected Behavior
https://docs.microsoft.com/en-us/javascript/api/outlook/office.messageread?view=outlook-js-1.1#to
https://docs.microsoft.com/en-us/javascript/api/outlook/office.messageread?view=outlook-js-1.1#cc

>By default, the collection is limited to a maximum of 100 members. However, on Windows and Mac, you can get 500 members maximum.

It means  that these fields should return 100 items maximum in OWA.

## Current Behavior
If email contains more than 20 email addresses in **TO** or **CC** field then Office Javascript API methods
`Office.context.mailbox.item.to` or 
`Office.context.mailbox.item.cc` respectively returns only first 20 email addresses untill collapsed fields are expanded
![image](https://user-images.githubusercontent.com/15731794/72903544-721d2200-3d3e-11ea-90c3-ba08a7a1daa3.png)

Once I click on these down arrows the rest of addresses is loaded and after that 
`Office.context.mailbox.item.to` 
`Office.context.mailbox.item.cc` returns actual list of email addresses


## Steps to Reproduce, or Live Example
* Link to live example: https://codepen.io/sankledar/project/editor/DPmPNm 
Just replace <SERVER_NAME> in manifest and deploy solution.
* Prepare email with more than 20 email addresses in **TO** or **CC** field
* Run installed add-in in OWA in Read Form of prepared email
* Add-in will show that field with more than 20 addresses contains only 20 addresses
* Expand list of collapsed email addresses and re-run add-in
* Add-in will show actual count of email addresses (even not limited neither by 100 nor by 500 items) 

## Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Office Online
* Host : Outlook
* Office version number: 16.0.10908.10000
* Operating System: Windows 10 version 1803 (OS Build 17134.1246) (64-bit)
* Browser (if using Office Online): Google Chrome  Version 79.0.3945.117 (Official Build) (64-bit)

Also the same issue was posted on User Voice 
https://officespdev.uservoice.com/forums/224641-feature-requests-and-feedback/suggestions/37142968-fix-issue-in-the-new-outlook-that-limits-the-dis
"
https://api.github.com/repos/OfficeDev/office-js/issues/943,Outlook: OnSend add-in is not sending appointments on first attempt,"OnSend Add In for Meetings/Appointments doesnt send in the first call

## Expected Behavior
When I click send on my OnSend Add-In popup , the appointment needs to be sent. 

## Current Behavior
But I'm having to trigger the addin twice and it creates 2 events in my calendar, 
First event is just saved while second event is actually send.


## Steps to Reproduce, or Live Example
Attached the video replication for example

![Capture](https://user-images.githubusercontent.com/5896139/72810332-5b65c500-3c83-11ea-8d8b-725a6e764f47.JPG)

having set the event.completed to true is not sending the invite.

* Platform [PC desktop, Mac, iOS, Office Online]: OWA 
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Browser (if using Office Online): Chrome


[Calendar - Krishna, Sourabh - Outlook - Google Chrome 2020-01-21 19-06-01.zip](https://github.com/OfficeDev/office-js/files/4091322/Calendar.-.Krishna.Sourabh.-.Outlook.-.Google.Chrome.2020-01-21.19-06-01.zip)
"
https://api.github.com/repos/OfficeDev/office-js/issues/942,"[Outlook add-in] After update windows , dev tool not work any more, any recommend?","<!--- Provide a general summary of the issue in the Title above -->
After update windows to 1903 , dev tool(IEChooser) can't debug outlook client add-in any more.
Can microsoft recommend a debug tool?

## Expected Behavior
<!--- Tell us what you expected to happen -->
Have a tool can debug add-in in Outlook Client windows.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ______
* Operating System: windows 10 1903
* Browser (if using Office Online): ______

I know this problem is because browser core changed to chromium. But for most user (include me) they don't want to install visual studio 2015+, just for add-in debug. 
Any recommend dev tool ?Or any setting that we can use IEChooser.
"
https://api.github.com/repos/OfficeDev/office-js/issues/928,Previously Working AddIn Is Not Starting Up.,"We have developed an addin which had been working really well with your standalone outlook clients. It is a script based taskpane-type addin. Recently,  some of our end users have started experiencing problems during the loading of the addin. I cannot reproduce the same issue on my machine (Windows 10 B1909 and  Office MSO 16.0.12325.20280). I was thinking that this was an issue related to Outlook-moving-to-EDGE-dropping-IE. (https://docs.microsoft.com/en-au/office/dev/add-ins/concepts/browsers-used-by-office-web-add-ins)

Note also that our addin is still working fine with the browsers (OWA). The issue we are having is right now with standalone clients.

Do you have anything in your documentation or knowledge-base that can potentially cause the following? 

![image-edited](https://user-images.githubusercontent.com/3444844/72140894-abfc3900-33cc-11ea-830c-f32da191ca85.png)

Thanks.

"
https://api.github.com/repos/OfficeDev/office-js/issues/926,Office.context.mailbox.item.body.getAsync returns error 9020 An internal error has occured,"<!--- Provide a general summary of the issue in the Title above -->
Since a few days we get an error response 9020 on the call Office.context.mailbox.item.body.getAsync. This code used to work flawless. Is there a Microsoft problem?

## Current Behavior
value: null
status: failed
error: OSF.DDA.Error
  name: GenericResponseError
  message: An internal error has occurred.
  code: 9020

## Steps to Reproduce, or Live Example
function getEmailBody() {
  Office.context.mailbox.item.body.getAsync(Office.CoercionType.Text, function callback(asyncResult) {
       return asyncResult.value;
});

We have launched addin using OWA chrome browser.
"
https://api.github.com/repos/OfficeDev/office-js/issues/933,[outlook]: How can I access to microphone in office add-in ?,"There is a pop-up to ask for microphone permission on web, but Nothing happened on desktop app , so I can't access to microphone on desktop. It seems that there isn't any useful informations on docs.  how can I access to microphone on desktop ? 
Platform: MacOS 
Thanks
"
https://api.github.com/repos/OfficeDev/office-js/issues/921,Outlook online: Add-in problems when using new api getSharedPropertiesAsync.,"<!--- Provide a general summary of the issue in the Title above -->
Problems when using new api getSharedPropertiesAsync. Console report getSharedPropertiesAsync not a function in Office.context.mailbox.item. And I tried this on a shared calendar.
## Expected Behavior
<!--- Tell us what you expected to happen -->
I can use this api and get callback result.
By the way, is there any possible I can use any api to get email from shared calendar on add-in ?

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
When I use 'Office.context.mailbox.item.getSharedPropertiesAsync' on my add-in , it report error on console about 'getSharedPropertiesAsync' is not a function in 'Office.context.mailbox.item'. 
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
I want to know when should I call this function and is there any api can let me get events/email on other's shared calendar ?

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______
Just call 'Office.context.mailbox.item.getSharedPropertiesAsync' on add-in, it will report 'error' even on a shared calendar.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

Microsoft let us have ability to operate events on other's calendar. So we actually hope add-in api can get the same ability so that we don't need take time to do the cumbersome operations again and again.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online(I guess Outlook Client might get the same problem)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Online
* Operating System: windows 10
* Browser (if using Office Online): Chrome  79.0.3945.88 64bit

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [x] Screenshots
- [x] Test file (if only happens on a particular file)

blew is my code for debug this api:
testGetSharedProperties(){
            if( 'getSharedPropertiesAsync' in Office.context.mailbox.item){
                console.log(""getSharedPropertiesAsync in Office.context.mailbox.item"");
                Office.context.mailbox.item.getSharedPropertiesAsync(function(asyncResult){
                    console.log(""-----current asyncResult: ""+JSON.stringify(asyncResult));
                });
            } else {
                console.log(""getSharedPropertiesAsync not in Office.context.mailbox.item"");
            }
            
        }
"
https://api.github.com/repos/OfficeDev/office-js/issues/918,[Outlook add-in] Outlook 2013 cannot run any add-in app error: outlook.15.01.js access denied,"Outlook 2013 cannot run any add-in app. All ad-in was show in error: outlook.15.01.js access denied.
We have tried many add-ins include 'My-template' . All add-in show in 'Office applications' and if I try to start any add-in will show error. I open the developer tool can see error:  ""outlook.15.01.js access denied""
PS: This probelm happened on Outlook 2013 onpremise environment.
## Expected Behavior
<!--- Tell us what you expected to happen -->
add-in load normal.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
Install add-in from application store. Then try to start this add-in.
And I have tried some way to resolve this problem:
1. Check manifest to delete unsupported tag on Outlook 2013.
2. we can access microsoft site.
3. reset IE 'Security' configuration to default
And I will try command:""icacls %userprofile%\Appdata\LocalLow /t /setintegritylevel (OI)(CI)L"" ,But I don't think this will solve this problem. 

## Steps to Reproduce, or Live Example
Just load add-in on Outlook 2013 Windows 10(CitriX)

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
As a result , we can't use add-in on Outlook 2013

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Outlook 2013
* Operating System: Windows 10 (On CitriX)
* Browser (if using Office Online): NA

## Useful logs
![image](https://user-images.githubusercontent.com/15980696/71553582-fdabd780-2a4c-11ea-9b94-394f07e8d42d.png)

By the way, I always meet this kind of issue about add-in can't load. Do microsoft have any wiki about how to check this kind of issues?
"
https://api.github.com/repos/OfficeDev/office-js/issues/913,Outlook on the web: Accessibility: VoiceOver/NVDA cannot use keyboard input (tab) to enter the add-in," accessibility software(VoiceOver and nvda) can't press ""tab"" and enter into the add-on right side panel.
And you can try to remove the **tabindex=""0""** which is on the top of the add-on iframe panel div.
like below:
![image](https://user-images.githubusercontent.com/1878089/71237629-04479a00-233d-11ea-969b-74b0d5b6358a.png)

remove this one, and both VoiceOver and nvda can be worked.
like below:
![image](https://user-images.githubusercontent.com/1878089/71238052-183fcb80-233e-11ea-95b4-99dc427985c9.png)

But, this is office365 code, not my. So i can't do anything to fix that.
So, please check this one."
https://api.github.com/repos/OfficeDev/office-js/issues/944,The addin is not working when it is built to production mode. (developed using angular),"I have created a addin for outlook using angular. When I publish the project. The addin is not working.
Is there any problem with build process?"
https://api.github.com/repos/OfficeDev/office-js/issues/914,Issue with CustomeProperties get() ,"I am using code based on this page:
 
function customPropsCallback(asyncResult) {
    var customProps = asyncResult.value;
    console.log(customProps);
    var myProp = customProps.get(""myProp"");
    console.log(myProp);
    customProps.set(""otherProp"", ""value"");
    customProps.saveAsync(saveCallback);
}

myProp is always coming as undefined. But customProps has the value previously stored in myProp.



---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 5bae5b9e-dce2-82ce-2693-d61952ea0127
* Version Independent ID: 7f2296ec-40a4-7a0e-831c-e8343b438ddb
* Content: [Office.Item interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook/office.item?view=outlook-js-preview#feedback)
* Content Source: [docs/docs-ref-autogen/outlook/outlook/office.item.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook/outlook/office.item.yml)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/890,[Outlook add-in]add-in not work on outlook 2013 when manifest.xml write VersionOverridesV1_1,"<!--- Provide a general summary of the issue in the Title above -->
add-in not work on outlook 2013 when manifest.xml write VersionOverridesV1_1.
show：""can't start this program,cause not set program name: XXX""

## Expected Behavior
add-in work normal.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
When we add VersionOverridesV1_1 to our manifest, then outlook 2013 can not run this add-in.
So I wonder is there a way to let it works on outlook 2013 with VersionOverridesV1_1. Or we can find a way to distinguish Outlook 2013 and Outlook 2016 in manifest so that I can use VersionOverridesV1_1 on Outlook 2016 and use VersionOverridesV1_0 on Outlook 2013.

## Steps to Reproduce, or Live Example
add tag like :
""\<VersionOverrides xmlns=\""http://schemas.microsoft.com/office/mailappversionoverrides\"" xsi:type=\""VersionOverridesV1_0\""\>
    \<VersionOverrides xmlns=\""http://schemas.microsoft.com/office/mailappversionoverrides/1.1\"" xsi:type=\""VersionOverridesV1_1\""\>""
to manifest. then add/deploy this manifest to outlook 2013 user.


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
We have some user use Outlook 2013 client and it's hard for them to upgrade to Outlook 2016 cause company policy.  So I think if microsoft add ins didn't say we don't support outlook 2013 about add ins then we need to support Outlook 2013 issues.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2013 (15.0.5172.1000) MSO 64bit
* Operating System: windows 10 1809 17763.864 64bit 
* Browser (if using Office Online): N/A

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
![image](https://user-images.githubusercontent.com/15980696/70023000-10a7c500-15d1-11ea-9923-36ee40fc8590.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/889,addHandlerAsync doesn't work with AttachmentsChanged and RecipientsChanged,"## Current Behaviour
The 1.8 features don't work in any client - Win/Mac/OWA.
Executing `Office.context.requirements.isSetSupported('MailBox', '1.8')` returns true.

This event works OK:
`Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged,...)`

These events don't work:
`Office.context.mailbox.addHandlerAsync(Office.EventType.AttachmentsChanged,...)
Office.context.mailbox.addHandlerAsync(Office.EventType.RecipientsChanged,...)`

I receive a javascript error:
`Function addHandlerAsync has invalid parameters.`

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC, Mac, Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 365 subscription (Outlook Mac 16.31, Outlook Win 16.0.12130.202 32bit)
* Operating System: Win 10.0.18362, Mac 10.14.6
* Browser (if using Office Online): Chrome 78.0.3904.108
"
https://api.github.com/repos/OfficeDev/office-js/issues/888,"Dark mode is not support the add-ons, on Outlook 365 Browser","right display ui in light mode:
![image](https://user-images.githubusercontent.com/1878089/69937665-50f63d00-1516-11ea-820f-9fc884b82558.png)
wrong display ui in dark mode:
![image](https://user-images.githubusercontent.com/1878089/69937757-8c910700-1516-11ea-8774-136f5b951b54.png)

**prefect solution:**
provide the Office.context.officeTheme api on the browser(it only provide for windows client right now).Let the developer auto change the add-on theme."
https://api.github.com/repos/OfficeDev/office-js/issues/880,displayDialogAsync problem on 16.0.12130.20390,"<!--- Provide a general summary of the issue in the Title above -->
I developed an Outlook addin to integrate some reservation functionalities from our system (access control). The addin work as expected with Office version 16.0.11328.20468.
## Expected Behavior
<!--- Tell us what you expected to happen -->
CallingdisplayDialogAsync with a valid url, the addin execute the navigation
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
Calling displayDialogAsync with a valid url, the addin do not execute the navigation so the content is never loaded and the dialog is never displayed.
No error is catched; no callback is fired;

<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
This is the precise line of code that suffer the problem

Office.context.ui.displayDialogAsync('valid_url',
                        function (asyncResult) {
                            dialog = asyncResult.value;
                            dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);
                            dialog.addEventHandler(Office.EventType.DialogEventReceived, processEvent);
                        }
                    );
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
We provide an extension of informations while the customere arrange a metting letting him chose a meeting room whit given characteristics. The addin show a view of custom data provided by the access control system.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop / Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.12130.20390
* Operating System: Windows 10 Pro
* Browser (if using Office Online): Edge

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/878,Office.context.mailbox.item.enhancedLocation.addAsync not working OWA - Exchange 2019,"When calling the Office.context.mailbox.item.enhancedLocation.addAsync from a add-in inside the web outlook connected to a Exchange 2019 on-premise, it returns an error: 

```
OSF.DDA.Error {name: ""Host Error"", message: ""The operation is not supported."", code: 5000}
code: 5000
message: ""The operation is not supported.""
name: ""Host Error""
```
The test team claims that this was working before.

## Expected Behavior
It should add the location to the meeting

## Current Behavior
An error is being thrown.

## Steps to Reproduce, or Live Example
Call the Office.context.mailbox.item.enhancedLocation.addAsync  from a add-in inside the web outlook connected to a Exchange 2019 on-premise.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
* Platform: OWA
* Host: OWA Web Outlook
* Office version number: Exchange 2019 - 15.2.464.5
* Operating System: Windows
* Browser (if using Office Online): Chrome"
https://api.github.com/repos/OfficeDev/office-js/issues/872,[Outlook] Office.UserProfile.displayName returns e-mail address instead of display name,"When the display name in Outlook is requested from the user profile by calling `Office.context.mailbox.userProfile.displayName`, their e-mail address is returned instead. Similarly, the `emailAddress` and `timeZone` properties appear to represent the wrong properties in [the documentation](https://docs.microsoft.com/en-us/javascript/api/outlook/office.userprofile?view=outlook-js-1.8).

## Expected Behavior
When `Office.context.mailbox.userProfile.displayName` is called, the display name of the user is returned, which should be equal to the name that is shown as sender in e-mails.

## Current Behavior
When `Office.context.mailbox.userProfile.displayName` is called, the e-mail address of the user is returned.

## Steps to Reproduce, or Live Example
Run the following code in a side-loaded plugin in Outlook and verify that the not the display name, but e-mail address is printed to the console. 
```JavaScript
console.log(Office.context.mailbox.userProfile.displayName);
```

## Context
I'm trying to compose a new e-mail message with `Office.context.mailbox.displayNewMessageForm` that includes a signature with the user's display name.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Version 1911 Build 12228.2250
* Operating System: Windows 10
* Browser (if using Office Online): -
"
https://api.github.com/repos/OfficeDev/office-js/issues/868,dynamic resize displaydialogAsync based on the container input,"Is it possible to have a dynamic height and width for the displaydialogAsync ? If so , how ?
I would need to edit the Dialog header to a custom html for an Outlook Add in - OnSend

My OnSend Add-in opens a dialog and I want to have custom CSS applied to the dialog style parameters.
"
https://api.github.com/repos/OfficeDev/office-js/issues/865,Office.context.mailbox.item.addHandlerAsync api  not work after the iframe redirect or reload on MacOS chrome browser Office365 Outlook,"For example:
Open ""My Templates"" add-on which every office365 outlook have this add-on. And open the developer tools in chrome. then select the ""My templates"" execute context. like the screen shot.
![image](https://user-images.githubusercontent.com/1878089/69331027-06133480-0c8f-11ea-9a04-41479015a114.png)
![image](https://user-images.githubusercontent.com/1878089/69331050-12978d00-0c8f-11ea-909c-ef7c74c26f39.png)
For the first time, when i execute Office.context.mailbox.item.addHandlerAsync, it  works when i change the meeting time in the appointment:
```
function handleAppointmentTimeChange() {
    console.log('111');
}

Office.context.mailbox.item.addHandlerAsync(Office.EventType.AppointmentTimeChanged, 
handleAppointmentTimeChange);
```

But when i redirect the page like execute the below code:
```
location.href = location.href
```

then re-execute the addHandlerAsync code like:
```
function handleAppointmentTimeChange() {
    console.log('111');
}

Office.context.mailbox.item.addHandlerAsync(Office.EventType.AppointmentTimeChanged, 
handleAppointmentTimeChange);
```
it doesn't work when i change the meeting time in the appointment.
This api works well on the outlook mac client.

Please track the issue, thanks~"
https://api.github.com/repos/OfficeDev/office-js/issues/861,How to insert custom HTML form into Message's Body in Outlook App in windows using Office-js,"Hi geeks
I have developing an Outlook add-in using office-js API.
My task is to insert custom HTML form into Message's body of composing mail.

It is working fine with OWA, custom HTML form renders as HTML .But with, Windows Outlook App, it renders as Text.

Can it is possible to insert HTML form into message's body as HTML, not as Text.
Thanks!!
Looking for response."
https://api.github.com/repos/OfficeDev/office-js/issues/859,isSetSupported method for 1.8 returns false for exchange online,"i am trying to use isSetSupported method to check if it supports latest api or not (1.8 in this case) on different versions of outlook. it gives correct result when used with in outlook client, but when using outllok on web it returns false result even my subscription is office 365

## Expected Behavior

when i am running addin on outlook on web with office 365 subscription Office.context.requirements.isSetSupported(""Mailbox"", ""1.8"") should return true

## Current Behavior
the result it returns as false which does not make nay sense

## Steps to Reproduce, or Live Example
just use above specified method



## Context
we need to use enhanced loaction method conditionally on the basis if particular environment support 1.8 api or not. if it does not then disable some features. outlook client seems ok, but outlook on web not. however if you use enhanced location method it works fine on outlook on web , 
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform Office Online: ______
* Host outlook______
* Office version number: ______
* Operating System: windows 10
* Browser (if using Office Online): chrome/ie


"
https://api.github.com/repos/OfficeDev/office-js/issues/858,[Outlook add-in]notificationMessages didn's disapear after this.close() (Only happened on Mac),"On Mac Outlook 2016(16.32 19111100 ps: lower version might get the same problem too), after 'ExecuteFunction' Notification(xxx is working on your xxx) might not disappear. 

## Expected Behavior
After 'ExecuteFunction' Notification(xxx is working on your xxx) disappeared. Or can be removed.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
We develop an add-in app. And use some asynchronous function inside it. At last I use event.complete(true) to close it. But we met some problem sometimes on mac Notification(xxx is working on your xxx) might not disappear until timeout. 
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
I see office.js provide getAllAsync and removeAsync to remove notification. But when I try to get notification ID by getAllAsync I only get {68ACED7-AFB6-4F87-.....}[<0X>]. And this can not use as a ID for removeAsync.

So is this a bug?  Or microsoft already fix it by another api? 


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook 2016
* Office version number: 16.32 19111100
* Operating System: Mac

"
https://api.github.com/repos/OfficeDev/office-js/issues/857,Missing callback for addFileAttachmentFromBase64Async,"When calling `Office.context.mailbox.item.addFileAttachmentFromBase64Async` two or more times successively, the callback isn't consistently triggered for all function calls in Outlook Online.

## Expected Behavior
The provided callback should be triggered once for each call to `addFileAttachmentFromBase64Async`

## Current Behavior
The provided callbacks are sometimes triggered, but sometimes some of the callbacks aren't triggered.

## Steps to Reproduce, or Live Example
- Open Outlook Online
- Start composing an email.
- Open an add-in.
- Call the following code (using [image1.txt](https://github.com/OfficeDev/office-js/files/3857324/image1.txt) and [image2.txt](https://github.com/OfficeDev/office-js/files/3857326/image2.txt)):
```
Office.context.mailbox.item.addFileAttachmentFromBase64Async(<contents of image1.txt>, 'image1.jpeg', callback);
Office.context.mailbox.item.addFileAttachmentFromBase64Async(<contents of image2.txt>, 'image2.jpeg', callback);
```

## Context
The inconsistent triggering of the callbacks makes it impossible for us to provide proper user feedback, when users try attaching images to their emails.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: N/A
* Operating System: Windows 10 Pro.
* Browser (if using Office Online): Chrome.
"
https://api.github.com/repos/OfficeDev/office-js/issues/853,Addin with version 1.8 did not uploaded,"I'm developing OWA add-in, as the [version 1.8](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/outlook-requirement-set-1.8) released I have change the manifest in:
```
  <Requirements>
    <Sets>
      <Set Name=""Mailbox"" MinVersion=""1.8"" />
    </Sets>
  </Requirements>
```
and in:
```
      <Requirements>
        <bt:Sets DefaultMinVersion=""1.8"">
          <bt:Set Name=""Mailbox"" />
        </bt:Sets>
      </Requirements>
```
when I upload the new manifest from `Get Addins -> my add-ins -> upload new addin`, it did not show any error message, but when I close that dialog I dont see the add-in at all, going back to `Get Add-ins` and I dont see the addin anymore!

Knowing that it work fine when I change the version to `1.7`



## Environment
* Platform: Office Online
* Host: OWA
* Office version number: 
* Operating System: mac
* Browser (if using Office Online): Chrome"
https://api.github.com/repos/OfficeDev/office-js/issues/849,Getting error when add in launched on windows desktop outlook client,"<!--- Provide a general summary of the issue in the Title above -->
When add in is launched on windows 10  - outlook client, we get below error message in side pane.
""Sorry, we couldn't load the app because your browser version is not supported. Click here for a list of supported browser versions"". 

This is documented in below office addin documentation.
https://docs.microsoft.com/en-us/office/dev/add-ins/testing/testing-and-troubleshooting#common-errors-and-troubleshooting-steps

We followed those steps, still issue occurs.
 
What can be the reason for this?

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook Client
* Office version number: Office 365 subscription
* Operating System: Windows
* IE11 is installed on PC


## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
![f01a9f2c-75db-416a-b0f0-6b86302b3142](https://user-images.githubusercontent.com/25030206/68932187-11aabb00-07b8-11ea-8621-8197f3e4b917.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/833,Office.context.mailbox.item.attachments objects have no id field in Outlook Desktop,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
Office.context.mailbox.item.attachments[x].id should exist.

## Current Behavior
Calling api on one mail that is signed returns attachment objects, but without id field, while acting like it should on OWA.

## Steps to Reproduce, or Live Example
console.log(Office.context.mailbox.item.attachments)

## Context
Developing a plugin for transffering mail content into ticket system.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 1910
* Operating System: Windows
"
https://api.github.com/repos/OfficeDev/office-js/issues/832,Inconsistent result status for setSelectedDataAsync in Outlook Online,"We are developing an add-in for both Outlook, PowerPoint, Excel, and Word. Currently, we are looking at inserting images in Outlook. 
For this purpose we call `Office.context.mailbox.item.body.setSelectedDataAsync()`. In the desktop version of Outlook, we either get a successful response, and the image is inserted in the body, or we get a response indicating an unsuccessful insertion.
In Outlook Online, however, we sometimes get a successful response even though the image isn't actually inserted in the body.

## Expected Behavior
The response should only indicate success if the image is actually inserted.

## Current Behavior
The response sometimes indicates success even though the image isn't inserted.

## Steps to Reproduce
1. Open Outlook Online
2. Compose a message.
3. Try inserting an image with: `Office.context.mailbox.item.body.setSelectedDataAsync(imageHtml, { coercionType: Office.CoercionType.Html, callback}`. Replace `imageHtml` with the contents of: [imageHtml.txt](https://github.com/OfficeDev/office-js/files/3823976/imageHtml.txt). Note that the file contains less than 1,000,000 characters.
4. A successful insertion is indicated in the callback, but the image isn't inserted.

## Context
If users try inserting images where the resulting imageHtml contains more than 1,000,000 characters, we provide them with an appropriate error message. However, we can't provide appropriate user feedback, when the callback indicates that the image is inserted successfully, even though it isn't actually inserted.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: N/A
* Operating System: Windows 10 Pro
* Browser (if using Office Online): Chrome.

"
https://api.github.com/repos/OfficeDev/office-js/issues/835,getEntitiesByType function is undefined,"when i use the example:
`
var item = Office.context.mailbox.item;
var urls = item.getEntitiesByType(Office.MailboxEnums.EntityType.Url);
`
i found that: the getEntitiesByType function is undefined

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: f8297edd-d7f5-e490-fec8-b7f478eab4d5
* Version Independent ID: b828821a-2bc7-9da4-ab3e-769f2e033bf3
* Content: [Office.Entities interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook/office.entities?view=outlook-js-preview)
* Content Source: [docs/docs-ref-autogen/outlook/outlook/office.entities.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook/outlook/office.entities.yml)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/828,body.getAsync returns original HTML body not updated body,"The addin is running in the context of an existing event.  The event was created then I updated the body, closed the event and then re-opened and re-launched the add-in.

Code:
```
      var itm = Office.context.mailbox.item;
      itm.body.getAsync(Office.CoercionType.Html, (asyncResult : Office.AsyncResult<string>) => {
        if (asyncResult.status === Office.AsyncResultStatus.Failed) {
          this.setState({ isError : true, errorMessage : asyncResult.error.message})
        } else {
          console.log(asyncResult.value);
          debugger;
```
Console output:
```
<div>
<div><span><br>

<br>

<div id=""x_RSPrivateData"">
<hr>
[RS:-1999823968]<br>

<a href=""http://localhost/ResourceScheduler/SchedDtl.asp?ID=-1999823968"" title=""Afficher les détails de la réservation"">Voir la réservation en Resource Scheduler</a></div>
</span></div>
</div>
```

What OWA shows on the screen:
![image](https://user-images.githubusercontent.com/28546239/68335041-c1da3e80-00a9-11ea-8c91-4910fd875a18.png)

What the Graph API returns:
```
            ""bodyPreview"": ""Additional text @tim here\r\n\r\n________________________________\r\n[RS:-1999997498]\r\nVoir la réservation en Resource Scheduler"",
            ""body"": {
                ""contentType"": ""html"",
                ""content"": ""<html>\r\n<head>\r\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=utf-8\"">\r\n<meta content=\""text/html; charset=iso-8859-1\"">\r\n</head>\r\n<body>\r\n<div></div>\r\n<div>Additional <b>text @tim</b> here</div>\r\n<span><br>\r\n<div id=\""x_RSPrivateData\"">\r\n<hr>\r\n[RS:-1999997498]<br>\r\n<a target=\""_blank\"" title=\""Afficher les détails de la réservation\"" href=\""http://localhost/ResourceScheduler/SchedDtl.asp?ID=-1999823968\"">Voir la réservation en Resource Scheduler</a></div>\r\n</span>\r\n</body>\r\n</html>\r\n""
            },
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/826,"code: 5001, message: ""An internal error has occurred."", name: ""Internal Error""","## Expected Behavior
The following methods should work without the ""Internal Error"" error:

Office.context.mailbox.item.body.getTypeAsync
Office.context.mailbox.item.getSelectedDataAsync
Office.context.mailbox.item.setSelectedDataAsync
Office.context.mailbox.item.subject.getAsync
Office.context.mailbox.item.subject.setAsync
Office.context.mailbox.item.to.getAsync
Office.context.mailbox.item.to.setAsync
Office.context.mailbox.item.cc.getAsync
Office.context.mailbox.item.cc.setAsync
Office.context.mailbox.item.bcc.getAsync
Office.context.mailbox.item.bcc.setAsync
Office.context.mailbox.item.addFileAttachmentAsync

## Current Behavior
Error:
{ code: 5001, message: ""An internal error has occurred."", name: ""Internal Error"" }

## Steps to Reproduce, or Live Example
1. Windows 10 (1903)
2. Outlook 365 desktop (Version 1910)
3. Add-in for compose mode
4. Create 2 or more new emails and save them to Drafts.
5. Go to Drafts, select an email that you created, start the add-in and **pin** it.
6. Test any of the above methods, they work so far.
7. Select the other email in Drafts.
8. Test any of the above methods, they all **fail** now.

## Context

## Your Environment
* Platform: PC desktop
* Host: Outlook desktop (Version 1910)
* Office version number: 16.0.12130.20232 32bit
* Operating System: Windows 10 (1903)
* Browser: ______

## Useful logs
"
https://api.github.com/repos/OfficeDev/office-js/issues/823,"""code"":""Request_ResourceNotFound"",""message"":""Resource {guid} does not exist or one of its queried reference-property objects are not present.""","<!---
Thank you for helping us to improve the Microsoft Graph documentation.

So that we can better assist you, please note the following:
- If you have a question, need help, or are experiencing an issue with your code, we encourage you to post your question or issue on **Stack Overflow**. Tag your question with [microsoftgraph](https://stackoverflow.com/questions/tagged/microsoftgraph) or [Office 365](https://stackoverflow.com/questions/tagged/microsoftgraph).
- If you have a feature suggestion, please post your idea on our [**User Voice**](https://officespdev.uservoice.com/) page, and vote for your suggestions there.
- If you have an issue with the documentation, please provide the information here, or feel free to submit a pull request with your suggested changes. We will review your contributions and update our documentation accordingly.
-->

Issue: I am trying to **connect with graph API** from my **outlook add-in**. I am getting the access token.

 ![token](https://user-images.githubusercontent.com/14230498/67379416-823e2d80-f5a6-11e9-8d5d-b1e20bfe2fe6.png)
I have given my consent to use the graph API. But I am getting the below error: 
![graph-error](https://user-images.githubusercontent.com/14230498/67379360-69357c80-f5a6-11e9-9e27-0c05ba5069d5.png)
```
code: ""Request_ResourceNotFound""
innerError:
date: ""2019-10-23T09:28:27""
request-id: ""5f20c0fe-279c-4c59-bdd2-1ea5a9613d81""
__proto__: Object
message: ""Resource '8c14a998-3c8d-4c52-ad09-c9032671ea31' does not exist or one of its queried reference-property objects are not present.""
__proto__: Object
```
Below is my code snippet: 

![code snippet](https://user-images.githubusercontent.com/14230498/67379363-69357c80-f5a6-11e9-81eb-68b252e90f9c.png)
It is a simple and straightforward code. i am not sure, what is the issue. 

Please help me If I have missed any. "
https://api.github.com/repos/OfficeDev/office-js/issues/822,"isSetSupported('Mailbox', '1.8') returns false in add-in running in OWA with Office365","In a [supported environment listed here](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets). Office.context.requirements.isSetSupported('Mailbox', '1.8') is returning false in OWA (Chrome) with Office365. When can we expect isSetSupported to return true for v1.8?

## Expected Behavior
Expect isSetSupported('Mailbox', '1.8') to return true for supported environments.

## Current Behavior
isSetSupported('Mailbox', '1.8') returns false in OWA with Office365.

## Steps to Reproduce, or Live Example
executed Office.context.requirements.isSetSupported('Mailbox', '1.8')

## Context
I'm trying to determine if Office.context.mailbox.item.getAttachmentContentAsync() is supported on the client/server configuration running the add-in. Should we be checking the Exchange server version + client build version against known functioning permutations or will Office.context.requirements.isSetSupported('Mailbox', '1.8') encapsulate these checks for us?

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office.context.diagnostics.version=16.0.10908.10000
Office.context.mailbox.diagnostics.hostVersion=2019102702.12
* Operating System: Mac
* Browser (if using Office Online): Chrome

## Useful logs
Office.context.requirements.isSetSupported('Mailbox', '1.8') returns true as expected in Outlook for Mac with Office365.

- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/818,Add-In doesn't reload when I click on download images on Outlook for Mac,"<!--- Provide a general summary of the issue in the Title above -->
When i open an email in Outlook for Mac the Add-In loads up fine. The entity gets highlighted. But when I click on download images to download the images in the email content, the whole content refreshes and the Add-In doesn't load up this time. I have to select some other mail and then come back to it again for the entity to get highlighted. This is happening on Outlook for Mac only. Works fine on windows clients.
## Expected Behavior
<!--- Tell us what you expected to happen -->
When I click to download the images, the email content refreshes and the Add-In should get triggered, just like it does when I came back to the mail after selecting some other mail.
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
The Add-In entity doesn't get highlighted when I download the content images.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The Add-In entity should get highlighted again when I download the content images, just like it does when I open the mail the Add-In entity is highlighted.
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. See the video [here](https://www.screencast.com/t/8KINsbrgXjRm) to get a better idea of the issue 
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office 2019
* Operating System: Mac
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/817,class stripped from <div /> when doing a setAsync,"If doing a setAsync with HTML, the ""class"" attribute of any &lt;div /&gt; seems to be stripped when the body is viewed on the saved event.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 0498adf2-3f86-3520-82c2-df88e6ea4b95
* Version Independent ID: 347c34b6-0586-9ce5-2c84-ae010c27b276
* Content: [Office.Body interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook/office.body?view=outlook-js-preview)
* Content Source: [docs/docs-ref-autogen/outlook/outlook/office.body.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook/outlook/office.body.yml)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/812,Outlook add in doesn't work on edge and firefox (node js - yeoman generator),"Hi
I am doing an outlook add-in with the yeoman generator, when I use it on chrome or IE the add-in works
![image](https://user-images.githubusercontent.com/51403191/67846207-b52d7780-faf8-11e9-8bff-42e459ad364d.png)

but when I use it on edge or firefox doesn't work.
first, the icon doesn't appear, this is what shows
![image](https://user-images.githubusercontent.com/51403191/67846389-12292d80-faf9-11e9-87a9-978aa115ac7f.png)

when I press in the icon to open the task pane, it never loads.

![image](https://user-images.githubusercontent.com/51403191/67846617-6c29f300-faf9-11e9-9731-24671a599853.png)

this was on firefox, on edge I get the same thing but in the end, show me this: 
![image](https://user-images.githubusercontent.com/51403191/67851833-2bcf7280-fb03-11e9-98d3-dd95857f1867.png)



Best regards
"
https://api.github.com/repos/OfficeDev/office-js/issues/810,Outlook web add-in disappeared from Admin deployment list,"@exextoc <!--- Provide a general summary of the issue in the Title above -->
At beginning of Oct,22 my Add-in disappeared from Admin deployment list. Then when I re-add, I got an error stating ""This add-in has previously been uploaded. Please edit the existing add-in.(23f8b179-25cc-4236-b9f2-07e23bbdaf58)"". I know that it means the add-in has been deployed. But I cannot find it in new Admin center deploy list and Exchange admin-> Organizer -> Add-ins list. Any suggestion for this issue? Many customers report this issue at beginning of last week.

## Expected Behavior
The add-in show in admin deploy list. And can be remove, add again.

## Current Behavior
I cannot find it in new Admin center deploy list and Exchange admin-> Organizer -> Add-ins list. But when I add the add-in again, it failed and got the error ""This add-in has previously been uploaded. Please edit the existing add-in.(23f8b179-25cc-4236-b9f2-07e23bbdaf58)"".

## Steps to Reproduce, or Live Example

"
https://api.github.com/repos/OfficeDev/office-js/issues/802,Log files for OnSend events are lost,"If an addin logs an error message to the console during an OnSend event, then there is no way to retrieve these logs from Outlook desktop

## Expected Behavior
The log messages for OnSend events running on Outlook desktop should be somehow retrievable, so that issues can be debugged.

## Current Behavior
The console logs are lost when the OnSend event completes, since the instance of the add-in is killed.

## Steps to Reproduce, or Live Example
1. Write an addin that uses `console.log` as part of it's OnSend event handler.
2. Send an email from Outlook Desktop with this addin enabled
3. You will have no way of retrieving those log messages.

## Context
We have an addin that asynchronously sends some information to our server on email send (with the user's consent). We have an intermittent issue where the information fails to transmit. We cannot get the helpful information in the log files, because our users have no way of accessing them.

## Your Environment
Outlook Desktop, monthly update channel.
"
https://api.github.com/repos/OfficeDev/office-js/issues/799,Addin itemsend event in manifest block the send operation,"
## Expected Behavior
When i register ItemSend event in manifest, Whilst sending a meeting invite to someone a corresponding handler should execute.

## Current Behavior
When i register ItemSend event in manifest , Whilst sending a meeting invite to someone addin blocks whose send operation and registered function does not even execute. seems like its trying to find handler but could not find . see screen shot
![issue](https://user-images.githubusercontent.com/55550147/67281564-9fe89580-f4c7-11e9-853c-2df2e54e281d.png)

AS you can see its saying "" Mss Js cloud test is working on your request"" , i found this message never goes away and send operation get blocked

## Steps to Reproduce, or Live Example
Make sure you register item send event first in manifest file

1. Open outlook appointment
2. Activate addin(Make sure you ad the function you resister for item send)
3. Go to appointment and add an invitee
4. keep the addin open and hit send button

Error : register function does not execute and addin does not send any invite.
## Context
I am trying test preview set for outlook addins so that we can decide our product road map

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: OfficeOnline/ office client with 365 pro plus subscription
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.12209.20010 (Insider channel)
* Operating System: Windows 10
* Browser (if using Office Online): chrome

## Useful logs
I have attached the whole test project with sample manifest file in order to reeproduc eissue
[js_cloud_test (2).zip](https://github.com/OfficeDev/office-js/files/3755380/js_cloud_test.2.zip)

- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/797,"Outlook web add-in load error ""This add-in could not be started ...""","It shows one error message when the user click my outlook web add-in.

ADDIN-ERROR :

This add-in could not be started. Close this dialog to ignore the problem or click ""Restart"" to try again.

It is not responding even if I click the ""Restart"" button.

This issue is only happening on Outlook 2016 for Windows.
Outlook 2016 1908

Note:
It works on browser IE, Chrome and Edge. So it was not blocked by firewall.
And not only my add-in doesn't work, but also the standard add-in ""My Template"" cannot work too. The same error was reported. Clear outlook client cache, it still cannot work.
Any feedback for this issue?"
https://api.github.com/repos/OfficeDev/office-js/issues/796,Outlook Office.context.ui.closeContainer() does nothing in Read mode,"From the taskpane, calling `Office.context.ui.closeContainer()` in read mode does not close the taskpane and does not return any error.

The same method works when called from compose mode.

## Expected Behavior
Office.context.ui.closeContainer() closes the taskpane.

## Current Behavior
Office.context.ui.closeContainer() does not close the taskpane, and does not yield any errors.

## Context
We are adopting the pinnable taskpane feature, and would like to temporarily close the taskpane when there are no mail item selected. The mechanism through `closeContainer()` only works for compose mode at the moment and we expect it to work consistently on both read and compose modes.

## Platform
Online, Office365
Chrome latest version on macOS Mojave
"
https://api.github.com/repos/OfficeDev/office-js/issues/793,"[Outlook add-in]we got ""executeEntryPoint.tsx:39 Uncaught (in promise) TypeError: Cannot read property 'mode' of undefined"" error","we got ""executeEntryPoint.tsx:39 Uncaught (in promise) TypeError: Cannot read property 'mode' of undefined"" error since 2019/10/18 afternoon. This will cause we can't open add-in (even My Templates not work too) in a new meeting page without a page refresh.

## Expected Behavior
we could open add-in without page  refresh.

## Current Behavior
1. open a meeting page, then open a add-in and this time is work.
2. close this meeting and open a new meeting then open add-in will got an error.(""executeEntryPoint.tsx:39 Uncaught (in promise) TypeError: Cannot read property 'mode' of undefined"" )

Is there any update in 2019/10/18?? we can use add-in normal until 2019/10/18.

## Steps to Reproduce, or Live Example
1. open a meeting page, then open a add-in and this time is work.
2. close this meeting and open a new meeting then open add-in will got an error.


## Context
Now if we want to use add-in normal. We need refresh all the time.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
If microsoft really make a update and can not find what the problem is please Version rollback. If it possible.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]:  Outlook
* Office version number: ______
* Operating System: win 10 and mac
* Browser (if using Office Online): Chrome

## Useful logs
executeEntryPoint.tsx:39 Uncaught (in promise) TypeError: Cannot read property 'mode' of undefined
    at executeEntryPoint.tsx:39
    at month:355
    at Object.next (month:355)
    at month:355
    at new Promise (<anonymous>)
    at f (month:355)
    at le (executeEntryPoint.tsx:24)
    at e.onClick (createOverflowContextMenuData.ts:10)
    at t.n._executeItemClick (ContextualMenu.base.tsx:1082)
    at n._onItemClickBase (ContextualMenu.base.tsx:1066)
"
https://api.github.com/repos/OfficeDev/office-js/issues/790,Cannot fetch the account emailAddress from outlook desktop on an exchange account,"## Expected Behavior
`Office.context.mailbox.userProfile.emailAddress` to return the email of the user's account inside an Outlook Addin.

## Current Behavior
It is returning the email as a string in all occasions except when I use the Outlook mac client and with an email account hosted in an Exchange server (2016 CU 12). In this particular case, it does not return the email.

## Steps to Reproduce, or Live Example
- Create an outlook add-in console logging the value of `Office.context.mailbox.userProfile.emailAddress`.
- Install it in an email account hosted in an Exchange server 2016 CU 12.
- Run the add-in in Outlook Desktop for Mac and observe the output.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac, Outlook Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Exchange Server Version: 2016 CU 12"
https://api.github.com/repos/OfficeDev/office-js/issues/800,getSelectedDataAsync returns string null when no text is selected on Outlook on the web,"on Outlook on the web when no text is selected getSelectedDataAsync result.value.data value is string null.

I was surprised!

It might be reasonable to make a note of the unexpected behavior in the documentation or if possible fix the issue.

Actual:
""null""

Expected:
""""

Code to reproduce and work around the issue:
```typescript
async function getSelectedTextOutlook() {
    return new Promise&lt;string&gt;((resolve) =&gt; {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, (result: Office.AsyncResult&lt;any&gt;)=&gt; {
            const value = result.value;
            
            // outlook returns string ""null"" if no text is selected.
            const isEmpty = value.endPosition === value.startPosition;

            const selectedText = isEmpty ? """" : value.data;
 
            resolve(selectedText);
        });
    });
}
```

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: fbb2ef5c-e278-6aba-6fe8-7a4cc0e357d5
* Version Independent ID: ebc95637-b567-86b8-4f6d-ee9c6afee19e
* Content: [Office.context.mailbox.item - requirement set 1.5 - Office Add-ins](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item#feedback)
* Content Source: [docs/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item.md](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item.md)
* Product: **outlook**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/786,Add-in disappears from Outlook when switching out-and-back-in to account,"On Windows 10, Outlook 2016 Version 16.0.4849, setting up two email accounts: one with an add-in that is Centralized Deployed and the other is without this add-in, then switching between the two accounts causes the add-in to disappear.

## Expected Behavior
Expected that _always_ when switching to the account with the add-in, that add-in will appear. 
Of course I am testing the add-in according to its activation rules (meaning I expect it to appear when reading an email). I also tested when reading different emails and when opening an email in a new window

## Current Behavior
When switching to an account without the add-in, and then back to the account with the add-in, the add-in disappears. Only way to get it back is restart Outlook.

## Steps to Reproduce, or Live Example
1. Setup two different accounts on Outlook 2016 Version 16.0.4849 (Windows 10). Reproduced to me with one Office 365 (and no Exchange Server) and the other of Gmail.
2. Use Centralized Deployment to deploy an add-in from manifest file to the Office 365 account.
3. Restart Outlook to get the add-in to appear in the Outlook ribbon.
4. Switch to second account (without add-in). Add-in button in the Outlook ribbon does not appear, as expected.
5. Switch back to first account (with add-in). Add-in button in the Outlook ribbon doesn't re-appear (Bug).

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2016 Version 16.0.4849
* Operating System: Windows 10
* Browser (if using Office Online): -
"
https://api.github.com/repos/OfficeDev/office-js/issues/778,GetSharedPropertiesAsync is not a function in not shared folder,"I'm developing add-in OWA and trying to use `getSharedPropertiesAsync` for the shared folder from delegated account which is in preview,
it worked fine, but when I use it in a not shared folder I got the following.

`core.js:7376 ERROR Error: Uncaught (in promise): TypeError: Office.context.mailbox.item.getSharedPropertiesAsync is not a function
TypeError: Office.context.mailbox.item.getSharedPropertiesAsync is not a function`

not sure if this is by design but I expect to get `status error` from the result  Office.AsyncResult<Office.SharedProperties> explaining that this is not a shared folder for example.

"
https://api.github.com/repos/OfficeDev/office-js/issues/776,How to add an attachment to a new outlook email using a SOAP request in an Outlook Addin?,"Right now I use the `Office.context.mailbox.item.addFileAttachmentAsync` method to attach new files to the currently composing email. I want to use a SOAP request to do this instead to better support self-hosted exchange servers.

I found the following doc: https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/how-to-add-attachments-by-using-ews-in-exchange#add-an-attachment-to-an-existing-email-by-using-ews but the problem is in there, I need to provide the item ID. For new emails `Office.context.mailbox.item.itemId` is undefined. Even after I use `Office.context.mailbox.item.saveAsync` to save the item it's still undefined. Any idea how to fix this?"
https://api.github.com/repos/OfficeDev/office-js/issues/773,mailbox.item.body.getAsync with Text Coercion type returns incorrect text.,"mailbox.item.body.getAsync with CoerctionType.Text does not separate text lines/paragraphs in Outlook Online when message type is Html. In Outlook for desktop it returns paragraphs/lines separated by spaces (which is the expected behavior).

## Expected Behavior
To have email message paragraphs separated.

## Current Behavior
All paragraphs are ""glued"" together in Outlook Online. They are separated properly in Outlook for Desktop.

## Steps to Reproduce, or Live Example
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. Open Outlook Online
  2. Compose a message (make sure that message is of Html type)
  3. Type in word ""Hello"" press Enter and type in ""World""
  4.  You should have Hello and in new line World
  5.  Try to retrieve item body with Office.context.mailbox.item.body.getAsync(Office.CoercionType.Text, yourCallback);
  6.  Text ""HelloWorld"" is retrieved (without space or separator)

If repeating same scenario in Outlook for Desktop ""Hello World"" is retrieved by same function.

![image](https://user-images.githubusercontent.com/53277298/66674804-dd306600-ec31-11e9-8163-cfccc720a40f.png)

![image](https://user-images.githubusercontent.com/53277298/66674834-f0433600-ec31-11e9-8c16-4ce472e2c8be.png)

![image](https://user-images.githubusercontent.com/53277298/66674850-fd602500-ec31-11e9-893a-afc721fddf75.png)


![image](https://user-images.githubusercontent.com/53277298/66674867-06e98d00-ec32-11e9-9992-dd37d52f188b.png)


## Context
We need to retrieve email body as text (without any styling) in order to further process it.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: N/A
* Operating System: Windows 10
* Browser (if using Office Online): Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ x ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/768,"[Outlook add-in]Office.context.mailbox.item.body.getAsync can not get right content, which will cause error","I am a developer on office365 add ins.
In outlook 2013, when I try to get a body with an attachment using 'body. getAsync', a picture with a hyperlink is returned. So that after I put this Body back use 'Body.setAsync', this attachment can not be open directly by double click.

## Expected Behavior
In HTML mode body.getAsync can identify the attachment with a special tag.
Or there is a js API to get attachments in body.(now outlook MSO version and outlook 2013 not support these  api)

## Current Behavior
 In outlook 2013, when I try to get a body with an attachment using 'body. getAsync', a picture with a hyperlink is returned. 


## Context
Now our user who use outlook 2013 can not use add-in to handle email with attachment in body.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2013 (15.0.5172.1000) MSO (15.0.5172.1000) 64bit.
* Operating System: Windows 10
* Browser (if using Office Online): ______

"
https://api.github.com/repos/OfficeDev/office-js/issues/763,Is there a way to debug ExecuteFunction-Action in Outlook/Office Desktop?,"<!--- Provide a general summary of the issue in the Title above -->

Debugging Add-Ins that use a TaskPane is easily possible using F12 Tools or VisualStudio Debugger, but ExecuteFunction-Actions don't have this possibility what get's really frustrating if your code works in owa and you don't have any information to work with.
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
Just try to debug an ExecuteFunction-Action

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
We had a Button in a taskpane executing a function. We desided to make an extra button in the ribbon for that. While still working in owa, the exactly same code that worked in Desktop before (Button in TaskPane) stopped working.
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook Desktop
* Office version number: 1909
* Operating System: Windows 10

<!--- Please include any of the following logs that may help us debugging your issue -->
"
https://api.github.com/repos/OfficeDev/office-js/issues/765,Doesn't work in outlook app,"I am using the makeEwsRequestAsync to get user information like phone number and email. The problem is i can obtain all the parameters in the web-app (outlook in chrome) and when i use it in the windows app i can't. For example, when i use it to get the phone numbers, i can obtain how many numbers that contact have, but the phone numbers returned are undefined.
On the web-app, i don't have any problem."
https://api.github.com/repos/OfficeDev/office-js/issues/759,Show/hide elements depending on whether an Outlook web Add-In is installed or not,I need to show an element in the email body if a specific Outlook web Add-In is not installed. Is there any way we can do that?
https://api.github.com/repos/OfficeDev/office-js/issues/753,[Outlook] Attendee is not removed after calling Office.context.mailbox.item.saveAsync(),"## Expected Behavior
The attendee should be removed or ""discard/not discard changes"" dialog should be shown.

## Current Behavior
Attendee is not removed

## Steps to Reproduce
1/ Open existing meeting/appointment and open web Add-In panel. I use the following sample:

import * as React from 'react';
import * as ReactDOM from 'react-dom';
ReactDOM.render(
    <button onClick={() => Office.context.mailbox.item.saveAsync()}>SAVE ASYNC</button>,
    document.getElementById('app'),
);

2/ Add attendee by using 'People' dropdown on a meeting form;
3/ Call `Office.context.mailbox.item.saveAsync()`. In my case I call `Office.context.mailbox.item.saveAsync()` by clicking on the button;
4/ Remove just added attendee from the list;
5/ Close the meeting and open it again;

## Your Environment
* Platform: Office Online
* Host: Outlook Calendar
* Office version number: 2016
* Operating System: Windows Server 2012 R2,  Windows 10, Exchange 2016 (15.1.1779.2)
* Browser: Any

The interesting thing is that this issue reproduced only if I manipulate Attendees. It works as expected when change body, title, etc... And after changed body/title/... ""discard/not discard dialog"" is shown."
https://api.github.com/repos/OfficeDev/office-js/issues/751,Wanted to enable right-click menu on sideload addin,"Im developing outlook office addin,
I need to allow user to right click and choose past option from context menu.
Everything was working till, I update windows10 and outlook.
Now it is not working.
Please any help would be appreciated

It is not working only in outlook desktop client, which is using edge webview

<img width=""172"" alt=""right-click-menu"" src=""https://user-images.githubusercontent.com/1651646/65983953-4f6bb280-e49c-11e9-930c-d31d239eb35a.png"">

 
"
https://api.github.com/repos/OfficeDev/office-js/issues/745,Inconsistent behavior of Contextual Add-In on Outlook for Mac and Outlook for Windows,"<!--- Provide a general summary of the issue in the Title above -->
On Outlook for Mac 2019, the regex expression in the manifest file is not getting highlighted in the email when I wrap an anchor tag around text, even though the same is getting highlighted for Outlook 2019 on windows and on web clients.
## Expected Behavior
<!--- Tell us what you expected to happen -->
The Add-In behaviour should be consistent on all the supported clients. Add-In should get triggered even when I am wrapping the text with an anchor tag around it on Outlook for Mac, just like its working on other clients (Outlook 2019 Windows and web clients)
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
The Add-In is not getting triggered on Outlook For Mac 2019 when I wrap an anchor around the text in the email content. When I remove that anchor, its working fine.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The Add-In should get triggered on Outlook for Mac even when I am wrapping the text with an anchor tag, just like its working for other clients (Outlook 2019 windows and web)
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
Manifest file:
 ```
<ExtensionPoint xsi:type=""DetectedEntity"">
              <Label resid=""AddIn.Title"" />
              <SourceLocation resid=""AddIn.WebApp"" />
              <Rule xsi:type=""RuleCollection"" Mode=""And"">
                <Rule xsi:type=""ItemIs"" ItemType=""Message"" />
                <Rule xsi:type=""ItemHasRegularExpressionMatch"" PropertyName=""BodyAsPlaintext"" RegExName=""BodyFilter"" 
                	RegExValue=""CLICK TO PLAY VIDEO"" Highlight=""all"" />
              </Rule>
 </ExtensionPoint>
```
My email content has something like:
```
<a href=""http://google.com"">
       <span>CLICK TO PLAY VIDEO</ span>
</ a>
```
Now, in Outlook 2019 windows and Outlook on web, the Add-In is getting triggered when I am clicking this link here (no redirection here), where as in case of Outlook For Mac 2019, the redirection is happening. Add-In window is not triggering. 
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook for Mac 2019
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.29 (19090802)
* Operating System: Mac
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/738,item.to.getAsync removes unresolved mail addresses,"Moving to a new issue from https://github.com/OfficeDev/office-js/issues/486#issuecomment-534160039

In the case of calling `Office.context.mailbox.item.to.getAsync(callback);` when there are only contacts who are not resolved, Outlook is removing those contacts from the To recipient list.

I've checked in the Outlook Web client and it does not remove the unresolved smtp email address.

## Expected Behavior
Calling Office.context.mailbox.item.to.getAsync() should return resolved recipients without side effects

## Current Behavior
Unresolved recipients are removed

## Steps to Reproduce, or Live Example
- Open new email message
- Manually type in an smtp email address, hit esc to switch focus
- Invoke Office.context.mailbox.item.to.getAsync(callback); in an add-in
- Observe the smtp email address has been removed

## Context
When our add-in is invoked by the user we call `Office.context.mailbox.item.to.getAsync(callback)` to get the current state of `to` recipients.  Depending on how the user has input the smtp mail address this information will be removed.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 1908 (build 16.0.11929.20288)
* Operating System: Windows 10 (1903)
* Browser (if using Office Online): ______
"
https://api.github.com/repos/OfficeDev/office-js/issues/736,Contextual Add-In closing by itself if there is an advertisement,"<!--- Provide a general summary of the issue in the Title above -->
When I am trying to open the contextual Add-In, it is getting closed as sson as it opens when there is a advertisement on the right panel. What's happening is whenever I click the text to open the contextual add-in, the advertisement frame refreshes and then the add-in window also closes. Its opening fine when there is no advertisement though

## Expected Behavior
<!--- Tell us what you expected to happen -->
The Add-In window should not close, even if there is some advertisement panel showing up.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
Contextual Add-In window is closing when there is advertisement frame showing on the right panel

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ______
* Operating System: Windows
* Browser (if using Office Online): Chrome/Edge

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/734,makeEwsRequestAsync throws an error for delegate calendar,"I am working on office 365 addin at the moment and just trying to use office js function for delegate calendars. some of the functions works ok , but when i try to use makeEwsRequestAsync method, it get fails and give ErrorAcessDenied as Error code and message i get as Office extension have no permissions to access any other mailboxes then the mailbox provided in the user context

i have tried beta version of office js as well, but no luck.

This is how i am using the function

`var callGetItem = function(id) {
    mailbox.makeEwsRequestAsync(getItemRequest(id), function(asyncResult) {
        var parser = new X2JS();
        var json = parser.xml_str2json(asyncResult.value);
        getItemJson = json.Envelope.Body.GetItemResponse.ResponseMessages;
        logMessage(""getItem request - call number "" + asyncCount);
        //
        if (getItemJson.GetItemResponseMessage._ResponseClass !== ""Error"") {
            logMessage(""getItem request success"");
            changeKey = getItemJson.GetItemResponseMessage.Items.CalendarItem.ItemId._ChangeKey;
            logMessage(""getItem request ChangeKey: "" + changeKey, true);
            checkRecurrencePattern(getItemJson.GetItemResponseMessage.Items.CalendarItem);
            if (customPropsString === void(0) || customPropsString == """")
            {
                if (getItemJson.GetItemResponseMessage.Items.CalendarItem.ExtendedProperty)
                {
                    logMessage(""Custom properties value: "" + getItemJson.GetItemResponseMessage.Items.CalendarItem.ExtendedProperty.Value.toString());
                    saveCustomPropertyJavaScript(getItemJson.GetItemResponseMessage.Items.CalendarItem.ExtendedProperty.Value.toString());
                }

            }
        } else {
            logMessage(""getItem request error"");
            asyncCount++;
            setTimeout(function() {
                callGetItem(id);
            }, 5000);
        }
    });
};
`

`var getItemRequest = function(id) {
    var request =
        '<?xml version=""1.0"" encoding=""utf-8""?>' +
        '<soap:Envelope xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""' +
        '               xmlns:xsd=""http://www.w3.org/2001/XMLSchema""' +
        '               xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""' +
        '               xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">' +
        '  <soap:Header>' +
        '    <RequestServerVersion Version=""Exchange2016"" xmlns=""http://schemas.microsoft.com/exchange/services/2006/types"" soap:mustUnderstand=""0"" />' +
        '  </soap:Header>' +
        '  <soap:Body>' +
        '    <GetItem xmlns=""http://schemas.microsoft.com/exchange/services/2006/messages"">' +
        '      <ItemShape>' +
        '        <t:BaseShape>IdOnly</t:BaseShape>' +
        '        <t:AdditionalProperties>' +
        '            <t:FieldURI FieldURI=""item:Subject""/>' +
        '            <t:FieldURI FieldURI=""item:Body""/>' +
        '            <t:FieldURI FieldURI=""calendar:Organizer""/>' +
        '            <t:FieldURI FieldURI=""calendar:Resources""/>' +
        '            <t:FieldURI FieldURI=""calendar:IsRecurring""/>' +
        '            <t:FieldURI FieldURI=""calendar:Recurrence""/>' +
        '            <t:FieldURI FieldURI=""calendar:FirstOccurrence""/>' +
        '            <t:FieldURI FieldURI=""calendar:LastOccurrence""/>' +
        '            <t:ExtendedFieldURI DistinguishedPropertySetId=""PublicStrings"" PropertyName=""DDL Reference"" PropertyType=""String"" />' +
        '        </t:AdditionalProperties>' +
        '      </ItemShape>' +
        '      <ItemIds><t:ItemId Id=""' + id + '""/></ItemIds>' +
        '    </GetItem>' +
        '  </soap:Body>' +
        '</soap:Envelope>';
    return request;
};`

i am using insider version of outlook with build 16.0.12112.20000 32 bit version.

Does any one know about this issue or any workaround or let me know if i am missing something?"
https://api.github.com/repos/OfficeDev/office-js/issues/725,Outlook 2016: API v1.5 no longer supported with newest release.,"Hello folks 👋 

After updating Outlook 2016 using [this update](https://support.microsoft.com/en-us/help/4475580/september-3-2019-update-for-office-2016-kb4475580) it seems that the version of OfficeJS has changed and removed support for Office API `v1.5` and above?

Some of our Outlook add-in functionality was dependent on `v1.5` and up so there is a conditional check in the code to confirm that the version of Outlook the add-in is running in does support this version before toggling this feature on. I've been recently receiving reports from some of our users that their version of Outlook (2016) no longer support this functionality even though, before updating, it did work. Testing the same functionality in the browser and Outlook 2019 still works as expected. 

I can confirm this:
```javascript
// before Sept 3rd update
Office.context.requirements.isSetSupported(""Mailbox"", 1.5); ==> true
```

```javascript
// After Sept 3rd update
Office.context.requirements.isSetSupported(""Mailbox"", 1.5); ==> false
```

Current version of Outlook 2016 |
-- |
![image](https://user-images.githubusercontent.com/3892972/64806737-a0952000-d548-11e9-86a4-4c39cc6eab2f.png) |

Is this expect behavior? Was there is change to the supported version of OfficeJS with this update? 

## Your Environment
* Platform [PC desktop]
* Host [Outlook]
* Outlook version number: See above image. Stand alone installation.
* Operating System: [Win10]
"
https://api.github.com/repos/OfficeDev/office-js/issues/722,OWA on Safari : Office.context.mailbox.displayNewAppointmentForm does not invoke,"Bug : OWA Schedule Meeting does not opens a new appointment form in Safari browser.

## Expected Behavior
Must open a new Appointment pre-populated with details filled  in #2.

## Current Behavior
It does not open the appointment window. No error is seen in console.

## Steps to Reproduce, or Live Example
1) Install Plugin, Fill information under Settings.
2) Click on Schedule Meeting from ConX Plugin
* Link to live example: https://mop.infocus.net:3000/infocus-conx-outlook-addin.xml

* Additional details:
```
function openScheduleMeeting(event, settings) {
  var meetingInviteText = populateMeetingInviteText(settings);
  var meetingInviteHTML = populateMeetingInviteHtml(settings);
  var SUBJECT = setSubjectLocale();

  var start = new Date();
  var end = new Date();
  end.setHours(start.getHours() + 1);
  console.log(start);
  console.log(end);
  console.log(SUBJECT);
  console.log(meetingInviteText);
  console.log(meetingInviteHTML);
  console.log(Office.context.mailbox.diagnostics.hostName);
  // If the Outlook is Outlook Web App
  if (Office.context.mailbox.diagnostics.hostName == ""OutlookWebApp"") {
    Office.context.mailbox.displayNewAppointmentForm(
      {
        start: start,
        end: end,
        location: settings.fullUrl,
        subject: SUBJECT,
        body: meetingInviteHTML,
        requiredAttendees: [emailId],
      });
  }
  else {
    Office.context.mailbox.displayNewAppointmentForm(
      {
        start: start,
        end: end,
        location: settings.fullUrl,
        subject: SUBJECT,
        body: meetingInviteText,
        requiredAttendees: [emailId],
      });
  }
  event.completed();
}

```
## Context
This is a blocker in context to get the addin published on store, because once your team verifies addin on Safari - will reject by saying its not functioning on safari.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: OWA
* Host [Excel, Word, PowerPoint, etc.]:Outlook
* Office version number: 16.22
* Operating System: MAC
* Browser (if using Office Online): Safari

## Useful logs
nothing"
https://api.github.com/repos/OfficeDev/office-js/issues/721,Missing restUrl in window.Office.context.mailbox.restUrl (Outlook),"Sometimes `restUrl` is missing when accessing it from `window.Office.context.mailbox.restUrl`. It's really hard to reproduce it, it only happens to me once. But I see this happens quite often for our customers.

## Expected Behavior
`restUrl` is in `window.Office.context.mailbox.restUrl`, so we can use it to send requests.

## Current Behavior
`restUrl` is an empty string `''` sometimes.

## Steps to Reproduce, or Live Example
Open add-in sidebar and check `window.Office.context.mailbox.restUrl` value. Sometimes it's `''`.

## Context
When a user doesn't have `restUrl`, we can't send a request to get user's attachments (`GET /v1.0/me/messages/{message-id}/attachments`.

## Your Environment
* Platform: `PC desktop`, `Mac`
* Host: `Outlook`
* Office version number: `16.0.11328.20392` (55%), `16.0.11929.20254` (24%), `16.0.11231.20130` (10%), `16.21 (190117)` (5%), `16.27 (190715)` (4%), `16.0.11328.20368` (2%).
* Operating System: `Windows 7/10`, `Mac OS X`"
https://api.github.com/repos/OfficeDev/office-js/issues/718,"getAttachmentContentAsync ""the operation is not supported""","The call to getAttachmentContentAsync works perfectly in Outlook 365 Web however it fails in Windows Installed Outlook 365 ProPlus Version 1902 (Build 11328.20392 Click-to-Run)

## Expected Behavior
I expect this to work THE SAME as in Outlook 365 Web

## Current Behavior
Throws a ""Host Error: the operation is not supported

## Steps to Reproduce, or Live Example
```
var options = { asyncContext: { type: attachment.attachmentType } };
item.getAttachmentContentAsync(attachment.id, options, function (result) 
{
	if (result.status == Office.AsyncResultStatus.Succeeded) 
	{
		//console.log(""Call returned success!"");
		var AttachmentContent = result.value; // Get the attachment content
		if (AttachmentContent.format == Office.MailboxEnums.AttachmentContentFormat.Base64) 
		{
			// handle file attachment
			//console.log(attachment.name + "" Base64 String: "" + AttachmentContent.content);
			TriSysApex.Toasters.Error(""Downloaded "" + attachment.name);
			fnCallback(AttachmentContent.content);
		}
		else if (result.format == Office.MailboxEnums.AttachmentContentFormat.Eml) {
			// handle item attachment
		}
		else {
			// handle cloud attachment  
		}
	}
	else 
	{
		var err = result.error;
		TriSysApex.Toasters.Error(""Download failed: "" + err.name + "": "" + err.message);
	}
});
```


## Context
This is a show-stopper as the whole point of having OfficeJS is to write code once. So this code allows customers to download attachments only in Office365 Web, but not in installed Outlook on Windows.

## Your Environment
Windows 10 64-bit, Office 365, Edge (Chromium)

"
https://api.github.com/repos/OfficeDev/office-js/issues/720,Validating token doesn't work,"When I read your documentation regarding the validation of identity token and try to perform it, it doesn't work. It looks like the JWT token which is issued is not signed with the key provided by JSON.

This is the token I get when calling `getUserIdentityTokenAsync` within Microsoft Add-in:

```
eyJhbGciOiJSUzI1NiIsImtpZCI6IjA2MDBGOUY2NzQ2MjA3MzdFNzM0MDRFMjg3QzQ1QTgxOENCN0NFQjgiLCJ4NXQiOiJCZ0Q1OW5SaUJ6Zm5OQVRpaDhSYWdZeTN6cmciLCJ0eXAiOiJKV1QifQ.eyJhcHBjdHhzZW5kZXIiOiIwMDAwMDAwMi0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDBAMjk4N2U2OWEtMGExNi00ZThlLTkzZTQtZmE3ZDk4MTkxMWRmIiwiaXNicm93c2VyaG9zdGVkYXBwIjoiVHJ1ZSIsImFwcGN0eCI6IntcIm1zZXhjaHVpZFwiOlwiYjg2YTA3MjMtZjNlZS00ODA0LTg1M2EtNmU2ZTRkYmIxNTkwXCIsXCJ2ZXJzaW9uXCI6XCJFeElkVG9rLlYxXCIsXCJhbXVybFwiOlwiaHR0cHM6Ly9vdXRsb29rLm9mZmljZTM2NS5jb206NDQzL2F1dG9kaXNjb3Zlci9tZXRhZGF0YS9qc29uLzFcIn0iLCJuYmYiOjE1NjgxMTczNzQsImV4cCI6MTU2ODE0NjE3NCwiaXNzIjoiMDAwMDAwMDItMDAwMC0wZmYxLWNlMDAtMDAwMDAwMDAwMDAwQDI5ODdlNjlhLTBhMTYtNGU4ZS05M2U0LWZhN2Q5ODE5MTFkZiIsImF1ZCI6Imh0dHBzOi8vbG9jYWwuZmVkZXJhdGVkLmRpcmVjdG9yeTo0MjAwL293YSJ9.H6NXnaPo8KzxoybHXQ_7hCZjy-hQk7nAq8kPTPGVvriM1O1BqmJDB0YCGGUqQn4roJKOFyMDyXV24jJtL4zSgcVmbZ0p1fX4aGMMNWgAYc86j97h5U4i8HV4M9IoCDbhc5MWaOd-5oJQl_vYKi2OlJQLtfAUJ6CdAHo1eAZ1QYn82ulmzc8OCxjbA3pjkPlcOIEfo63UKPtRIKLA9KPe4HdxtH5GvSwRirs3m4AB7XpduSLq6HnaAUdgVbaqomTAZp1UULu8HmNcYb9ylkXkKst3D24AS08eawiz-Pt-WoR-GzLK0GIv8mIv8n9dyEJE43P7ojJJFz_dbc2w94uCCQ
```

Below is the certificate, which is now at https://outlook.office365.com/autodiscover/metadata/json/1 ( specified in appctx field ):

```
MIIHSjCCBTKgAwIBAgITFgAAbj8rLop6Gl4g1gAAAABuPzANBgkqhkiG9w0BAQsFADCBizELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEVMBMGA1UECxMMTWljcm9zb2Z0IElUMR4wHAYDVQQDExVNaWNyb3NvZnQgSVQgVExTIENBIDQwHhcNMTcxMjE0MjMyNTE4WhcNMTkxMjE0MjMyNTE4WjAqMSgwJgYDVQQDEx9lc3RzY2xpZW50LmNvcmVhdXRoLm91dGxvb2suY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs+etM0+/LhZZ1QgUk9ZwhW9tfQlqveV10DRHhrqKxPfNeI5YRASRHtsFqXcwfE0OQASDF7bWQPCA1TcECaj6wkJZjEGJEB/WOZ7b3Eo3QQf7BBAqIbqn4Rv+XQpm0bPUcfiTusk1k72cMAPCqd93m6zx7yXe5z7ZHPH8oyOHtlMvvcH4cFPWMwG/S2GPpyCKAGv8FW2nzmZWwSr76wFebBPX98HCEcxhJkTNVe1+5m5bQBGdEmWni1d6IsIg29VQgx1RwuiI9m6XA+c0MZJN1kAkR2g5HEtzeJ1JSrFjp2ZSxLWIzuHThqSZ+f94DCaKBygb+A3+AvyA1fRRXUzQNwIDAQABo4IDBTCCAwEwCwYDVR0PBAQDAgSwMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATB4BgkqhkiG9w0BCQ8EazBpMA4GCCqGSIb3DQMCAgIAgDAOBggqhkiG9w0DBAICAIAwCwYJYIZIAWUDBAEqMAsGCWCGSAFlAwQBLTALBglghkgBZQMEAQIwCwYJYIZIAWUDBAEFMAcGBSsOAwIHMAoGCCqGSIb3DQMHMB0GA1UdDgQWBBRFRZN8SQgkfAd907K1/y/VgnDMQTAfBgNVHSMEGDAWgBR6e4zBz+egyhzUa/r74TPDDxqinTCBrAYDVR0fBIGkMIGhMIGeoIGboIGYhktodHRwOi8vbXNjcmwubWljcm9zb2Z0LmNvbS9wa2kvbXNjb3JwL2NybC9NaWNyb3NvZnQlMjBJVCUyMFRMUyUyMENBJTIwNC5jcmyGSWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvbXNjb3JwL2NybC9NaWNyb3NvZnQlMjBJVCUyMFRMUyUyMENBJTIwNC5jcmwwgYUGCCsGAQUFBwEBBHkwdzBRBggrBgEFBQcwAoZFaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9tc2NvcnAvTWljcm9zb2Z0JTIwSVQlMjBUTFMlMjBDQSUyMDQuY3J0MCIGCCsGAQUFBzABhhZodHRwOi8vb2NzcC5tc29jc3AuY29tMD4GCSsGAQQBgjcVBwQxMC8GJysGAQQBgjcVCIfahnWD7tkBgsmFG4G1nmGF9OtggV2E0t9CgueTegIBZAIBGjBNBgNVHSAERjBEMEIGCSsGAQQBgjcqATA1MDMGCCsGAQUFBwIBFidodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL21zY29ycC9jcHMwJwYJKwYBBAGCNxUKBBowGDAKBggrBgEFBQcDAjAKBggrBgEFBQcDATAqBgNVHREEIzAhgh9lc3RzY2xpZW50LmNvcmVhdXRoLm91dGxvb2suY29tMA0GCSqGSIb3DQEBCwUAA4ICAQAEM6kYpbLe8lN40keaJSZTBsNFGF8iddZgv6LldFY3Tp0YABoQeQofxwdKyd20AbBBSYqhok5pVq5pNEwM3yfii99a2WX0FWog4kGDN2G2MqK/t22TalvDGD1hqjw/Sannxom8JA8FnwzOV2XqI9OrsNHvVK0wUSfQK6uQMGB2JnNSDZYm+DXbMaAwKRV+psfblBLoNfYHoCCDo+KVlLCZ57iQXY+FB0DqsgiGuxuwRl9jwHyhVh8pJSEU09rzZos9qpX/v55TbMqtshEy+BEeMpWcyWPzCHlOF0bnTQ8rCbLotJNQEVVTZK8dNuIT9oNIvjPYrjkATMgX6LwwdNNWYOzuuUm8S/OeZPCFQnbsg0ZXOf3zXFoAKpX+sJ19hZR8atF36FnvCQ8oQqlHyymldBQ/mfh8NfY/lCtFgKnzginjRNq8liMiXPiuiXb7Ru8NFpEVAGvi/6MQp/17DzhVzxF0+PsAlYah1PK/KYcea6nOfD0eldp4XAjHmBgw4f19d4quze+hrRVzqUBawVtXdjtkGD72A4y17CIQrh2AcOuXHQwzX40S+NxPfSzCKkq6wBNg/sZ1CgASWxcagDyqevuqk81BfrauGL8SBmJRvc2LqS4Z3z4Cn66r3Q4tiD7QCKoRef+KUASP/ir/+Gqd6NZ146S28qITFKEMG073DQ==
```

But it looks like jwt is signed by another key. I've tried to validate it through my code in node.js, but also by https://jwt.io/, and neither does work.

"
https://api.github.com/repos/OfficeDev/office-js/issues/717,Dialog API is not loading URL in frame in Outlook 16,"I am using `displayDialogAsync` API to load our application in iFrame. When I click on `Schedule` UI-less component in Outlook 16 for Mac, It only displays a blank white screen. 

## Expected Behavior
It should render the application correctly as it does in OWA
## Current Behavior
Plugin fails to render the URL and it displays a blank screen.

## Steps to Reproduce, or Live Example
Install this plugin in Outlook 16 for Mac. It only happens in **_macOs 10.12 Sierra_**.
https://appsource.microsoft.com/en-us/product/office/WA200000175
I am unable to debug it on that specific macOS 10.12 version as it is not supported.

## Context
It is not creating a consistence experience for our user when they switch between OWA and Desktop outlook

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook 16
* Office version number: ______
* Operating System: macOS Sierra (10.12.6)
* Browser (if using Office Online): ______

## Useful logs
![image](https://user-images.githubusercontent.com/53185673/64562704-23cd3080-d313-11e9-85f8-9b2c93c8b620.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/698,[Outlook] Error while making EWS request to find mailing item,"We use `Office.context.mailbox.makeEwsRequestAsync` to manage mailbox items from our Outlook add-in and it randomly throws error for our customers. Unfortunately, we were not able to reproduce the error, but we have it in our production logs (see below). The description of the error is blank, but it's code is `-2147417843`.

## Expected Behavior
EWS requests should be executed successfully.

## Current Behavior
EWS requests randomly throw error.

## Steps to Reproduce, or Live Example
- Call `Office.context.mailbox.makeEwsRequestAsync` with the body for one of the following operations: `FindItem`, `UpdateItem`.
- Get an error (not guaranteed).

Example request payload:
```
<?xml version=""1.0"" encoding=""utf-8""?>
  <soap:Envelope
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages""
    xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types""
    xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""
  >
    <soap:Header>
      <t:RequestServerVersion Version=""Exchange2013"" />
    </soap:Header>
    <soap:Body>
      <m:FindItem Traversal=""Shallow"">
        <m:ItemShape>
          <t:BaseShape>IdOnly</t:BaseShape>
        </m:ItemShape>
        <m:Restriction>
          <t:Contains ContainmentMode=""Substring"" ContainmentComparison=""IgnoreCase"">
            <t:FieldURI FieldURI=""message:InternetMessageId""/>
            <t:Constant Value=""Message ID""/>
          </t:Contains>
        </m:Restriction>
        <m:ParentFolderIds>
          <t:DistinguishedFolderId Id=""inbox"" />
          <t:DistinguishedFolderId Id=""outbox"" />
          <t:DistinguishedFolderId Id=""sentitems"" />
          <t:DistinguishedFolderId Id=""msgfolderroot"" />
        </m:ParentFolderIds>
      </m:FindItem>
    </soap:Body>
</soap:Envelope>
```

## Context
Error prevents us from updating and sending emails successfully through our add-in. 

## Your Environment
* Platform: PC desktop
* Host: Outlook
* Office version number: 16.0.11901.20176
* Operating System: Windows 10.0

## Useful logs
Error object parsed by Bugsnag breadcrumbs
```
description:
number: -2147417843
stack: Error
   at n.prototype.execute (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:88948)
   at u.DDA.OutlookAppOm.prototype.callOutlookDispatcher (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:175997)
   at u.DDA.OutlookAppOm.prototype.invokeHostMethod (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:175866)
   at r.RequestBase.prototype._sendRequest$i$0 (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:317180)
   at r.EwsRequest.prototype.send (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:308709)
   at u.DDA.OutlookAppOm.prototype.makeEwsRequestAsync (https://appsforoffice.microsoft.com/lib/1/hosted/outlook-win32-16.02.js:15:190810)
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/700,MessageComposeCommandSurface does not add add-in to reply email,"In Outlook Web, I can see my add-in whether I'm replying to email or creating a new one. But in Outlook Desktop App, I can only see my add-in when creating a new email.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 06e092f1-aa6a-45b5-50ce-a1afca772776
* Version Independent ID: fa9c31b7-b63a-9867-f298-4d579b899c30
* Content: [ExtensionPoint element in the manifest file - Office Add-ins](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/extensionpoint#messagecomposecommandsurface)
* Content Source: [docs/reference/manifest/extensionpoint.md](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/reference/manifest/extensionpoint.md)
* Product: **non-product-specific**
* Technology: **add-ins**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/692,Office.context.ui.messageParent does not work on Internet Explorer,"It works fine on Chrome, but it does not work on Internet Explorer.
The dialog opener does not receive any message upon invocation of the method in the dialog box.

It is also not working in Outlook Desktop application, which is based on IE"
https://api.github.com/repos/OfficeDev/office-js/issues/685,Outlook Add-in command is not working well and consistently on Android,"<!--- Provide a general summary of the issue in the Title above -->
I am developing Outlook add-in using add-in command to execute a function.
The test version of the add-in will open dialog then user can choose to click OK or cancel then another dialog will appear and user can click OK to complete the action.
The add-in works well on iOS and web, but not on Android
  
## Expected Behavior
<!--- Tell us what you expected to happen -->
I expected the add-in can work on web, iOS, Android
1. The add-in will show notification ""<Add-in name> is working on your <action name> request""
2. The add-in then show notification ""step 1""
3. The add-in then open a dialog allow user to click button to send message back to parent and the dialog is closed
4. The notification show ""step 2""
5. The dialog will appear and allow user to click button to send message back to parent and the dialog is closed
6. Action complete

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

The add-in works very well on web and iOS. But when it comes to Android, the problem appears:
- Sometimes the add-in stops working, the only notification message appears is  ""<Add-in name> is working on your <action name> request"" and it spinning forever.
- Sometimes the add-in successfully opens the dialog but I click many times to the button on the dialog and nothing happened, no error showing up, it just stays there. Need to press X to close the dialog.
- Sometimes the add-in can stop at any step. 
- Sometimes the add-in does successfully the expected steps.

## Steps to Reproduce, or Live Example
We are using ReactJs for the web part.
The code looks like:

command.js
```
import * as OfficeHelpers from '@microsoft/office-js-helpers';

Office.initialize = function() {
    console.log('Office onReady!!!')
    if (OfficeHelpers.Authenticator.isAuthDialog()) {
        return
    }
};

async function action(event) {
        showNotification(""step 1"")
        const result1 = await showDialog(dialogUrl , 18,25)
        console.log(result1)
        showNotification(""step 2"")
        const result = await showDialog(dialogUrl , 20,25)
        console.log(result)
        event.completed()
}

async function showDialog(url, size1, size2){
//a promise wrapper for OfficeJs Office.context.ui.displayDialogAsync
}

function showNotification(message){
// a wrapper for Office.context.mailbox.item.notificationMessages.addAsync
}

//these bellow code following the tutorial to create add in by ReactJS
function getGlobal() {
    return (typeof self !== ""undefined"") ? self :
        (typeof window !== ""undefined"") ? window :
            (typeof global !== ""undefined"") ? global : undefined
}

const g = getGlobal()
g.action = action
```


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Android
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: the latest version of Outlook for Android on 2019-21-08
* Operating System: Android version 8
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/683,Folders area does not refresh after the addin (using EWS) creates new folder(s),"## Expected Behavior
Newly created folders are visible in the Folders area.

## Current Behavior
Folders area does not refresh so newly created folders are not visible until the OWA web-page is reloaded in the browser.

## Steps to Reproduce, or Live Example
1. Install the demo add-in from https://newdev.timesolv.com/Integrations/addin/SimpleVersion.xml
2. Open OWA.
3. Select an email message.
4. Open the add-in.
5. Fill in the input fields (all are required).
6. Click on the button
7. See that the folders (corresponding to the input fields) are not visible in the Folders area (left navigation bar)

Note that the same add-in works in Outlook Windows as expected.

## Context
I want to allow my customers file (i.e. associate) their emails corresponding to a business entity (which is in my application) right from within the Outlook. To do this, I want to create a folder (if not already exists) in the Outlook corresponding to the selected record of that entity. The folders are created in a hierarchy as follows:
Top-Level Folder
&nbsp;&nbsp;&nbsp;&nbsp;Folder of the Parent of the selected record
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Folder of the selected record
After making sure that the folder has been created (or was already there), I move the selected email to that folder.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: PC desktop, Windows 7, Outlook Web App
* Host: Outlook Web App
* Browser: Google Chrome 64-bit (76.0.3809.100) and Mozilla Firefox 64-bit (68.0.1). Not tested in other browsers.

## Useful logs
As far as the add-in functionality is concerned, there are no javascript errors. Please check the browser console for the log when you click on the button."
https://api.github.com/repos/OfficeDev/office-js/issues/679,ConversationId is 'null' in new OWA on Forward,"Office.context.mailbox.item.conversationId is returning null when we are forwarding email in Outlook UI for web. It works properly in Outlook for Desktop and it was working propertly in old OWA.

Almost exact issue was already reported for Reply functionality (#636) and it was fixed, but for Forward it doesn't work.

## Steps to Reproduce, or Live Example
Steps are identical to linked issue (#636) but instead of clicking on Reply, we click on Forward."
https://api.github.com/repos/OfficeDev/office-js/issues/678,Office Api's not working,"<!--- Provide a general summary of the issue in the Title above -->
I am creating a contextual Outlook Add-In with ""ItemHasRegularExpressionMatch"" rule. Below are the issues that I am facing:
1. Office.context.mailbox.item.(getRegExMatchesByName |  getRegExMatches) are retrning null in Outlook 2016 desktop client, though its working on web client.
2. Office.context.mailbox.item.body.getAsync as HTML is not returning the mail body.  Instead its just returning me this: ""**ÿþ<**"".
## Expected Behavior
<!--- Tell us what you expected to happen -->
1. Office.context.mailbox.item.(getRegExMatchesByName |  getRegExMatches): these should return the Regex matches instead of returning null
2. Office.context.mailbox.item.body.getAsync: this should return complete the email body
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
1. Office.context.mailbox.item.(getRegExMatchesByName |  getRegExMatches): Instead of returning me the array of regex matched texts, its retuning me null
2. Office.context.mailbox.item.body.getAsync: Instead of mail body its returning me this: ""**ÿþ<**"".
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: You can sideload the test add-in from ""https://tmdev01.tm00.com/testapp/manifest.xml"". The rule is applied for ""ItemHasRegularExpressionMatch"" rule as regexvalue = view online
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:

  1. Send an email with ""view online"" text in it
  2. Sideload the Add-In from above mentioned address
  3. Try opening the add-in on Outlook 2016. 
  4. It should bind the mail body to the add-in. But it doesn't. Also, if you debug it you will find that getRegExMatchesByName and getRegExMatches bith returns null.


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2016 (16.0.4266.1001) 64 bit
* Operating System: Windows
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/676,Add-ins not showing up on Outlook android app,Is there any recent change in the manifest syntax for _MobileFormFactor_ ? None of the Outlook add-ins are showing up on Android Outlook application.
https://api.github.com/repos/OfficeDev/office-js/issues/665,addFileAttachmentAsync() produces attachment that I cannot view/open,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- Tell us what you expected to happen -->
addFileAttachmentAsync attaches document to composing email that can be opened.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The result of the method call is successful, I am able to get the attachment id of the result. However, i'm not able to open the attached document.
For example, when trying to open a docx document that I have attached to an email, I get the error `Word found unreadable content in _____`.
Similarly, in outlook in chrome, I get the error `Sorry, we ran into a problem while opening this document.`

I don't get any console errors when making the function call, but when attempting to open the file I get the console error:

`Access to XMLHttpRequest at https://browser.pipe.aria.microsoft.com/ping from origin https://euc-word-view.officeapps.live.com has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.`

`GET https://browser.pipe.aria.microsoft.com/ping net::ERR_FAILED`

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

```
var url = """";

var docName = ""Image-23-08-2017-13-10-19.jpg"";

Office.context.mailbox.item.addFileAttachmentAsync(
    url,
    docName,
    function (asyncResult) {
        if (asyncResult.status == Office.AsyncResultStatus.Succeeded) {
            // Get the ID of the attached file.
            var attachmentID = asyncResult.value;
        }
    });
```

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
The url passed to this method is valid

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.3216.1.2706983
* Operating System: Windows
* Browser (if using Office Online): Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Screenshots
- [ ] Console errors
- [ ] Test file (if only happens on a particular file)

`Access to XMLHttpRequest at https://browser.pipe.aria.microsoft.com/ping from origin https://euc-word-view.officeapps.live.com has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.`

`GET https://browser.pipe.aria.microsoft.com/ping net::ERR_FAILED`
"
https://api.github.com/repos/OfficeDev/office-js/issues/659,Office.OnReady is getting called twice,"<!--- Provide a general summary of the issue in the Title above -->
The Office.OnReady function is called twice for an Outlook Contexxtual Add-In that I am creating. 

## Expected Behavior
<!--- Tell us what you expected to happen -->
 Office.OnReady should be called only once.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
Office.OnReady should be called only once
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1.  Office.onReady().then(info => {  }); This is getting called twice. No special steps to reproduce. Its just like plugging the OnReady in the add-in and its behaving strangely.
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
I am loading a script file dynamically which is getting loaded twice due to this.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook Web Client on Windows
* Host [Excel, Word, PowerPoint, etc.]: Outlook 365
* Office version number: Outlook 365
* Operating System: Windows
* Browser (if using Office Online): Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
Nothing to provide here
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/658,Missing AddIn In Android Outlook,"<!--- Provide a general summary of the issue in the Title above -->
Some registered addin(s) in the MS O365 Admin Center are not shown on android devices. The missing android addin however is present when viewing email via IOS outlook and Chrome browser (OWA) outlook.

## Expected Behavior
<!--- Tell us what you expected to happen -->
All platforms of outlook should show the same set of registered addins.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
Current behavior is that 1 fixed addin deployed to everyone in the domain is missing. And this happens not only on the addin shown in the images but in other addins as well. The missing addin in this case is the Message Header Analyzer. Some of our company clients report that in their case, our addin the Phish Alert V2 is missing.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______
1. Register an addin or several addins via the Microsoft O365 Admin Center.
2. Some addins should be registered as fixed, and some as available.
3. Wait for 12 hours or so.
4. Open an outlook account under the domain and check if all the addins are showing in (1) Android (2) IOS (3) web browsers (4) Windows outlook

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
As I've said, some of our clients have reported that our Phish Alert Button V2 are not showing in their android devices. After testing once, I was able to reproduce the issue NOT on our addin but in the ""Message Header Analyzer"" addin. I am leaning towards the idea that this issue is not on the addins but on the Admin Center. It seems that those configured via the Exchange admin center (the old ui) gets registered correctly in android devices as well. The addins added in the new Microsoft O365 Admin Center sometimes do not make it through the admin center.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: ______
* Host [Excel, Word, PowerPoint, etc.]: ______
* Office version number: ______
* Operating System: ______
* Browser (if using Office Online): ______
IOS outlook, Android Outlook and Chrome OWA.

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)

IOS Outlook Addin Icons :
![IPhoneOutlookWithAddin](https://user-images.githubusercontent.com/3444844/62591565-93aa5e80-b902-11e9-875c-b696efd7398e.PNG)

Chrome Outlook Addin Icons : 
![ChromeBrowserWithMessageHeaderAnalyzer](https://user-images.githubusercontent.com/3444844/62591582-a6249800-b902-11e9-86e6-04667ce6e727.PNG)

Android Outlook AddIn Icons : 
![AndroidOutlookMissingAddin](https://user-images.githubusercontent.com/3444844/62591592-b2a8f080-b902-11e9-9b78-23a602fca461.JPG)

Exchange Admin Center Registered addins : 
![OldEACAccessForAddinConfiguration](https://user-images.githubusercontent.com/3444844/62591629-ceac9200-b902-11e9-91a5-dca967284074.PNG)


New MS O365 Admin Center Registered addins : 
![NewMSO365CenterForAddInConfiguration](https://user-images.githubusercontent.com/3444844/62591649-db30ea80-b902-11e9-81eb-3e61653ce047.PNG)




"
https://api.github.com/repos/OfficeDev/office-js/issues/655,displayDialogAsync Doesn't display Web Application in Windows Outlook Client,"
<!--- Provide a general summary of the issue in the Title above -->

Authentication application does not display properly from displayDialogAsync in Windows 7 Outlook client but does display properly when using OWA with IE 11.  It does display properly on MAC using the Outlook client.  See the MP4 attachments.

The same problem occurs in Windows 10 versions 1803 and 1903.

<!--- Tell us what you expected to happen -->
Authentication application should display the login screen 

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
The authentication application does not display the login form.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ____

You can install the add-in using the following URL:  https://staasf-staging4.shoretelsky.com/outlook-addins/calendar/meeting.manifest.xml .
The add-in appears on new appointments and existing appointment which you previously created.  The button is named ""Mitel Meet"".


<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Main use case for the add-in is the Windows Outlook client.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: ______
* Host [Excel, Word, PowerPoint, etc.]: ______
* Office version number: ______
* Operating System: ______
* Browser (if using Office Online): ______
See attachments and MAC mp4 for version information.

## Useful logs
<!--- Please include
[Security Zones.zip](https://github.com/OfficeDev/office-js/files/3474435/Security.Zones.zip)
![Windows 7 Software](https://user-images.githubusercontent.com/45952773/62582130-2e9e2c80-b860-11e9-8fec-c302bd91fa11.png)
[Mac Outlook Authentication.mp4.zip](https://github.com/OfficeDev/office-js/files/3474444/Mac.Outlook.Authentication.mp4.zip)
[IE 11 Authentication.mp4.zip](https://github.com/OfficeDev/office-js/files/3474447/IE.11.Authentication.mp4.zip)
[Windows Outlook Authentication Faliure.mp4.zip](https://github.com/OfficeDev/office-js/files/3474450/Windows.Outlook.Authentication.Faliure.mp4.zip)
[meeting.manifest.xml.zip](https://github.com/OfficeDev/office-js/files/3474470/meeting.manifest.xml.zip)
[Allow Popups.reg.zip](https://github.com/OfficeDev/office-js/files/3474472/Allow.Popups.reg.zip)
![Windows 7 Software](https://user-images.githubusercontent.com/45952773/62582924-f1876980-b862-11e9-82ec-2703bc29ff67.png)







 any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/652,Roaming settings are not synced to iOS devices,"## Expected Behavior

- Add some data to the roaming settings.
- Save roaming settings.
- Open the iOS client.

The iOS client should be able to read the saved data from roaming settings.

## Current Behavior

The iOS client don't have the data in it's roaming settings. Tried after several minutes and even after several hours. Also tried closing the iOS client (Clearing the app not just minimizing) and re-opening. Still nothing.

## Steps to Reproduce, or Live Example
I just created a sample plugin and hosted it. The source code can be found here: https://github.com/THPubs/outlook-office-roaming-test

The manifest file of that code points to a real live version of this app. Now,

1) Try to open it in your web client, set a value to roaming settings.
2) Now open the plugin in a mobile client and see. For me, the settings are not transferred to the iOS.

## Your Environment

* Platform: Mac, iOS
* Host: Outlook
* Operating System: OSX 10.14.6, iOS 12.4"
https://api.github.com/repos/OfficeDev/office-js/issues/644,getAttachmentContentAsync fails to get Attachments when waiting 5 - 10 minutes,"## Expected Behavior
getAttachmentContentAsync should return the asked attachment.

## Current Behavior
It works perfectly, when you request the attachment immediately, but when waiting, there will be an error instead.

## Steps to Reproduce, or Live Example
 wait 5 - 10 minutes
Office.context.mailbox.item.getAttachmentContentAsync(id)

## Context
Trying to get attachments from mail and send them to our web app. (Read mail)

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook OWA
* Office version number: latest OWA
* Operating System: linux
* Browser (if using Office Online): Chrome

## Useful logs
GET https://outlook.live.com/owa/.... 440

Access to fetch at 'https://outlook.live.com/owa... (redirected from 'https://attachment.outlook.live.net/owa/..../service.svc/s/GetFileAttachment?... from origin 'null' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.
tslib.es6.js:69 Uncaught (in promise) TypeError: Failed to fetch
"
https://api.github.com/repos/OfficeDev/office-js/issues/641,Fetching token using `getCallbackTokenAsync` requires mailbox item to be saved ,"My Outlook add-in can fetch a token just fine using when in a `MessageReadCommandSurface` ExtensionPoint but returns an error when in `MessageComposeCommandSurface`. 
This seems to be the expected behavior when the add-on _doesn't_ have full `ReadWriteMailbox` permission but I _do_ have full permissions and I'm still seeing this error.

## Expected Behavior
While the add-in is running in `MessageComposeCommandSurface` and full `ReadWriteMailbox` permissions are granted, requesting a token should be successful.

## Current Behavior
Instead, the results is an error:
```
{
  ""name"": ""CanOnlyGetTokenForSavedItem"",
  ""message"": ""The token can't be retrieved until the item is saved."",
  ""code"": 9029
}
```

## Steps to Reproduce, or Live Example
1. Run an add-in in Outlook when in the compose view
1. The add-in is given full permissions (`ReadWriteMailbox`)
1. The current mailbox item has not been saved
1. Request a REST API token using `getCallbackTokenAsync`
1. Expect a response with a token and not an error

## Context
The add-in has functionality that allows a user to scan their inbox and select emails from a list to be archived to a third party service. This functionality works fine with-in `MessageReadCommandSurface` but does not work in the compose mode. 

## Your Environment

* Platform: Desktop Windows, Mac, browser, every environment I've tried
* Host: Outlook
* Office version number: Outlook 1902 (Build 11328.20368)
* Operating System: Win10, MacOS Mojave
* Browser (if using Office Online): Chrome, Safari

## Useful logs
This issue can also be shown [here](https://stackoverflow.com/questions/51004240/can-i-fetch-a-rest-token-while-in-messagecomposecommandsurface-in-outlook-javasc/51009892?noredirect=1#comment100937444_51009892) on Stackoverflow
"
https://api.github.com/repos/OfficeDev/office-js/issues/639,Office.context.mailbox.item.getAttachmentContentAsync fails with inline attachments,"## Expected Behavior
getAttachmentContentAsync should pass an object with the content of the requested attachment to callback.

## Current Behavior
Promise fails with error ""Uncaught (in promise) {errorCode: 9020}""

## Steps to Reproduce, or Live Example
 ```
Office.context.mailbox.item.getAttachmentContentAsync(Office.context.mailbox.item.attachments[0].id, (r) => {
            console.log(r);
        });
```
If the attachment is not inline, everything works perfectly.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: ? (Outlook online)
* Operating System: linux
* Browser (if using Office Online): Chrome

## Useful logs

  | s | @ | tslib.es6.js:69
-- | -- | -- | --
  | Promise.then (async) |   |  
  | c | @ | tslib.es6.js:70
  | (anonymous) | @ | tslib.es6.js:71
  | l | @ | tslib.es6.js:67
  | dn.<computed> | @ | getAttachmentContentAsyncApiMethod.ts:26
  | mn | @ | executeApiMethod.ts:192
  | (anonymous) | @ | EndpointRegistrator.ts:169
  | invoke | @ | osfruntime.js:2003
  | I | @ | osfruntime.js:1565
  | O | @ | osfruntime.js:1556
  | setInterval (async) |   |  
  | M | @ | osfruntime.js:1693


"
https://api.github.com/repos/OfficeDev/office-js/issues/638,Office.context.mailbox.item.dateTimeCreated setted today date in Gmail Linked mailbox,"## Expected Behavior
In a gmail mailbox linked, getting the Office.context.mailbox.item object I need to get the original message reception date. But I only have dateTimeCreated and dateTimeModified.
## Current behavior
When I get the Office.context.mailbox.item object, it returns the dateTimeCreated and dateTimeModified date set to today, so I cannot know when the mail was received. There are any way to get the original received date?
## Steps to play, or live example
In https://outlook.live.com we must synchronize a gmail email account. We select an email from this mailbox and we get it with the Addin, if we get the data through Office.context.mailbox.item, we will see that it always returns the date of today.

## Your environment
* Platform: Web Browser
* Host: Outlook Live
* Operating system: Windows 10
* Browser: Google Chrome, Internet Explorer, Firefox ..."
https://api.github.com/repos/OfficeDev/office-js/issues/636,ConversationId is 'null' in new OWA even on reply,"Office.context.mailbox.item.conversationId is returning null all the time in new Outlook UI for web. It works properly in Outlook for Desktop and it was working propertly in old OWA.

## Expected Behavior
To retrieve id of conversation that message is part of.

## Current Behavior
Property (Office.context.mailbox.item.conversationId) returns null even if it is a part of conversation.

## Steps to Reproduce, or Live Example
1. Click reply on existing message in new OWA
![image](https://user-images.githubusercontent.com/53277298/61825169-c72eb880-ae2d-11e9-9e6a-b5b0de97e074.png)

2. Run office addin which will make a call Office.context.mailbox.item.conversationId

![image](https://user-images.githubusercontent.com/53277298/61825403-520fb300-ae2e-11e9-8515-1e50eee3cb2c.png)

3. Property returns null

All of this is working properly in Outlook for Windows (Desktop) and it was working ok in old OWA.

1. Reply

![image](https://user-images.githubusercontent.com/53277298/61825555-9a2ed580-ae2e-11e9-9936-8071c18f9059.png)

2. Run addin which will call  Office.context.mailbox.item.conversationId
3. Correct conversation id is returned.

![image](https://user-images.githubusercontent.com/53277298/61825713-e9750600-ae2e-11e9-8869-cc7d4128fb09.png)


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook Online (New UI)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: N/A
* Operating System: Windows
* Browser (if using Office Online): Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ x ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/622,SupportSharedFolders stopped working,"I have 1904 outlook version. We updated for testing `SupportSharedFolders`. We created a web add-in for Outlook meetings. By using 1904 version delegated calendars are able to see Add-in for delegated calendars too. This feature worked in May and part of June month. Since 3 weeks ago, suddenly this stopped working. Not sure if preview feature is changed or stopped working.

## Expected Behavior
Delegated calendar should see Add-in as we are using 1904 outlook version on testing machines

## Current Behavior
Add-in is disabled for disabled calendars

## Steps to Reproduce, or Live Example
```
   <Hosts>
      <Host xsi:type=""MailHost"">
        <DesktopFormFactor>
          <SupportsSharedFolders>true</SupportsSharedFolders>
          <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
          <FunctionFile resid=""functionFile"" />
          <!-- Message Compose -->
          <ExtensionPoint xsi:type=""AppointmentOrganizerCommandSurface"">        
            <OfficeTab id=""TabDefault"">
              <Group id=""msgComposeGroup"">
                <Label resid=""groupLabel"" />
                <Control xsi:type=""Button"" id=""msgComposeOpenPaneButton"">
                  <Label resid=""paneComposeButtonLabel"" />
                  <Supertip>
                    <Title resid=""paneComposeSuperTipTitle"" />
                    <Description resid=""paneComposeSuperTipDescription"" />
                  </Supertip>
                  <Icon>
                    <bt:Image size=""16"" resid=""icon16"" />
                    <bt:Image size=""32"" resid=""icon32"" />
                    <bt:Image size=""80"" resid=""icon80"" />
                  </Icon>
                  <Action xsi:type=""ExecuteFunction"">
                    <FunctionName>InsertTemplate</FunctionName>
                  </Action>
                  <!--<Action xsi:type=""ShowTaskpane"">
                    <SourceLocation resid=""messageComposeTaskPaneUrl"" />
                  </Action>-->
                </Control>
              </Group>
            </OfficeTab>
          </ExtensionPoint>

          <!-- Go to http://aka.ms/ExtensionPointsCommands to learn how to add more Extension Points: MessageRead, AppointmentOrganizer, AppointmentAttendee -->
        </DesktopFormFactor>
      </Host>
    </Hosts>
```

## Context
This issue is affecting our production deployment of web add in for global testing

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook 365
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Version 1904 build 11601.20204
* Operating System: Windows 10
"
https://api.github.com/repos/OfficeDev/office-js/issues/615,[Outlook] Edge IndexedDB API doesn't call back or error out,"Starting from [`Windows 10 ver. >= 1903 / Office 365 ver >= 16.0.11629`](https://docs.microsoft.com/en-us/office/dev/add-ins/concepts/browsers-used-by-office-web-add-ins), Outlook on Windows use Edge as web control for add-ins. However, sometimes the IndexedDB API doesn't call back or error out.

## Expected Behavior
IndexedDB API should always call back or error out.

## Current Behavior
When IndexedDB writing operations were interrupted by closing Outlook add-in task pane, IndexedDB API doesn't call back or error out next time open the task pane and access IndexedDB.

## Steps to Reproduce, or Live Example

I can't consistently reproduce this problem, but there is 20% chance for Outlook on Windows to behave like below:

- Call out Outlook add-in task pane, in the add-in, perform a lot of IndexedDB writing operations (write at least 2KB data at a time).
- Close the task pane while writing to IndexedDB.
- Call out same Outlook add-in task pane, now:
  - All IndexedDB API requests don't receive a response.
  - If inspect `Storage` with [`Microsoft Edge DevTools Perview`](https://www.microsoft.com/en-us/p/microsoft-edge-devtools-preview/9mzbfrmz0mnj?activetab=pivot:overviewtab), in the `IndexedDB` section, there isn't any database listed.
  - In the `console` of [`Microsoft Edge DevTools Perview`](https://www.microsoft.com/en-us/p/microsoft-edge-devtools-preview/9mzbfrmz0mnj?activetab=pivot:overviewtab), execute code for opening IndexedDB connection never receive response (no callback or error).

**[Please watch this screen recording](https://www.youtube.com/watch?v=43K65pbeDBQ&feature=youtu.be)**

## Context

I'm working on an Outlook add-in which makes use of IndexedDB as client cache storage.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]:  PC.
* Host [Excel, Word, PowerPoint, etc.]: Outlook.
* Office version number: Outlook (Office 364 ProPlus monthly channel) x64 ver. 1906 (Build 11727.20244 Click-to-Run)
* Operating System: Windows 10 Pro x64 ver. 1903.
* Browser (if using Office Online): N/A.

![office-version](https://user-images.githubusercontent.com/3038713/61222633-1582df80-a6e9-11e9-8f50-4191d9cebeea.png)
![windows-version](https://user-images.githubusercontent.com/3038713/61222639-17e53980-a6e9-11e9-9d66-c7d9f12f82d4.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/607,"Getting ""Unable to get property '_permissionLevel$p$0' of undefined or null reference""","## Expected Behavior
Expected these methods work as documented:
```javascript
window.Office.context.mailbox.item.body.getAsync()
window.Office.context.mailbox.userProfile
window.Office.context.mailbox.getUserIdentityTokenAsync()
```

## Current Behavior
These methods throw TypeError sometimes:
```
Unable to get property '_permissionLevel$p$0' of undefined or null reference
```

## Steps to Reproduce, or Live Example
Unfortunately, I can't reproduce this. I see a lot of them in Sentry logs 9we send all of client-side errors to sentry.io). We run all of those methods after `await window.Office.onReady()`

## Your Environment
* Platform: PC
* Host: Outlook
* Office version number: between `16.0.10727` and `16.0.10730`
* Operating System: Windows
* Browser: IE11 (but probably you use it for Outlook Desktop to render an iframe)

## Useful logs
I see this in our Sentry client-side logs:
![image](https://user-images.githubusercontent.com/16977959/60881328-209fc080-a24e-11e9-89fa-f0bf33d0b185.png)

Stack trace is:
```
TypeError: Unable to get property '_permissionLevel$p$0' of undefined or null reference
  at u.DDA.OutlookAppOm.prototype._throwOnMethodCallForInsufficientPermission$i$0(/lib/1/hosted/outlook-win32-16.02.js:15:172357)
  at u.DDA.OutlookAppOm.prototype.getUserIdentityTokenAsync(/lib/1/hosted/outlook-win32-16.02.js:15:192625)
  at executor(./lib/services/Outlook.js:17:5) // I run one of the methods here
  ...
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/599,[Outlook] Dialog API broken when displaying in iframe in new OWA,"<!--- Provide a general summary of the issue in the Title above -->
In the ""new experience"" in OWA, the dialog API is not working correctly when dialogs are displayed with `displayInIframe: true`. The `displayDialogAsync` API works correctly the first time a dialog is opened with `displayInIframe: true`, but after that dialog is closed, subsequent calls to `displayDialogAsync` will fail with status code 5001 (`An internal error has occurred.`). However, this is especially bad because the dialog will indeed open, just without the taskpane receiving the `DialogHandler` object to be able to interact with it.

## Expected Behavior
<!--- Tell us what you expected to happen -->
I would expect `displayDialogAsync` to call its provided callback with a success result and a `DialogHandler` instance when it is called multiple times (as long as the dialog was closed in between each call). I would also expect that the dialog would NOT open if `displayDialogAsync` returned an error result and no `DialogHandler`, as this prevents the taskpane from being able to interact with the dialog.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
`displayDialogAsync` with `displayInIframe: true` works as expected when it is called the first time. However, after that dialog is closed, subsequent calls to `displayDialogAsync` with `displayInIframe: true` return the following result:
<img width=""408"" alt=""Screen Shot 2019-07-03 at 12 33 43 PM"" src=""https://user-images.githubusercontent.com/21230261/60619987-d8d0f300-9d8e-11e9-9d99-a6c13f15fa1d.png"">
The dialog still opens in this case, and appears to be functional, but it cannot interact with the taskpane since the taskpane never received a `DialogHandler` instance on which to attach event handlers.

This behavior does not reproduce with dialogs displayed with `displayInIframe: false`, nor does it reproduce in the ""old"" experience in OWA.

## Steps to Reproduce
1. Create a plugin that runs in a compose-mode email message, and include an HTML file for a dialog. Add the following script to the task pane's JS file:
```
renderButton = () => {
    const button = document.createElement(`button`);
    button.textContent = `Open dialog`;
    document.body.appendChild(button);
    button.addEventListener(`click`, openDialog);
}

openDialog = () => {
    Office.context.ui.displayDialogAsync(<URL of the dialog HTML file>, {
        width: 80,
        height: 80,
        displayInIframe: true,
    }, (result) => {
        console.log(result);
    });
}

Office.initialize = renderButton;
```
The dialog's HTML file could look something like this:
```
<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license. -->
<!-- See LICENSE in the project root for license information -->

<!doctype html>
<html lang=""en"" data-framework=""typescript"">

<head>
    <meta charset=""utf-8"" />
    <meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"" />
    <title>rAF-bug-demo-dialog</title>

    <!-- Office JavaScript API -->
    <script type=""text/javascript"" src=""https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js""></script>
</head>

<body class=""ms-font-m"">
    The dialog rendered!
</body>

</html>
```
2. Toggle on `Try the new Outlook` from the OWA inbox
3. Open a new compose mail, and open the task pane.
4. Click the button that says `Open dialog`. Note that the dialog opens fine, and the taskpane console.logs something like this:
<img width=""410"" alt=""Screen Shot 2019-07-03 at 12 45 39 PM"" src=""https://user-images.githubusercontent.com/21230261/60620602-7f69c380-9d90-11e9-9a63-7028a579e09a.png"">
5. Close the dialog with the X button. Notice that OWA throws the following error:
<img width=""413"" alt=""Screen Shot 2019-07-03 at 12 46 32 PM"" src=""https://user-images.githubusercontent.com/21230261/60620654-9f998280-9d90-11e9-8495-c6d51aa3e143.png"">
6. Click the `Open dialog` button again. The dialog will still open, but the taskpane will console.log the following:
<img width=""409"" alt=""Screen Shot 2019-07-03 at 12 47 34 PM"" src=""https://user-images.githubusercontent.com/21230261/60620698-c35cc880-9d90-11e9-91ad-b8340506ff9b.png"">

If you replace step 5 with the taskpane calling `dialogHandlerInstance.close()`, the issue will still reproduce, but OWA will not throw the `Cannot read property 'indexOf' of undefined` error.

Closing and reopening the taskpane will reset the problem (the first call to `displayDialogAsync` will succeed, subsequent calls will fail).

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
This is a very severe error for us since our plugin heavily relies on the dialog API. Since `displayDialogAsync` does not return a `DialogHandler` instance with this bug, our code breaks in multiple ways:
1. We're unable to attach `DialogMessageReceived` handlers to the dialog, so messages sent from our dialog get lost into the ether.
2. We think an error occurred while trying to open the dialog and that the dialog didn't open, so our taskpane shows user-facing error UI asking the user to try again.
3. Our taskpane is unable to detect when the dialog is closed by the user, which prevents it from doing certain behaviors it would normally do on dialog close.
3. Our taskpane turns on and off some code paths while a dialog is open. These code paths don't run since we don't know there is an open dialog.

This is a very broken experience for our users, so I really hope you can help us resolve this issue quickly!

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.10908.10000
* Operating System: MacOS High Sierra 10.13.6
* Browser (if using Office Online): only tested in Chrome 75.0.3770.100
"
https://api.github.com/repos/OfficeDev/office-js/issues/598,[Outlook] ConversationId is 'undefined' instead of 'null' in new OWA,"<!--- Provide a general summary of the issue in the Title above -->
According to the [documentation](https://docs.microsoft.com/en-us/javascript/api/outlook/office.message?view=office-js#conversationid), `Office.context.mailbox.item.conversationId` will return `null` if the mail item lacks a conversation ID. However, in the ""new experience"" of OWA, it returns `undefined`.

## Expected Behavior
<!--- Tell us what you expected to happen -->
I'd expect that the ""new experience"" in OWA would have the same behavior as the old experience and other platforms: if a mail item lacks a conversation ID, `Office.context.mailbox.item.conversationId` returns `null`.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
When a mail item lacks a conversation ID in the ""new experience"" in OWA, `Office.context.mailbox.item.conversationId` return `undefined`. This does not match the documentation or the behavior in other platforms.

## Steps to reproduce
1. Toggle on `Try the new Outloook` from the OWA inbox
2. Click `+New mail`
3. Open any add-in that runs in compose mode
4. Access `window.Office.mailbox.item.conversationId` from the plugin. See that the value is undefined (see screenshots below)

## Context
Our code has fallbacks that alert us if values we consume from OfficeJS are not the type we'd expect, and it throws in this case since the value of conversation ID is expected to be either a string or null. We have code that explicitly checks if `conversationId` is null as part of a check to determine if a compose mail is part of a thread, and it does not work correctly when the value is undefined. While we can work around this, it would be nice if the value was consistent across platforms and matched the documentation.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.10908.10000
* Operating System: macOS High Sierra 10.13.6
* Browser (if using Office Online): only tested in Chrome 75.0.3770.100

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [x] Screenshots
- [ ] Test file (if only happens on a particular file)

In the ""old"" OWA experience, version 16.0.10205.10000
<img width=""311"" alt=""Screen Shot 2019-07-03 at 11 34 29 AM"" src=""https://user-images.githubusercontent.com/21230261/60616657-d66a9b00-9d86-11e9-8c3e-742fccff1647.png"">

In the ""new"" OWA experience, version 16.0.10908.10000
<img width=""310"" alt=""Screen Shot 2019-07-03 at 11 33 32 AM"" src=""https://user-images.githubusercontent.com/21230261/60616672-dcf91280-9d86-11e9-8919-3ebb73a8bf0b.png"">
"
https://api.github.com/repos/OfficeDev/office-js/issues/595,"displayDialogAsync callback receives 5001 error, preventing event listeners from being added","<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
The callback parameter `result` should contain a property of `value` that is a reference to the opened dialog object.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The `result` is an `OSF.DDA.Error` error with code # 5001, and a message that ""An internal error has occurred."" This is only occurring on the web outlook client. It works correctly on the desktop outlook client.

## Steps to Reproduce, or Live Example

OAuthNeededContainer.tsx
```TypeScript
...

public render(): JSX.Element {
    return (
        <OAuthNeeded
            ...
            onReconnect={this.handleReconnect}
        />
    );
}

private async handleReconnect(): Promise<void> {
    this.done('oAuthNeeded');
}

private done(status: string): void {
    Office.context.ui.messageParent(JSON.stringify({ status: status }));
}
...
```

displayDialog.ts
```TypeScript
const receiveMessage = async (event: any): Promise<void> => {
    if (JSON.parse(event.message).status === 'oAuthNeeded') {
        const oAuthResult = await startFlowAsync(); // returns a promise with the result of authenticating w/ Microsoft
        resolve(oAuthResult);
    } else {
        resolve('Canceled');
    }
};

const url = 'someURL';
const dialogOptions = { width: 25, height: 55, displayInIframe: true };
Office.context.ui.displayDialogAsync(url, dialogOptions, (result: Office.AsyncResult) => {
    dialog = result.value;
    dialog.addEventHandler(Office.EventType.DialogMessageReceived, receiveMessage);
});
```


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
The ""Reconnect"" button sends an event called ""oAuthNeeded"" that the event handler is listening for. However, because of the 5001 error, as described above, the event listener is never bound to the dialog object, since the dialog object never gets passed into the callback.

![oauth reconnect dialog_brushed](https://user-images.githubusercontent.com/6416887/60551519-bdaba800-9ce8-11e9-863a-829a7032a6e8.png)



I was doing dev work on this particular feature early last week, and it was working. When I went to work on it yesterday, however, the callback started producing a `5001` error, and events were no longer being received. No new dependencies have been added, and no existing dependencies have been updated since it was last working.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Web Browser
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Web
* Operating System: MacOS Mojave (10.14.4) and Windows 10
* Browser (if using Office Online): Chrome, Firefox, and Internet Explorer (haven't tested Safari yet)

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [x] Console errors
- [x] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/589,[Outlook] Add-ins are not added to the ribbon when the first custom add-in is unreachable,"When multiple custom add-ins are added to Outlook, Outlook will only show the the Buttons that are defined in `<ExtensionPoint xsi:type=""MessageReadCommandSurface"">` when the first add-in in the list of custom add-ins is reachable. 

## Expected Behavior
Each add-in is queried separately by Outlook when it tries to determine if it should load the ribbon buttons that are defined in the add-in manifests, instead of taking the availability of the first add-in as leading for all add-ins.

## Current Behavior
When add-ins have buttons defined in its manifest.xml that are supposed to show in the ribbon, it will only show the buttons when the first add-in that is listed under 'Custom add-ins' in the Add-ins dialog is available.

## Steps to Reproduce, or Live Example
  1. Follow the instructions of https://github.com/OfficeDev/outlook-dev-docs/blob/master/docs/add-ins/manifests.md  to create 2 add-in manifest XML files. Make sure that both manifest XML files have a unique ID. Both manifest XML files should add a single Button to the ribbon under `<ExtensionPoint xsi:type=""MessageReadCommandSurface"">`. Let the `<Action xsi:type=""ShowTaskpane"">` SourceLocation of the first manifest file's Button point to a non-existing URL and the SourceLocation of the second manifest to an existing URL.
  1. Go to `Get Add-ins` > `My add-ins` > `Custom add-ins` 
  2. Make sure that the list of custom add-ins is empty.
  3. Add the manifest XML with the **non-existing** SourceLocation URL first.
  4. Add the manifest XML with the **existing** SourceLocation URL second.
  5. Restart Outlook and verify that the Buttons of both add-ins are not added to the ribbon.
  6. Remove the add-in with the non-existing SourceLocation URL, and verify that now the Button of the manifest XML with the exisiting SourceLocation URL is added to the ribbon.

## Context
My add-ins stopped showing in the ribbon because the first add-in in my Custom add-ins list was only available when connected to a VPN, and as such, I could only use my other add-ins when I was connected to said VPN.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop Windows 10 - 1903
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 1152.18.1903.0
* Operating System: Windows 10 - Build 1903
* Browser (if using Office Online): n/a

## Example manifest
Please make sure that ADDIN_URL is replaced with an existing URL and that all URL's resolve to existing locations. Replace the value in the <Id> tag for a valid UUID. 
In order to create a manifest with a non-existing URL, only the URL in `<bt:Url id=""messageReadTaskPaneUrl"" DefaultValue=""https://ADDIN_URL""/>` has to be replaced with a non-existing location.

```
<?xml version=""1.0"" encoding=""UTF-8""?>
<OfficeApp
        xmlns=""http://schemas.microsoft.com/office/appforoffice/1.1""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:bt=""http://schemas.microsoft.com/office/officeappbasictypes/1.0""
        xmlns:mailappor=""http://schemas.microsoft.com/office/mailappversionoverrides""
        xsi:type=""MailApp"">

    <!-- Begin Basic Settings: Add-in metadata, used for all versions of Office unless override provided. -->

    <!-- IMPORTANT! Id must be unique for your add-in, if you reuse this manifest ensure that you change this id to a new GUID. -->
    <Id>UUID</Id>

    <!--Version. Updates from the store only get triggered if there is a version change. -->
    <Version>1.0.0.0</Version>
    <ProviderName>Contoso</ProviderName>
    <DefaultLocale>en-US</DefaultLocale>
    <!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. -->
    <DisplayName DefaultValue=""Manifest test"" />
    <Description DefaultValue=""Manifest test""/>

    <!-- Icon for your add-in. Used on installation screens and the add-ins dialog. -->
    <IconUrl DefaultValue=""https://ADDIN_URL/assets/icon-32.png"" />
    <HighResolutionIconUrl DefaultValue=""https://ADDIN_URL/assets/hi-res-icon.png""/>

    <!--If you plan to submit this add-in to the Office Store, uncomment the SupportUrl element below-->
    <SupportUrl DefaultValue=""https://microsoft.com"" />

    <!-- Domains that will be allowed when navigating. For example, if you use ShowTaskpane and then have an href link, navigation will only be allowed if the domain is on this list. -->
    <AppDomains>
        <AppDomain>ADDIN_URL</AppDomain>
    </AppDomains>
    <!--End Basic Settings. -->

    <Hosts>
        <Host Name=""Mailbox"" />
    </Hosts>
    <Requirements>
        <Sets>
            <Set Name=""Mailbox"" MinVersion=""1.7"" />
        </Sets>
    </Requirements>
    <FormSettings>
        <Form xsi:type=""ItemRead"">
            <DesktopSettings>
                <SourceLocation DefaultValue=""https://ADDIN_URL""/>
                <RequestedHeight>450</RequestedHeight>
            </DesktopSettings>
        </Form>
    </FormSettings>

    <Permissions>ReadWriteMailbox</Permissions>
    <Rule xsi:type=""RuleCollection"" Mode=""Or"">
        <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Read"" />
    </Rule>
    <DisableEntityHighlighting>false</DisableEntityHighlighting>

    <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
        <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
            <Requirements>
                <bt:Sets DefaultMinVersion=""1.7"">
                    <bt:Set Name=""Mailbox"" />
                </bt:Sets>
            </Requirements>
            <Hosts>
                <Host xsi:type=""MailHost"">

                    <DesktopFormFactor>
                        <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
                        <FunctionFile resid=""functionFile"" />

                        <!-- Message Read -->
                        <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
                            <!-- Use the default tab of the ExtensionPoint or create your own with <CustomTab id=""myTab""> -->
                            <OfficeTab id=""TabDefault"">
                                <!-- Up to 6 Groups added per Tab -->
                                <Group id=""msgReadGroup"">
                                    <Label resid=""groupLabel"" />
                                    <!-- Launch the add-in : task pane button -->
                                    <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                                        <Label resid=""paneReadButtonLabel"" />
                                        <Supertip>
                                            <Title resid=""paneReadSuperTipTitle"" />
                                            <Description resid=""paneReadSuperTipDescription"" />
                                        </Supertip>
                                        <Icon>
                                            <bt:Image size=""16"" resid=""icon16"" />
                                            <bt:Image size=""32"" resid=""icon32"" />
                                            <bt:Image size=""80"" resid=""icon80"" />
                                        </Icon>
                                        <Action xsi:type=""ShowTaskpane"">
                                            <SourceLocation resid=""messageReadTaskPaneUrl"" />
                                            <SupportsPinning>true</SupportsPinning>
                                        </Action>
                                    </Control>
                                    <!-- Go to http://aka.ms/ButtonCommands to learn how to add more Controls: ExecuteFunction and Menu -->
                                </Group>
                            </OfficeTab>
                        </ExtensionPoint>

                        <!-- Go to http://aka.ms/ExtensionPointsCommands to learn how to add more Extension Points: MessageRead, AppointmentOrganizer, AppointmentAttendee -->
                    </DesktopFormFactor>
                </Host>
            </Hosts>

            <Resources>
                <bt:Images>
                    <bt:Image id=""icon16"" DefaultValue=""https://ADDIN_URL/assets/icon-16.png""/>
                    <bt:Image id=""icon32"" DefaultValue=""https://ADDIN_URL/assets/icon-32.png""/>
                    <bt:Image id=""icon80"" DefaultValue=""https://ADDIN_URL/assets/icon-80.png""/>
                </bt:Images>
                <bt:Urls>
                    <bt:Url id=""functionFile"" DefaultValue=""https://ADDIN_URL/function-file/function-file.html""/>
                    <bt:Url id=""messageReadTaskPaneUrl"" DefaultValue=""https://ADDIN_URL""/>
                </bt:Urls>
                <bt:ShortStrings>
                    <bt:String id=""groupLabel"" DefaultValue=""Manifest test""/>
                    <bt:String id=""customTabLabel""  DefaultValue=""Manifest test""/>
                    <bt:String id=""paneReadButtonLabel"" DefaultValue=""Manifest test""/>
                    <bt:String id=""paneReadSuperTipTitle"" DefaultValue=""Manifest test""/>
                    <bt:String id=""paneTitle"" DefaultValue=""Manifest test""/>
                </bt:ShortStrings>
                <bt:LongStrings>
                    <bt:String id=""paneReadSuperTipDescription"" DefaultValue=""Manifest test.""/>
                </bt:LongStrings>
            </Resources>
        </VersionOverrides>
    </VersionOverrides>
</OfficeApp>
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/583,“{0} wants to display a new window” when using displayDialogAsync,"Platform: PC desktop
Host: Outlook Online
Office version number: 
Operating System: Windows
Browser: Chrome

I'm using Office.context.ui.displayDialogAsync and when I launch our app in Outlook task pane I get a dialog with the message ""Test wants to display a new window"". The word Test is a ShortString that comes from our Manifest file.

https://imgur.com/a/UBYhVDR

But when I click the Outlook On Send feature I get the same dialog but with the text ""{0} wants to display a new window"". The string doesnt seem to be pulled from the Manifest file that we use.

https://imgur.com/a/aA02gjD



I tried adding a label string to the send hook but it doesnt follow the add-in schema. Why does {0} appear and how can I replace that with a string?

    <ExtensionPoint xsi:type=""Events"">
        <Event Type=""ItemSend"" FunctionExecution=""synchronous"" FunctionName=""sendTest"" />
    </ExtensionPoint>



This is the string that I use and is shown on the dialog when I dont click send

    <bt:ShortStrings>
        <bt:String id=""buttonLabel"" DefaultValue=""Test""/>
    </bt:ShortStrings>



Complete Manifest file



    <?xml version=""1.0"" encoding=""UTF-8""?>
    <OfficeApp
          xmlns=""http://schemas.microsoft.com/office/appforoffice/1.1""
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
          xmlns:bt=""http://schemas.microsoft.com/office/officeappbasictypes/1.0""
          xmlns:mailappor=""http://schemas.microsoft.com/office/mailappversionoverrides/1.0""
          xsi:type=""MailApp"">
      <Id>1111111</Id>
      <Version>1.0.0.0</Version>
      <ProviderName>Sample</ProviderName>
      <DefaultLocale>en-US</DefaultLocale>
      <!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. -->
      <DisplayName DefaultValue=""myApp"" />
      <Description DefaultValue=""some text""/>
      <IconUrl DefaultValue=""img"" />
      <HighResolutionIconUrl DefaultValue=""img"" />
      <SupportUrl DefaultValue=""url"" />
      <AppDomains>
        <AppDomain>url</AppDomain>
        <AppDomain>url</AppDomain>
      </AppDomains>
      <Hosts>
        <Host Name=""Mailbox"" />
      </Hosts>
      <Requirements>
        <Sets>
          <Set Name=""Mailbox"" MinVersion=""1.1"" />
        </Sets>
      </Requirements>
      <FormSettings>
        <Form xsi:type=""ItemRead"">
          <DesktopSettings>
            <SourceLocation DefaultValue=""img""/>
            <RequestedHeight>60</RequestedHeight>
          </DesktopSettings>
          <TabletSettings>
            <SourceLocation DefaultValue=""img"" />
            <RequestedHeight>60</RequestedHeight>
          </TabletSettings>
        </Form>
        <Form xsi:type=""ItemEdit"">
          <DesktopSettings>
            <SourceLocation DefaultValue=""img"" />
          </DesktopSettings>
          <TabletSettings>
            <SourceLocation DefaultValue=""img"" />
          </TabletSettings>
        </Form>
      </FormSettings>
      <Permissions>ReadWriteMailbox</Permissions>
      <Rule xsi:type=""RuleCollection"" Mode=""And"">
        <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""ReadOrEdit""  />
        <Rule xsi:type=""ItemHasAttachment"" />
      </Rule>
      <DisableEntityHighlighting>false</DisableEntityHighlighting>

      <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
        <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
          <Description resid=""green"" />
          <Requirements>
            <bt:Sets DefaultMinVersion=""1.3"">
              <bt:Set Name=""Mailbox"" />
            </bt:Sets>
          </Requirements>
          <Hosts>
            <Host xsi:type=""MailHost"">

              <DesktopFormFactor>
                <FunctionFile resid=""residUILessFunctionFileUrl"" />
          	    <ExtensionPoint xsi:type=""Events"">
							    <Event Type=""ItemSend"" FunctionExecution=""synchronous"" FunctionName=""initOnSend"" />
						    </ExtensionPoint>
                <!-- Defines Taskpane in Read mode -->
                <ExtensionPoint xsi:type=""MessageReadCommandSurface"">
                  <OfficeTab id=""TabDefault"">
                    <Group id=""msgReadGroup"">
                      <Label resid=""black"" />
                      <Control xsi:type=""Button"" id=""msgReadOpenPaneButton"">
                        <Label resid=""blue"" />
                        <Supertip>
                          <Title resid=""yellow"" />
                          <Description resid=""red"" />
                        </Supertip>
                        <Icon>
                          <bt:Image size=""16"" resid=""icon-16"" />
                          <bt:Image size=""32"" resid=""icon-32"" />
                          <bt:Image size=""80"" resid=""icon-80"" />
                        </Icon>
                        <Action xsi:type=""ShowTaskpane"">
                          <SourceLocation resid=""readTaskPaneUrl"" />
                          <SupportsPinning>true</SupportsPinning>
                        </Action>
                      </Control>
                    </Group>
                  </OfficeTab>
                </ExtensionPoint>
                <ExtensionPoint xsi:type=""MessageComposeCommandSurface"">
                  <OfficeTab id=""TabDefault"">
                
                    <Group id=""msgComposeGroup"">
                      <Label resid=""black"" />
                      <Control xsi:type=""Button"" id=""msgComposeOpenPaneButton"">
                        <Label resid=""blue"" />
                        <Supertip>
                          <Title resid=""yellow"" />
                          <Description resid=""red"" />
                        </Supertip>
                        <Icon>
                          <bt:Image size=""16"" resid=""icon-16"" />
                          <bt:Image size=""32"" resid=""icon-32"" />
                          <bt:Image size=""80"" resid=""icon-80"" />
                        </Icon>
                        <Action xsi:type=""ShowTaskpane"">
                          <SourceLocation resid=""composeTaskPaneUrl"" />
                          <SupportsPinning>true</SupportsPinning>
                        </Action>
                      </Control>
                    </Group>
                
                  </OfficeTab>
                </ExtensionPoint>
              </DesktopFormFactor>
            </Host>
          </Hosts>

          <Resources>
            <bt:Images>
              <bt:Image id=""icon-16"" DefaultValue=""img""/>
              <bt:Image id=""icon-32"" DefaultValue=""img""/>
              <bt:Image id=""icon-80"" DefaultValue=""img""/>
            </bt:Images>
            <bt:Urls>
              <bt:Url id=""composeTaskPaneUrl"" DefaultValue=""img""/>
              <bt:Url id=""readTaskPaneUrl"" DefaultValue=""img""/>
              <bt:Url id=""residUILessFunctionFileUrl"" DefaultValue=""img"" />
            </bt:Urls>
            <bt:ShortStrings>
              <bt:String id=""black"" DefaultValue=""sample""/>
              <bt:String id=""blue"" DefaultValue=""Test""/>
              <bt:String id=""yellow"" DefaultValue=""sample""/>
            </bt:ShortStrings>
            <bt:LongStrings>
              <bt:String id=""red"" DefaultValue=""some text""/>
              <bt:String id=""green"" DefaultValue=""some text""/>
            </bt:LongStrings>
          </Resources>
        </VersionOverrides>
      </VersionOverrides>
    </OfficeApp>

"
https://api.github.com/repos/OfficeDev/office-js/issues/577,Issue with reading a mail's from email address in outlook add-in,"We are unable to fetch the user's `from` address inside their Sent Items folder using the OfficeJs mailbox API.
According to the [documentation](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/office.context.mailbox.item#from-emailaddressdetails), the `from` email can be read using the following line of code:

```
window.Office.context.mailbox.item.from.emailAddress
```
 
## Expected Behavior
The from email address should be returned by the OfficeJS API.

## Current Behavior
An empty string is returned.

## Steps to Reproduce
Clients tested: 
1. Windows Outlook Desktop 2016, Version: 16.0.4266.1001
2. Windows Outlook Desktop 2013, Version: 15.0.5137.1000
3. Windows Outlook Desktop 2016, Version: 16.0.11629.20246 (Works OK)

Steps: 
- Compose and send a mail
- Navigate to the sent items folder
- Open add-in and execute the following code snippet: 
```
window.Office.context.mailbox.item.from.emailAddress
```

## Context
We have an add-in which can be used to sync emails from Outlook to a third party platform. We fetch the sender and recipients of the mail, it's subject and body, run a few business requirement related operations on it and then sync it to the third party platform. 

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: PC desktop
* Host: MS Outlook
* Office version number: 16.0.4266.1001, 15.0.5137.1000, and 16.0.11629.20246
* Operating System: Windows
* Browser (if using Office Online): IE 11 (Works)

## Useful logs
Please refer to the screenshot below taken from within the add-in:

<img width=""493"" alt=""Screen Shot 2019-06-26 at 12 53 19 PM"" src=""https://user-images.githubusercontent.com/40160613/60169026-88ecac00-9823-11e9-9eb5-0e16b3c1b119.png"">

"
https://api.github.com/repos/OfficeDev/office-js/issues/565,Custom Icon isn't shown with informational messages,"`Office.context.mailbox.item.notificationMessages.addAsync` doesn't show custom icon.
- The informational message is created with custom icon in Windows Outlook client only. 
- In Mac and in Outlook Online (Chrome) they are created with default icon.
- When passing between emails with opened add-on panel in Windows Outlook Client the icon is changed from custom to default.

## Expected Behavior
See custom icon

## Current Behavior
Custom icon is not seen, only default outlook informational icon.

## Steps to Reproduce, or Live Example
```js
Office.context.mailbox.item.notificationMessages.addAsync(""info"", {
   type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,
   message: ""message"",
   icon: ""icon16"",
   persistent: true
});
```

Relevant manifest sections:
```
<VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides"" xsi:type=""VersionOverridesV1_0"">
    <Resources>
        <bt:Images>
            <bt:Image id=""icon16"" DefaultValue=""https://oaddin.trustifi.com/images/logo_v2/Trustifi_LogoEnvelope_v2-16x16.png""/>
        </bt:Images>
    </Resources>
    <VersionOverrides xmlns=""http://schemas.microsoft.com/office/mailappversionoverrides/1.1"" xsi:type=""VersionOverridesV1_1"">
        <Resources>
            <bt:Images>
                <bt:Image id=""icon16"" DefaultValue=""https://oaddin.trustifi.com/images/logo_v2/Trustifi_LogoEnvelope_v2-16x16.png""/>
            </bt:Images>
        </Resources>
    </VersionOverrides>
</VersionOverrides>
```

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac, Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: {mac:""16.00"",web:""16.01"",win32:""16.02""}
* Operating System: Windows, Mac
* Browser (if using Office Online): Chrome 74"
https://api.github.com/repos/OfficeDev/office-js/issues/543,Create Invite Programmatically with base64 encrypted string fils to SEND,"I am developing an Outlook addin. This addin helps in pre-populating pre-defined invitation template wth some meeting URL, now we changed tis URL to base64 encrypted string like -

http://www.myurl.com/NTA1MDo4OTg5QGNvbnhtZS5uZXQ=/Kanak

## Expected Behavior
I should be able to SEND the invite with this invitation text from OWA and Windows and Mac clients both.

## Current Behavior
MAC Client - Sends the invite fine.
Windows client - Sends the invite well.
OWA - After clicking SEND button - Spinner starts showing and mail is never sent. When I INSPECT the OWA, there are lots of errors in console.
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
1. Side load the app via https://urlzs.com/iJmtA
2. Go to Plugin Icon - Open and fill Settings - some dummy info.
3. When Save - it encrypts the URL.
4. Now, Schedule Meeting from Plugin will Open Meeting with pre-populated URL from #3.
5. Click on Send. Observe mail not being sent and errors in Console.

* Additional details: Screenshot

![Screen Shot 2019-06-04 at 12 26 47 AM](https://user-images.githubusercontent.com/6097596/58827065-c2d0f500-865f-11e9-9eee-270b56f5111d.png)


## Context
Mail-Select any EMail-Click on AddIn-Schedule Meeting

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform  : OWA
* Host : Outlook
* Office version number: 16.22 (190211)
* Operating System: Windows and Mac both
* Browser (if using Office Online): Chrome

## Useful logs: Console logs
Failed to load resource: the server responded with a status of 404 ()
browser.pipe.aria.microsoft.com/Collector/3.0/?qsp=true&content-type=application%2Fbond-compact-binary&client-id=NO_AUTH&sdk-version=AWT-Web-JS-1.8.1&x-apikey=a387cfcf60114a43a7699f9fbb49289e-9bceb9fe-1c06-460f-96c5-6a0b247358bc-7238&client-time-epoch-millis=1559581795668&time-delta-to-apply-millis=142:1 Failed to load resource: the server responded with a status of 403 (All records were throttled.)
lpcres.delve.office.com/lpc/versionless/livepersonacard_with-react_2b4871b5d9817cc223c6.js:16 Some icons were re-registered. Applications should only call registerIcons for any given icon once. Redefining what an icon is may have unintended consequences. Duplicates include: 
GlobalNavButton, ChevronDown, ChevronUp, Edit, Add, Cancel, More, Settings, Mail, Filter (+ 297 more)
r @ lpcres.delve.office.com/lpc/versionless/livepersonacard_with-react_2b4871b5d9817cc223c6.js:16
/owa/service.svc?action=CreateCalendarEvent&n=47&app=Calendar:1 Failed to load resource: the server responded with a status of 500 ()
2ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:87 Uncaught (in promise) Error: CreateCalendarEvent failed: Microsoft.Exchange.Clients.Owa2.Server.Core.OwaSerializationException
    at a (ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:87)
    at ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:87
    at Object.t.default (ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:87)
    at ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:72
    at ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:104
    at ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:72
    at i (ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:72)
    at t.promiseMiddleware (ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:72)
    at ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:72
    at t.stitch (ow2.res.office365.com/owamail/2019052703.04/scripts/owa.calendardeeplink.js:104)
/ows/v1.0/FloodGateSurvey/SurveyActivationStats?n=50&cv=AxC42WxqBT47WgaQKD24KN.50:1 Failed to load resource: the server responded with a status of 404 ()
browser.pipe.aria.microsoft.com/Collector/3.0/?qsp=true&content-type=application%2Fbond-compact-binary&client-id=NO_AUTH&sdk-version=AWT-Web-JS-1.8.0&x-apikey=a387cfcf60114a43a7699f9fbb49289e-9bceb9fe-1c06-460f-96c5-6a0b247358bc-7238&client-time-epoch-millis=1559581898835&time-delta-to-apply-millis=17:1 Failed to load resource: the server responded with a status of 403 (All records were throttled.)
browser.pipe.aria.microsoft.com/Collector/3.0/?qsp=true&content-type=application%2Fbond-compact-binary&client-id=NO_AUTH&sdk-version=AWT-Web-JS-1.8.0&x-apikey=a387cfcf60114a43a7699f9fbb49289e-9bceb9fe-1c06-460f-96c5-6a0b247358bc-7238&client-time-epoch-millis=1559581898736&time-delta-to-apply-millis=12:1 Failed to load resource: the server responded with a status of 403 (All records were throttled.)
browser.pipe.aria.microsoft.com/Collector/3.0/?qsp=true&content-type=application%2Fbond-compact-binary&client-id=NO_AUTH&sdk-version=AWT-Web-JS-1.8.1&x-apikey=a387cfcf60114a43a7699f9fbb49289e-9bceb9fe-1c06-460f-96c5-6a0b247358bc-7238&client-time-epoch-millis=1559582035670&time-delta-to-apply-millis=142:1 Failed to load resource: the server responded with a status of 403 (All records were throttled.)
"
https://api.github.com/repos/OfficeDev/office-js/issues/541,Office.context.diagnostics missing in Windows Outlook 2016 MSI,"<!--- Provide a general summary of the issue in the Title above -->
`Office.context` has several missing fields in the most recent version of Windows Outlook 2016 MSI than it does in the most recent version Windows Outlook 2016 click-to-run. This is not reflected in the [documentation](https://docs.microsoft.com/en-us/javascript/api/office/office.context?view=office-js) for the `Context` interface

## Expected Behavior
<!--- Tell us what you expected to happen -->
In Windows Outlook for Office 365 MSO (click to run), v16.0.11629.20192, `window.Office.context` has to following shape:
```
{
  auth: {...},
  commerceAllowed: 1,
  contentLanguage: ""en-US"",
  diagnostics: {...},
  displayLanguage: ""en-US"",
  host: ""Outlook"",
  isDialog: false,
  license: {...},
  mailbox: {...},
  officeTheme: {...},
  platform: ""PC"",
  requirements: {...},
  roamingSettings: {...},
  touchEnabled: 0,
  ui: {...},
}
```
I would expect the most recent version of Windows Outlook 2016 MSI to have the same shape (minus `auth`, which does not exist in requirement set 1.4)

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
We have a customer with Windows Outlook 2016 MSI, v16.0.4834.1000 (which is the [most recent patch](https://support.microsoft.com/en-us/help/4464502/april-2-2019-update-for-outlook-2016-kb4464502)), connected to an O365 account. Their `window.Office.context` has the following shape:
```
{
  commerceAllowed: undefined,
  contentLanguage: ""en-US"",
  displayLanguage: ""en-US"",
  license: {...},
  mailbox: {...},
  requirements: {...},
  roamingSettings: {...},
  ui: {...},
}
```
Notice how `auth`, `diagnostics`, `host`, `isDialog`, `officeTheme`, `platform`, and `touchEnabled` are missing.

I would expect `auth` to be missing since that is a Preview feature, and according to the documentation, Windows Outlook 2016 for one-time purchase [should support up to Requirement Set 1.4](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets#clients).

However, `officeTheme` should be present since it was [added in Requirement Set 1.3](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/outlook-requirement-set-1.3?view=office-js).

Most importantly, we cannot find anywhere in the documentation that would suggest that `diagnostics`, `host`, `platform`, and `touchEnabled` are not available in all requirement sets.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Our plugin is not working for one of our customers because our code assumes that, after waiting for `window.Office.initialize` to be called, `window.Office.context.diagnostics` should be defined. Our code crashes when it tries to access the `host` and `platform` on an undefined object.

We were surprised to find this value missing since the documentation doesn't indicate that it was added in a particular requirement set. Is this a bug, or is this expected behavior? We can work around this particular issue, but we're now worried that we may make assumptions in the future about other fields in the OfficeJS object, without knowing that they may be missing in certain versions of Outlook.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.4834.1000
* Operating System: unknown
* Browser (if using Office Online): N/A
"
https://api.github.com/repos/OfficeDev/office-js/issues/535,Multiple locations not working Outlook OfficeOnline 16.0.10205.1000,"<!--- Provide a general summary of the issue in the Title above -->
Adding multiple locations in an new calendar Event with setAsync cause different behaviours in Outlook OfficeOnline (new OWA works fine, old OWA is the problem).

## Expected Behavior
When I add a string like ""room1; room2"" using Outlook OfficeOnline **16.0.10908.1000** (new OWA), the Outlook displays each room separated. All right here!

## Current Behavior
The same code using Outlook OfficeOnline **16.0.10205.1000** (old OWA) the Outlook displays a single room with the string ""room1; room2"".

## Steps to Reproduce, or Live Example
Office.context.mailbox.item.location.setAsync(""room1; room2"");

## Context
I have an add-in working fine but our customers think that this issue is ours. I have no idea to solve it.

## Your Environment
All browsers.

## Useful logs
No logs.
"
https://api.github.com/repos/OfficeDev/office-js/issues/515,[Outlook] EWS REST API calls fail randomly,"We recently switched to performing loadAsyncProperties[1] and saveAsync[2] operations using the REST API and we have encountered the following behaviour:
1. The restUrl is empty the first time the mail is opened (happens randomly)
2. The following errors are returned by the EWS REST endpoint sporadically:

```json
{
    ""error"": {
        ""code"": ""ErrorAccessDenied"",
        ""message"": ""The api you are trying to access does not support item scoped OAuth.""
    }
}
```

```json
{
    ""error"": {
        ""code"": ""ErrorAccessDenied"",
        ""message"": ""Access is denied. Check credentials and try again.""
    }
}
```

```json
{
    ""error"": {
        ""code"": ""ErrorItemNotFound"",
        ""message"": ""The specified object was not found in the store., The process failed to get the correct properties.""
    }
}
```

When the same operation is performed again the expected response is returned.

3. The getCallbackTokenAsync will randomly return null

## Expected Behavior
1. The restUrl should be present
2. The errors should be returned consistently or not occur at all


## Steps to Reproduce, or Live Example
1. Obtain the REST URL by calling restUrl property
2. Obtain the REST token by calling getCallbackTokenAsync
3. Use the following request to retrieve custom properties
```
GET https://outlook.office365.com/api/v2.0/me/messages('<message>')?$expand=SingleValueExtendedProperties($filter=PropertyId eq 'String {00020329-0000-0000-C000-000000000046} Name <>')

```

## Context
We are failing to retrieve custom properties.

## Your Environment

* Platform [PC desktop, Mac, iOS, Office Online]: Windows, Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2016
* Operating System: Windows 10, Mac High Sierra


## Reference
[1] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item?view=office-js#loadcustompropertiesasynccallback-usercontext
[2] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item?view=office-js#saveasyncoptions-callback
[3] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox?view=office-js#resturl-string"
https://api.github.com/repos/OfficeDev/office-js/issues/510,SSL certificate required for Outlook add-in development not working for Chrome and Firefox,"HI
I am developing Outlook Web add-in using Office.js
As required, I have generated SSL certificate for my developing stage.But that SSL certificate is not working for Chome and Firefox.

## Expected Behavior
SSL also working for Chrome and Firefox

## Current Behavior
SSL only working for Edge, IE, not for Chome and Firefox

## Steps to Reproduce, or Live Example
Please sideload Microsoft add-in using following link-
https://mop.infocus.net:5000/infocus-conx-outlook-addin.xml

As this is server URL. Inspite that, its not working.

Please suggest some solution.
"
https://api.github.com/repos/OfficeDev/office-js/issues/504,Get Permissions from Outlook Add-in from Javascript,"Get Permissions from Outlook Add-in from Javascript.

I would like to enable / disable features based on the permissions the add-in has.
Is it possible to detect the Permissions set in the manifest.xml file installed in outlook?

The idea is to distribute multiple Manifest with different Permissions and enable / disable features based on the permissions set.

Greetings and thanks for your help.
"
https://api.github.com/repos/OfficeDev/office-js/issues/502,Outlook add-in using npm installed office-js library does not work if internet is blocked,"## Expected Behavior
Outlook add-in accessing npm installed office-js library should work if internet is blocked

## Current Behavior
Office-js library gives error when add-in is loaded.
![outlook-15 04](https://user-images.githubusercontent.com/50199962/57070463-22e91a00-6cf5-11e9-907b-215b734b3d16.png)
![o15apptofilemappingtable](https://user-images.githubusercontent.com/50199962/57070473-2b415500-6cf5-11e9-95b0-9d77fb3e27c7.png)



## Steps to Reproduce, or Live Example
Client is using outlook add-in which uses office-js library for locale de_CH. Internet is blocked is workstation. On loading add-in it gives error as attached above.

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
If internet is enabled and library is accessed from CDN then this add-in works fine.

## Context
This add-in is for both online and offline clients and this issue makes it useless for offline clients.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC running Windows 10
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office 2016
* Operating System: Windows 10
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- Screenshots are attached with description."
https://api.github.com/repos/OfficeDev/office-js/issues/501,Roaming Settings are not updated synchronously for Outlook web add-in for OWA ,"Hi
I am working for Outlook web add-in using Office.js. The add-in is for Windows and Mac client and OWA. I have designed a setting UI for saving user data using Roaming Setting. The user data is saved in roaming settings and updated into UI immediately for Windows and Mac client. But for OWA, the updated settings are not saved into roaming settings and thus, not updated into UI. 

If I have changed settings data from window and mac client, updated settings not seen at OWA.

## Expected Behavior
Roaming settings should be synchronous to all plateform. Roaming settings should be updated instantly at OWA too.

## Current Behavior
Roaming settings for OWA are not updated instantly and not synchronous with window and mac client too.

## Steps to Reproduce, or Live Example
Link to live example:
Please add the add-in into your Outlook for Mac by side loading - Get AddIns - My AddIn - Add from URL
https://mop.infocus.net:5000/infocus-conx-outlook-addin.xml

## Context
There is an inconsistent behaviour between all the Outlook platforms for our add-in. On Windows and Mac client, roaming setting is synchronous but not for OWA.

## Your Environment
Platform: OWA
Host: Outlook
"
https://api.github.com/repos/OfficeDev/office-js/issues/500,Unable to access Office.context.mailbox.userProfile with Outlook 2016 on Windows 10 and Exchange 2013 server (on-premises),"<!--- Provide a general summary of the issue in the Title above -->
I'm working on writing an add-in compatible with Outlook 2016 Windows desktop client (build 16.0.9126.2315 32-bit) connected to Exchange 2013 on-premises from Outlook with requirement set 1.1, but I can't access the Office.context.mailbox.userProfile object.
## Expected Behavior
<!--- Tell us what you expected to happen -->
In the `Office.initialize` function of the add-in, I expect that I can read the value of `Office.context.mailbox.userProfile.emailAddress` or any other property of the user profile.
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
I surround the call to `Office.context.mailbox.userProfile.emailAddress` inside of a try-catch, and write the error to the document in the catch statement. I receive the following error when trying to read the value:
```
Unable to get property 'DDA' of undefined or null reference
 at OSF.DDA.OutlookAppOm.prototype._getUserProfile$p$0 (https://appsforoffice.microsoft.com/lib/1.1/hosted/outlook-win32-16.02.debug.js:8804:13)
at Anonymous function (https://ajax.aspnetcdn.com/ajax/3.5/MicrosoftAjax.js:5:298)
at MyAddinFunction (eval code:228:13)
at Office.initialize (eval code:89:9)
at Anonymous function (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:1645:41)
at validateFunction (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:278:21)
at LoadScriptHelper.prototype.waitForFunction (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:290:13)
at appReady (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:1641:25)
at OSF.DDA.OutlookAppOm.prototype._callAppReadyCallback$p$0 (https://appsforoffice.microsoft.com/lib/1.1/hosted/outlook-win32-16.02.debug.js:8771:13)
at Anonymous function (https://ajax.aspnetcdn.com/ajax/3.5/MicrosoftAjax.js:5:298) 
```
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ScriptLab does not support Outlook

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
My goal is to get the itemId, an EWS token, and the email address of the desktop client user so that another service can use the EWS token to make a request for the raw MIME content. I need access to the message body completely unaltered.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop, Outlook Desktop (build 16.0.9126.2315 32-bit) 
* Host [Excel, Word, PowerPoint, etc.]: Exchange 2013 on-premises (Build 1395.4)
* Office version number: Version 1803 (Build 9126.2315 Click-to-run)
* Operating System: Win 10
* Browser (if using Office Online): ______

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [x] Console errors
**Error from user profile retrieval attempt**
```
Unable to get property 'DDA' of undefined or null reference
 at OSF.DDA.OutlookAppOm.prototype._getUserProfile$p$0 (https://appsforoffice.microsoft.com/lib/1.1/hosted/outlook-win32-16.02.debug.js:8804:13)
at Anonymous function (https://ajax.aspnetcdn.com/ajax/3.5/MicrosoftAjax.js:5:298)
at MyAddinFunction (eval code:228:13)
at Office.initialize (eval code:89:9)
at Anonymous function (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:1645:41)
at validateFunction (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:278:21)
at LoadScriptHelper.prototype.waitForFunction (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:290:13)
at appReady (https://appsforoffice.microsoft.com/lib/1.1/hosted/office.debug.js:1641:25)
at OSF.DDA.OutlookAppOm.prototype._callAppReadyCallback$p$0 (https://appsforoffice.microsoft.com/lib/1.1/hosted/outlook-win32-16.02.debug.js:8771:13)
at Anonymous function (https://ajax.aspnetcdn.com/ajax/3.5/MicrosoftAjax.js:5:298) 
```
**Failing code**
```js
import 'promise-polyfill/src/polyfill';

(function () {
    'use strict';

    Office.initialize = function (reason) {
        const messageId = Office.context.mailbox.item.itemId; // This is set
        const email = Office.context.mailbox.userProfile.emailAddress; // userProfile is undefined
        
        document.writeln('Success'); // This line is never printed
    };
})();
```
**manifest.xml**
https://gist.github.com/celowsky/bdc4a8825f4c927618c542cba6d4f8d1
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/497,"Outlook plugin reminder time is set to ""none"" in Outlook 365","I have set the Reminder on Outlook 2016 for Mac Preferences -> Calendar -> Default Reminder (say 15 minutes). In my add-in when I click on a button to open new appointment window using Office.context.mailbox.displayNewAppointmentForm method, the reminder should be shown as 15 minutes. This is working as expected for Outlook for Windows and OWA. Its should also work the same in Mac Outlook 2016."
https://api.github.com/repos/OfficeDev/office-js/issues/493,[Outlook][Add-in Approval Process] Add-In fails to install after MS approved the last manifest change,"I am posting here since this question does not seem like a valid SO question. 

Approximately two week ago we had submitted a new manifest adding pinning support to the MS store approval process. This manifest was subsequently validated and we received a mail saying that the changes were approved. We were notified that it may take a few days for these changes to propagate to our user base. However we have run into two problems:

1. A few users have been asked to install the add-in again (as expected), but the installation fails with an error saying ""Something went wrong. The app could not be downloaded""
2. Most of our users have not received this notification at all

The manifest works fine when loaded via URL or file.

Who should we contact? The support link in the app dashboard does not work."
https://api.github.com/repos/OfficeDev/office-js/issues/492,Office.js has not fully loaded when network is fast and cache is clean.,"I am developing Outlook web add-in. I am using Office.js. I have developed custom UI to save some settings for scheduling meeting. I have designed add-in command say ""Settings"".When I clicked on it shows me this statement while debugging on Vorlon-->
Office.js has not fully loaded. Your app must call ""Office.onReady()"" as part of it's loading sequence (or set the ""Office.initialize"" function). If your app has this functionality, try reloading this page.

## Expected Behavior
Outlook web add-in should open Setting UI.

## Current Behavior
It shows loading icon and in vorlon debugging ,it shows 

Office.js has not fully loaded. Your app must call ""Office.onReady()"" as part of it's loading sequence (or set the ""Office.initialize"" function). If your app has this functionality, try reloading this page.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook client for MAC,windows and OWA
* Host [Excel, Word, PowerPoint, etc.]: Outlook


Please suggest solution."
https://api.github.com/repos/OfficeDev/office-js/issues/490,How to set the UTC corrected Date for inputing into function displayNewAppointmentForm() for Outlook add-in,"I am developing Outlook Web Add-in. I have used displayNewAppointmentForm() to create appintment programtically.  I have used this code--
` var start = new Date();
  var end = new Date();
  end.setHours(start.getHours() + 1);
Office.context.mailbox.displayNewAppointmentForm(
{
 start:start,
end:end
});`

this create time zone issue while scheduling appointment with overseas persons.

I have searched for this issue, found that start and end time should be UTC corrected.
For that, I have used this code
` var start = new Date();
  var end = new Date();
  end.setHours(start.getHours() + 1);
  var UTCCorrectStartDate = start.toUTCString()
  var UTCCorrectEndDate = end.toUTCString()
Office.context.mailbox.displayNewAppointmentForm(
{
 start:start,
end:end
})`


But then, it shows me some errorwhile debugging on Vorlon--
Office.js has not fully loaded. Your app must call ""Office.onReady()"" as part of it's loading sequence (or set the ""Office.initialize"" function). If your app has this functionality, try reloading this page.

Please suggest me the right way to do this.


"
https://api.github.com/repos/OfficeDev/office-js/issues/489,Performance issue for Outlook Add-in,"Hi
I am developing Outlook web add-in. This add-in support multi language support like French,Dutch,German,Spanish etc. As per selected language, the UI content is converted into respective language. Also, Office.context.mailbox.displayNewAppointmentForm() used to create new appointment with saved settings. 

## Expected Behavior
New appointment should open rapidly.


## Your Environment
* Platform-- [PC desktop, Mac, Office Online]

## Useful logs
Office.js has not fully loaded. Your app must call ""Office.onReady()"" as part of it's loading sequence (or set the ""Office.initialize"" function). If your app has this functionality, try reloading this page.


NOTE: I have tried Office.onReady() too. It do not solve the issue.

Looking for help.
"
https://api.github.com/repos/OfficeDev/office-js/issues/486,[Outlook] The mailbox.item.to.getAsync property returns no value when add-in is opened for the first time,"The to addresses list is empty when the following snippet of code is executed the first time
the add-in is loaded in compose mode for a mail item [1]:

```js
  Office.context.mailbox.item.to.getAsync(callback);
```

This behaviour seems to be intermittent.I have not been able to identify any pattern for the conditions which cause this issue.

## Expected Behavior
The to address list should be always populated with addresses entered in the mail item compose form.

## Current Behavior
The to address list is empty during the first invocation intermittently. 

## Steps to Reproduce, or Live Example
1. Open the compose mail item view
2. Enter an email address in the to field
3. Open an Outlook add-in
4. Attempt to fetch to addresses with [1]



## Context
The users are not able to interact with the to addresses within the add-in unless they close
and open the add-in again or manually initiate an action to reload the addresses list.


## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Windows
* Host [Excel, Word, PowerPoint, etc.]: Outlook 2016
* Office version number: 1903 (Build 11425.20228)
* Operating System: Windows 10


## References
[1] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item?view=office-js#compose-mode-7
"
https://api.github.com/repos/OfficeDev/office-js/issues/482,Can't communicate with the app in the displayDialogAsync,"## Expected Behavior
It should be possible to send a message back to the app with `Office.context.ui.messageParent(""test"");` when I open the dialog with `displayDialogAsync` function.

## Current Behavior
There is a console error when the dialog is opened. It looks like the origin for the dialog is set to `outlook.live.com` and so the dialog can't communicate with the origin that opened the dialog in the first place.

## Steps to Reproduce, or Live Example
* Link to live example: https://github.com/mkoczka/outlook-dialog-bug
**This project was generated according to the quick start tutorial in outlook add-in documentation**

* Additional details:
I open the dialog with the code described below. Location origin in this particular case is `https://localhost:3000`
```
  Office.context.ui.displayDialogAsync(
    location.origin + ""/dialog.html"",
    dialog => {
      dialog.addEventHandler(Office.EventType.DialogMessageReceived, a =>
        console.log(""This will not  get called"")
      );
      dialog.addEventHandler(Office.EventType.DialogEventReceived, a =>
        console.log(""This will not  get called"")
      );
    }
  );
```

In the dialog, I call
```
Office.initialize = () => {
  Office.context.ui.messageParent(""test"");
};
```

The result is not propagated back to the application.

## Context
We're trying to do custom authentication in the dialog. This issue prevents us from doing this since we can't communicate between the app and the dialog.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Operating System: Mac OS Mojave 10.14.4
* Browser (if using Office Online): Google Chrome Version 73.0.3683.103 (Official Build) (64-bit)

## Useful logs
![image](https://user-images.githubusercontent.com/5765432/56684187-183edd00-6684-11e9-80a7-4e82f5b2b68e.png)

Error message: `Failed to execute 'postMessage' on 'DOMWindow': The target origin provided ('https://outlook.live.com') does not match the recipient window's origin ('https://localhost:3000').`"
https://api.github.com/repos/OfficeDev/office-js/issues/478,[Outlook] Taskpane closes unexpectedly in OWA,"<!--- Provide a general summary of the issue in the Title above -->
In the ""old"" experience of OWA (the one served when `Try the new Outlook` is toggled off), the taskpane unexpectedly closes itself after varying lengths of time.

## Expected Behavior
<!--- Tell us what you expected to happen -->
I would expect the taskpane to remain open until the user manually closes it with the X button, or until a new mail was selected if the taskpane was not pinned open

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
In compose mode in ""old"" OWA, the taskpane will close on its own after an indeterminate amount of time. Sometimes it closes with 15 seconds of opening it, sometimes it happens after 5 minutes. As far as I can tell, this happens with any add-in (I've reproed with our own add-in as well as several others).

This can also happen while a dialog opened with `displayInFrame: true` is visible (I haven't tested with . When this happens, the page gets into a very bad state. The dialog can no longer send messages to its taskpane via `Office.context.uiu.messageParent`. Trying to close the dialog via the X button spams the console with errors, and the dialog cannot close. When in this state, the page also will not refresh by hitting `cmd + r`. The refresh button in the browser navbar turns to an `X`. Once that is clicked, it reverts back to a refresh button and you can refresh the page.

Note that this bug does not repro in the ""new experience"" of OWA. I have not tested to see if this repros in any other browser besides Chrome.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Repro 1 (no dialog):
  1. With ""Try the new Outlook"" toggled off, start a new mail.
  2. Open a taskpane in any JS add-in.
  3. Do nothing, and wait. Eventually, the taskpane will abruptly close. No errors will show up in the console.

* Repro 2 (with dialog):
1. With ""Try the new Outlook"" toggled off, start a new mail.
2. Open a taskpane for a JS add-in which uses the DialogAPI and `displayInFrame: true`.
3. Open a dialog from the taskpane. The dialog should open in a modal within the same page.
4. Do nothing, and wait. Eventually, the taskpane beneath the dialog modal will abruptly close. The modal dialog will remain open in the foreground. No errors will show up in the console. Note that the dialog is still functional for the most part - it can still render contents, make network requests, etc.
5. Try to close the dialog via the X button in the top right corner. An error will be thrown at `owa.clientNext.application.js:43` (see screenshot below), and the dialog will not close. At this point, the user must refresh the page in order to continue using OWA.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
This is a pretty severe problem for us since our add-in heavily uses the Dialog API. It leads to a less-than-desirable user experience when the page frequently becomes broken while the dialog is open, especially since the user must refresh the page to get back into a good state. Our dialog includes a text editor, so refreshing the page often causes users to lose their work.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.10205.10000
* Operating System: OSX High Sierra (10.13.6)
* Browser (if using Office Online): Chrome (73.0.3683.103)

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
<img width=""466"" alt=""Screen Shot 2019-04-12 at 2 28 14 PM"" src=""https://user-images.githubusercontent.com/21230261/56072714-90d19f80-5d4e-11e9-9a83-4ec56caed1e2.png"">

```
Exception in t(t){var o=e.call(this,t)||this;return o._warnDeprecations({onLayerMounted:""onLayerDidMount""}),o.props.hostId&&(u[o.props.hostId]||(u[o.props.hostId]=[]),u[o.props.hostId].push.componentWillUnmount(): TypeError: Cannot read property 'extension' of null
    at Object.o [as default] (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.extensibility.js:2:16883)
    at e.refCallback (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.extensibility.js:7:15203)
    at r (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:3330)
    at Object.a.detachRefs (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:3783)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19133)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31463)
    at m.unmountChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:1377)
    at m.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17896)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at l (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:50:17548)
    at Object.batchedUpdates (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:27829)
    at Object.i [as batchedUpdates] (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:23:29808)
    at Object.unmountComponentAtNode (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:50:20053)
    at t._removeLayerElement (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:27:17668)
    at t.componentWillUnmount (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:27:16544)
    at t.e.(anonymous function) [as componentWillUnmount] (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:43:7611)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3156)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at d.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:3207)
    at Object.unmountComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19167)
    at Object.updateChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:92:31355)
    at m._reconcilerUpdateChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:114)
    at m._updateChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:879)
    at m.updateChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:94:777)
    at m._updateDOMChildren (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:17393)
    at m.updateComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:15773)
    at m.receiveComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:15326)
    at Object.receiveComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19326)
    at d._updateRenderedComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:6099)
    at d._performComponentUpdate (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:5856)
    at d.updateComponent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:5134)
    at d.performUpdateIfNecessary (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:4461)
    at Object.performUpdateIfNecessary (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:25:19508)
    at s (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:23:30211)
    at n.perform (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:26:16254)
    at r.perform (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:26:16254)
    at r.perform (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:23:31262)
    at Object.k [as flushBatchedUpdates] (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:23:31431)
    at n.closeAll (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:26:16848)
    at n.perform (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:26:16337)
    at Object.batchedUpdates (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:27844)
    at Object.i [as batchedUpdates] (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:23:29808)
    at dispatchEvent (https://r4.res.office365.com/owa/prem/16.2970.3.2685561/scripts/owa.clientnext.application.js:93:30456)
```"
https://api.github.com/repos/OfficeDev/office-js/issues/467,Office.context.ui.displayDialogAsync() does not work when promptBeforeOpen is set to true,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
If promptBeforeOpen is set to true in DialogOptions, then Office.context.ui.displayDialogAsync() to displays a pop-up (in case running under browser) to trigger the navigation and avoid the browser's pop-up blocker. If the user provides consent, then open the requested URL in a dialog.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
If promptBeforeOpen is set to true in DialogOptions, then neither the prompt appears, nor the actual dialog opens. No errors are printed on console when using Office.com. If promptBeforeOpen is set to false, then the dialog opens (but blocked by browser pop-up blocker)  - as expected. 

This feature was working for us couple of weeks back, and then it stopped working. We are using the Office.js CDN. 

This issue could be a side effect of https://github.com/OfficeDev/office-js/issues/361, which touches similar items, and was recently published. 
## Steps to Reproduce, or Live Example
Should be quite easy to reproduce. For example, Google's ""Hangouts Meet Add-in"" has a similar functionality to display the login. Please install that plugin for Outlook, and then click on ""Add a meeting"" options. This should open the login dialog in case the user is not logged in. It was working before, now it does not work anymore.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Windows 10, outlook.office.com
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Version 1808 (Build 10730.20304 Click-to-Run)
* Operating System: Windows 10
* Browser (if using Office Online): Chrome 71

## Useful logs
"
https://api.github.com/repos/OfficeDev/office-js/issues/462,getSelectedRegExMatches() doesn't work in the `new Outlook` web experience,"<!--- Provide a general summary of the issue in the Title above -->
`Office.context.mailbox.item.getSelectedRegExMatches()` returns an empty array in the 'new Outlook' web experience while returning an expected array of one match in the old one.

## Expected Behavior
<!--- Tell us what you expected to happen -->
While using a contextual add-in I click on the highlighted (matched) text like 'EXST-42' and expect `Office.contex.tmailbox.item.getSelectedRegExMatches()` to return `{someMatches: [""EXST-42""]}`.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
Doing the same action in contextual add-in in new Outlook experience returns `{someMatches: []}`.

## Steps to Reproduce
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
1.  Add an extension point to `manifest.xml` which looks like this:
```
<ExtensionPoint xsi:type=""DetectedEntity"">
  <Label resid=""contextLabel"" />
  <SourceLocation resid=""detectedEntityURL"" />
  <Rule xsi:type=""RuleCollection"" Mode=""And"">
    <Rule xsi:type=""ItemIs"" ItemType=""Message"" />
    <Rule
      xsi:type=""ItemHasRegularExpressionMatch""
      RegExName=""someMatches""
      RegExValue=""[0-9A-Z]+-\d+""
      PropertyName=""BodyAsPlaintext""
    />
  </Rule>
</ExtensionPoint>
```
2. `console.log()` what `Office.context.mailbox.item.getSelectedRegExMatches()` returns.
3. Open the `new Outlook` web experience
4. Create an email with a plain text like `The meaning of existence is EXST-42.`
5. Open dev tools
6. Click on the highlighted `EXST-42` piece.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
By triggering the exact string pattern we're trying to give users a context of what this string might be related to.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Operating System: Mac
* Browser: Google Chrome 73
"
https://api.github.com/repos/OfficeDev/office-js/issues/450,[Outlook] [REST] Properties set via REST API not returned by OfficeJS API (even after synch delay),"We are noticing that custom properties that are created using the Outlook REST API[2] are not accessible with the OfficeJS API[1] using the loadCustomPropertiesAsync callback. This is happening even after we compensated for any possible synching time (~5 min).

## Expected Behavior

Any custom property that is created with the Outlook REST API[2] should be accessible with the loadCustomPropertiesAsync callback. 

## Current Behavior
The custom properties created using the Outlook REST API are not available when fetched using the loadCustomPropertiesAsync callback.

## Steps to Reproduce, or Live Example
1. Create a custom property using the following request to the REST API (v2.0) for  a mail item

> `PATCH https://outlook.office365.com/api/v2.0/me/messages('{mailItemId}')`


2. Fetch the custom property using the loadCustomPropertiesAsync [1] method for the same mail item. The custom property is not returned.
3. The same custom property is returned when it is queried using the REST API

> `GET https://outlook.office365.com/api/v2.0/me/messages('{mailItemId}')?$expand=SingleValueExtendedProperties($filter=PropertyId eq 'String {common-property-set-public-string-guid} Name cecp-{add-in-manifest-id}')`

Where common-property-set-public-string-guid=00020329-0000-0000-C000-000000000046 [3]

## Context
We are using both the Outlook REST API and OfficeJS API in order to handle mail switching scenarios for an add-in which supports a pinned taskpane.

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop, Mac, Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: N/A
* Operating System: Windows 10, Mac High Sierra
* Browser (if using Office Online): Firefox

## Useful logs
N/A

## References
[1] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.4/office.context.mailbox.item?view=office-js#loadcustompropertiesasynccallback-usercontext 
[2] https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/extended-properties-rest-operations#extended-property-operations
[3] https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/commonly-used-property-sets
"
https://api.github.com/repos/OfficeDev/office-js/issues/440,Roaming Settings not visible on Setting UI.,"<!--- Provide a general summary of the issue in the Title above -->
I am developing Outlook web add-in. I have designed setting UI to get-set the user data.
This settings UI opens when roaming settings is empty.It works fine.
As per business logic I have to set the roaming setting before schedule the meeting/appointment. I can set the user data into roaming settings. 

But when I click the add-in command,
`<Action xsi:type=""ExecuteFunction""><FunctionName>MySettings</FunctionName> </Action>`
 it shows no data in Setting UI.


## Expected Behavior
If roaming setting are there.It should display setting into Setting UI. If No settings is saved, it prompt to Setting UI and appointment/meeting is populated with saved settings. But when to open the Setting add-in command from ribbon, it shows saved data. 

## Current Behavior
 when I click the add-in command,
`<Action xsi:type=""ExecuteFunction""><FunctionName>MySettings</FunctionName> </Action>`
 it shows no data in Setting UI.

## Your Environment
Platform [PC desktop, Mac, iOS, Office Online]: Outlook for Windows
Host [Excel, Word, PowerPoint, etc.]: Outlook"
https://api.github.com/repos/OfficeDev/office-js/issues/435,Office.context.auth.getAccessTokenAsync throw Cannot read property 'Version' of null,"I am use `Office.context.auth.getAccessTokenAsync` to request accesstoken, but it throw error below:   

> Uncaught TypeError: Cannot read property 'Version' of null
    at Object.callback (outlook-web-16.01.js:16)
    at rt (outlook-web-16.01.js:16)

## Expected Behavior
Get the access token correctly.


## Steps to Reproduce, or Live Example
Demo:  

[OutlookOneDriveGraphAddIn](https://github.com/Edward-Zhou/OutlookOneDriveGraphAddIn)


"
https://api.github.com/repos/OfficeDev/office-js/issues/431,[Outlook] EWS GetAttachment returns an ErrorInvalidAttachmentId error,"We randomly encounter  scenarios (at least it appears random)  where GetAttachment calls made to the EWS SOAP API
return an attachment not found error.

## Expected Behavior
The GetAttachment SOAP request should return the contents of the requested attachment.

## Current Behavior
When fetching attachments we recieve the following error for some files:

```
<?xml version=""1.0"" encoding=""utf-8""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
    <s:Header>
        <h:ServerVersionInfo MajorVersion=""15"" MinorVersion=""20"" MajorBuildNumber=""1709"" MinorBuildNumber=""13"" Version=""V2018_01_08"" xmlns:h=""http://schemas.microsoft.com/exchange/services/2006/types"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
    </s:Header>
    <s:Body>
        <m:GetAttachmentResponse xmlns:m=""http://schemas.microsoft.com/exchange/services/2006/messages"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:t=""http://schemas.microsoft.com/exchange/services/2006/types"">
            <m:ResponseMessages>
                <m:GetAttachmentResponseMessage ResponseClass=""Error"">
                    <m:MessageText>The specified attachment Id is invalid.</m:MessageText>
                    <m:ResponseCode>ErrorInvalidAttachmentId</m:ResponseCode>
                    <m:DescriptiveLinkKey>0</m:DescriptiveLinkKey>
                    <m:Attachments/>
                </m:GetAttachmentResponseMessage>
            </m:ResponseMessages>
        </m:GetAttachmentResponse>
    </s:Body>
</s:Envelope>

```


## Steps to Reproduce, or Live Example
1. Use the Office.context.mailbox.ewsUrl [1]  to obtain the EWS SOAP endpoint
2. Use the Office.context.mailbox.getCallbackTokenAsync [2] to obtain the EWS token
3. Use the Office.context.mailbox.item.attachments [3] to obtain the list of attachments
4. Make a SOAP request to EWS SOAP endpoint to fetch the attachments (using GetAttachment)


## Context
We are not able to fetch attachments for processing.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Seems to be present in various Office builds
* Operating System: Windows 10
* Browser (if using Office Online): N/A

## Reference
[1] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/office.context.mailbox?view=office-js#ewsurl-string
[2] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/office.context.mailbox?view=office-js#getcallbacktokenasynccallback-usercontext
[3] https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/office.context.mailbox.item?view=office-js#attachments-arrayattachmentdetails
"
https://api.github.com/repos/OfficeDev/office-js/issues/429,History API's pushState & replaceState are nullified by Office.js,"<!--- Provide a general summary of the issue in the Title above -->
I'm currently writing an outlook add-in that can also act as a web application.
Office.js's code consists of some history API nullifying logic that turns `history.pushState` & `history.replaceState` into null.
this behaviour will break all Add-ins that try to use modern routing solutions like `react-router`, etc...

## Expected Behavior
<!--- Tell us what you expected to happen -->
history API will remain unharmed.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
`history.pushState` & `history.replaceState` become null

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______
1. import Office.js (either CDN or npm)
2. try using the history API
3. **App Crashes: TypeError: globalHistory.replaceState is not a function**

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Outlook (both native mac & online)
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16 (don't think subversion is relevant)
* Operating System: Mac OSX Mojave
* Browser (if using Office Online): Any

I assume that these are the relevant piece of code:

https://github.com/OfficeDev/office-js/blob/b357f8e44939c9bd92fe6c04edb8a8eb541b30e6/dist/office.debug.js#L1587
https://github.com/OfficeDev/office-js/blob/b357f8e44939c9bd92fe6c04edb8a8eb541b30e6/dist/office.debug.js#L1588"
https://api.github.com/repos/OfficeDev/office-js/issues/413,Regarding appointmentResponse,"The main issue is that appointmentResponse is not returning responses. It's returns undefined. It's is documented as returning MailboxEnums.ResponseType.

I'm also pointing out potential issues the the sample code on the documentation page this issue was reported from.

> Gets the response that an attendee returned for an appointment. This property applies to only an attendee of an appointment, as represented by the optionalAttendees or requiredAttendees property. This property returns undefined in other scenarios.

> var requiredAttendees = Office.context.mailbox.item.requiredAttendees;
> console.log(""There are "" + requiredAttendees.length + "" required attendees."")
> requiredAttendees.forEach(function (requiredAttendee) {
>     console.log(""Attendee "" + requiredAttendee.displayName + "": "" + requiredAttendee.appointmentResponse);
> });

Are these examples correct? I don't see them calling getAsync. The examples do not work for me. Additionally, following the pattern of calling getAsync, I still can't access appointmentResponse.

Code sample:
```
let item = Office.context.mailbox.item,
  requiredAttendees, optionalAttendees, totalAttendees = 0;

if (item.itemType === Office.MailboxEnums.ItemType.Appointment) {
  requiredAttendees = item.requiredAttendees;
  optionalAttendees = item.optionalAttendees;

  if (requiredAttendees) {
    requiredAttendees.getAsync((asyncResult) => {
      console.log(asyncResult.value);
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        totalAttendees += asyncResult.value.length;
        for (let i = 0; i < asyncResult.value.length; i++) {
          console.log(asyncResult.value[i].displayName + ' | ' +
            asyncResult.value[i].appointmentResponse + ' | ' +
            asyncResult.value[i].recipientType + ' | ' +
            asyncResult.value[i].emailAddress);
        }
      }
    });
  }
}
```

Question on stackoverflow for additional details:
https://stackoverflow.com/questions/54837540/is-it-possible-to-retrieve-appointment-responses-from-attendees

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 936b8688-01b5-481e-527d-780cc7c2ced1
* Version Independent ID: 87e09cec-d2c4-bcf0-b990-a24a81e917b9
* Content: [Office.EmailAddressDetails interface - Office Add-ins](https://docs.microsoft.com/en-us/javascript/api/outlook_1_5/office.emailaddressdetails?view=office-js#appointmentresponse)
* Content Source: [docs/docs-ref-autogen/outlook_1_5/office.emailaddressdetails.yml](https://github.com/OfficeDev/office-js-docs-reference/blob/live/docs/docs-ref-autogen/outlook_1_5/office.emailaddressdetails.yml)
* Product: **outlook**
* GitHub Login: @o365devx
* Microsoft Alias: **o365devx**"
https://api.github.com/repos/OfficeDev/office-js/issues/396,"In Outlook-Office365, Addin Icons fail to load  with some IE settings enabled.","@kbrandl sorry for the mention, but this is another issue we are experiencing right now with Outlook-Office365, with certain settings enabled for IE. Please let me know if this is the wrong channel to submit this issue and I will move it to the right channel. Thanks!

Currently, we are seeing issues with icons in Outlook Office365. Our Outlook office365 is not showing the right icons for any of our command button add-ins. The image below shows the issue we are seeing :
![outlook365missingicons](https://user-images.githubusercontent.com/3444844/52989627-406d4e00-343f-11e9-91ff-81b5a648c0e7.PNG)

After several tests and investigation, we have found out that this behaviour is actually caused by settings in IE (Internet Explorer). To reproduce this problem, one needs to do the following.

1. Delete all files in the Office WEF/resources in %localappdata% like the image below shows :
![outlook365wefresources](https://user-images.githubusercontent.com/3444844/52989721-b2459780-343f-11e9-9f23-2d643a1dd293.PNG)

2. Once all files are deleted, launch IE, click on the gear icon and then set it to delete browsing history.
 ![deletebrrowsinghistory](https://user-images.githubusercontent.com/3444844/52989767-ddc88200-343f-11e9-870a-887bb213f4c9.PNG)

3. Click on the ""Advanced"" tab of Internet options, check the box for ""Do not save encrypted pages to disk"" under security, and then click ""apply"".
![donotsaveencryptedfiles](https://user-images.githubusercontent.com/3444844/52989812-0d778a00-3440-11e9-85cc-c3fdf681518a.PNG)

4. Close all running instances of IE, and outlook365.
5. Launch Outlook365 and wait for some time for Outlook to load the icons for the add-ins.

Note, the **EXPECTED** behaviour is shown in the image below : 
![outlook365normaloperations](https://user-images.githubusercontent.com/3444844/52989883-6b0bd680-3440-11e9-9015-cbf7dbee7fce.PNG)

(related content in the docs: [Office Add-ins XML manifest](https://docs.microsoft.com/en-us/office/dev/add-ins/develop/add-in-manifests?tabs=tabid-1))"
https://api.github.com/repos/OfficeDev/office-js/issues/387,Issue while inserting HTML on OWA with empty body,"When I try to insert HTML while composing an email on OWA, using the setSelectedDataAsync, the HTML does not inserts on the email if the email body is empty

## Expected Behavior
The custom HTML being inserted on the email

## Current Behavior
The HTML is not being inserted if the email has an empty body. If we write anything on the email body, the custom html is inserted just right.

This happens only on OWA. In outlook for Mac or Windows works fine.

* Additional details:
  
  1. Insert HTML data with the Office.context.mailbox.item.body.setAsync() method
  2. On OWA

## Context
I try to insert a link inside the email, but in OWA if the body is empty the link is not inserted, and our clients get lost

## Your Environment
* Platform
  Office online
* Host
  Outlook
* Browser
  Chrome"
https://api.github.com/repos/OfficeDev/office-js/issues/383,Outlook doesn't switch Message view to Compose view,"After refreshing the add-in page the add-in remains in Message view and doesn't switch to Compose view.

## Expected Behavior
Compose view should appear

## Current Behavior
Doesn't work only in browser with old UI.
Message view appears

## Steps to Reproduce, or Live Example
Keep old Outlook UI.
Movie: https://streamable.com/bwhrr

- create new email
- pin taskpane
- click **Discard** - very important!
- open sent email
- pin taskpane
- create new email again

The add-in remains in Message view and doesn't switch to Compose view.
The `Office.context.mailbox.item.internetMessageId` remains equal to the last selected email

## Your Environment
* Platform: Office Online
* Host: Outlook
* Office version number: 16.0.11215.10000
* Operating System: MacOs, Windows
* Browser (if using Office Online): Chrome"
https://api.github.com/repos/OfficeDev/office-js/issues/380,[Outlook] Dialog gets orphaned if user closes task pane (Outlook for Mac),"<!--- Provide a general summary of the issue in the Title above -->
In Outlook for Mac, closing the task pane does not automatically close an open dialog spawned by that task pane.

## Expected Behavior
<!--- Tell us what you expected to happen -->
When a taskpane gets closed (either because the user manually closed the task pane via the X button, or because they closed the window in which the task pane existed), I would expect a dialog opened by that task pane to also be closed. This is the behavior in Windows Outlook 2013 and 2016. In OWA, it is not possible to interact with the underlying Outlook window when a dialog is open, so the issue is moot there.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
In Outlook for Mac only, when a taskpane is closed, the dialog remains open. This is especially problematic because the dialog is now orphaned. Any calls to `Office.context.ui.messageParent` from the dialog get thrown into the void without any thrown errors, and the dialog is unable to close itself (since only the task pane has the ability to call `Dialog.close()`). The dialog has no way of even detecting that it has lost connection to its task pane.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. In Outlook for Mac, open a taskpane in a compose message window.
  2. Call `Office.context.ui.displayDialogAsync` from inside the taskpane.
  3. Once the dialog is open, move it over to reveal the compose message window underneath.
  4. Click the X above the taskpane to close it, or close the whole compose message window. The dialog will remain open (unlike in Windows Outlook).

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Our plugin makes heavy use of the DialogAPI and the ability to send a message from the dialog to the underlying taskpane. Our dialog also contains a `Close` button that, when clicked, sends a message to the task pane that will then call `Dialog.close()`. However, there is nothing stopping a user from moving the dialog over and closing the task pane, sending the mail in which the task pane is running, or closing the compose window altogether. This causes several problems:
- Our dialog becomes basically non-functional --  it can no longer send messages to the task pane to interact with the majority of the OfficeJS API.
- The dialog cannot detect when it is in this state, since no error is thrown by `Office.context.ui.sendMessage`. That means it can't update its UI to tell the user that it is no longer functional and should be closed. We've worked around this by using a ""heartbeat"" in local storage: the task pane increments a variable in local storage on an interval, and the dialog listens for this variable in local storage. If the dialog detects that the heartbeat has stopped incrementing, it knows the task pane has been closed.
- Even if the dialog can detect that it is in this orphaned state, it cannot close itself programmatically. Our `Close` button no longer works since it relies on a message to the task pane to trigger `Dialog.close()`. As it turns out, in Mac only, the unsupported API `window.close()` actually does succeed in closing the dialog. However, since this API is unsupported, we would prefer not to depend upon it in a production system.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.21.117.0
* Operating System: MacOS High Sierra v 10.13.6 (17G3025)
* Browser (if using Office Online): N/A

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
N/A
"
https://api.github.com/repos/OfficeDev/office-js/issues/379,[Outlook] Office.mailbox.item.body.getAsync provides out-of-date information (new OWA),"In the new version of Outlook Web App (the one shown by turning on the `Try the new Outlook` toggle), calling `Office.mailbox.item.body.getAsync` when in compose-mode does not always return the mail body currently displayed on the page. It instead returns the mail body from the last-saved version of the draft from the server, which is often not current.

## Expected Behavior
<!--- Tell us what you expected to happen -->
When in compose-mode, I would expect that calling `Office.mailbox.item.body.getAsync` would return the text that I can currently see on the page. This is the behavior of `body.getAsync` in the old version of OWA (tested on version 16.0.10205.10000), as well as the behavior of `Office.mailbox.item.subject.getAsync` in both the old and new versions of OWA.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
When in compose-mode, `Office.mailbox.item.body.getAsync` frequently returns text that is not up-to-date with what the user has typed in the mail body. After making a change to the body by typing in the contenteditable div on the page, `body.getAsync` will continue to return the text from before the change for 30 seconds to several minutes after the change was made. When `body.getAsync` finally does return the most up-to-date results, it appears to coincide with the draft being saved to the server. This seems to indicate that `body.getAsync` is returning the version of the body stored on the server, not the version of the body that is being displayed to the user. This is the case both when retrieving the body as HTML or as plain text.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
Unfortunately I cannot share the live example from the project where we are experiencing this issue, since it is a closed-source product, but the repro is fairly simple:

1. Add the following script to a task pane which runs in a compose-mode email message:
```
const pollMailBody = setInterval(() => {
    Office.mailbox.item.body.getAsync(Office.CoercionType.Text, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
            console.log(result.value);
        }
    });
}, 1000);

Office.initialize = pollMailBody;
```
2. Open a new compose mail, and open the task pane. Console logs of a blank string (the blank contents of the mail body) should start appearing once per second.
3. Type in the message body. Notice that the console logs won't immediately reflect the changes made to the message body. Sometimes they'll become up-to-date in a few seconds, other times it takes 30 seconds to several minutes.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Our plugin needs to know the current contents of the mail body and subject line at all times, so it can update various pieces of UI in response to changes the user has made to the mail. Because there is currently no way to subscribe to changes to the mail body, we poll for changes by calling `body.getAsync` on a regular interval. This more or less works as expected in Windows Outlook 2013/2016, Mac Outlook, and the old version of OWA. However, the massive delay in new OWA between when a user changes the body and when `body.getAsync` reflects those changes makes it impossible for the plugin to operate as designed.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.0.10908.10000
* Operating System: MacOS High Sierra, Windows 10
* Browser (if using Office Online): Chrome, Firefox

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
"
https://api.github.com/repos/OfficeDev/office-js/issues/378,[Mac] Unable to access Office.context.ui object in dialog window,"We are initiating an SAML SSO flow in a dialog window that is opened via an Outlook plugin. The login
flow completes but we are not able to call the messageParent method on the Mac Outlook 2016 client.The 
Office.context.ui object is not available when debugging the issue.

This behaviour is only present on the Mac Outlook 2016 Desktop Client, I have tested the following scenarios:
  - Outlook Live on Firefox,Chrome and Safari (Both on Mac and Windows)
  - Windows Outlook 2016 Desktop client
  - Mac Outlook 2016 Desktop Client (16.21) (190117) - Fails

## Expected Behavior
The Office.context.ui object should be available to the execution context in the dialog window.

## Current Behavior
The Office.context.ui is undefined when accessed from the dialog window 

## Steps to Reproduce, or Live Example
- Open a dialog window using Office.context.ui.displayDialogAsync
- Attempt to post a message to the host using Office.context.ui.messageParent

*Additional details:*
- The dialog window performs a redirect to our API (different domain) which generates the script which calls the dialog API
- The API domain is added to the list of app domains in the manifest

## Context
We are trying to authenticate the user via a SAML SSO flow in a dialog window.


## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: Mac Outlook 2016 Desktop Client (16.21) (190117) 
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Mac Outlook 2016 Desktop Client (16.21) (190117) 
* Operating System: Mac
* Browser (if using Office Online): N/A

## Useful logs
N/A


 
"
https://api.github.com/repos/OfficeDev/office-js/issues/375,Cannot save Custom Properties on Calendar Event in new Outlook,"Cannot save Custom Properties on Calendar Event in new Outlook

## Expected Behavior
In the current version of outlook (not new) we can load and save custom properties using the following API call in Office JS ; 
https://docs.microsoft.com/en-us/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item#loadcustompropertiesasynccallback-usercontext

## Current Behavior
In the new version of outlook we can not save custom properties using the Office JS API mentioned above. They can be loaded however.

## Steps to Reproduce, or Live Example
Here is an example of the code we are using to load / save custom properties.
`    async setCustomPropertyAsync(key, value) {  
        return await new Promise((resolve, reject) => {  
            this._office365Client.context.mailbox.item.loadCustomPropertiesAsync(  
                result => {   
                    try {  
                        if (result.error || !result.value) reject(result.error);  
                        else {  
                            result.value.set(key, value);  
                            result.value.saveAsync(saveResult => {  
                                if (saveResult.error) reject(saveResult.error);  
                                else resolve(saveResult.value)  
                            });  
                        }  
                    } catch (error) {  
                        reject(error);  
                    }  
            });  
        });  
    }`


## Context
We have an outlook add in which relies on loading/saving custom properties against calendar events which no longer works in Outlook Online when ""The new Outlook"" is checked. This will cause us to have to ask customers to disable this.

## Your Environment
* Platform  Office Online
* Host Outlook
* Browser (if using Office Online): Chrome

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [x] Console errors
[outlook.office.com-1549467401481.log](https://github.com/OfficeDev/office-js/files/2837008/outlook.office.com-1549467401481.log)
- [x] Request as Fetch from Network tab
`fetch(""https://outlook.office.com/owa/service.svc?action=SaveExtensionCustomProperties&n=37&EP=1&app=Calendar"", {""credentials"":""include"",""headers"":{""accept"":""*/*"",""accept-language"":""en-GB,en-US;q=0.9,en;q=0.8"",""action"":""SaveExtensionCustomProperties"",""content-type"":""application/json; charset=utf-8"",""ms-cv"":""6m1sp3QLJvK9Qau1G9oxgI.44"",""x-owa-canary"":""8eN_PZ9yVkyX3zPchdMG0RD9U_NGjNYYNLVjHZTI5qlNoiEistsTKYQSiSom999lsO_AWs6Ajh4."",""x-owa-correlationid"":""ba74673f-4743-00e7-164d-30d7abd903ba"",""x-owa-urlpostdata"":""%7B%22request%22%3A%7B%22__type%22%3A%22SaveExtensionCustomPropertiesParameters%3A%23Exchange%22%2C%22ExtensionId%22%3A%22d696a29b-e3f0-4f5b-be48-b8b4f7657b3e%22%2C%22ItemId%22%3Anull%2C%22CustomProperties%22%3A%22%7B%5C%22gmsoPasscode%5C%22%3A%5C%22867951720%5C%22%7D%22%7D%7D"",""x-req-source"":""Calendar""},""referrerPolicy"":""no-referrer"",""body"":null,""method"":""POST"",""mode"":""cors""});`
"
https://api.github.com/repos/OfficeDev/office-js/issues/373,Office.js is not working in new outlook,"

## Expected Behavior
Office.js API should work in ""new outlook"" (web)

## Current Behavior
Office.js calls fail on new Outlook (web)

## Steps to Reproduce, or Live Example
1. Open web outlook https://outlook.office.com/owa/?path=/calendar/view/Day
1. Enable new outlook (look at top right corner) 
![image](https://user-images.githubusercontent.com/3139353/52205916-a9c95a80-289e-11e9-8835-bc36d3090f4b.png)
1. Open any addin which use [`saveAsync`](https://docs.microsoft.com/en-us/javascript/api/outlook/office.appointmentcompose?view=office-js#saveasync-options--callback-)
1. call `saveAsync`
1. call fails with following error:
    ```json
    {
       ""code"": 9021,
       ""message"": ""Connection error occurred while trying to save the item on the server."",
       ""name"": ""SaveError""
    }
    ```



## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform :ffice Online
* Host : Outlook
* Office version number: 1.6
* Operating System: windows 10
* Browser :Firefox, chrome


"
https://api.github.com/repos/OfficeDev/office-js/issues/371,Office.context.mailbox.displayNewMessageForm does not open new message form if user has received an email,"The `displayNewMessageForm` endpoint of the Outlook API does not open a new message form if the user has received an e-mail after the task pane plugin from which the action is triggered has initialized.

## Expected Behavior
When `Office.context.mailbox.displayNewMessageForm` is called in Outlook from a task pane with valid parameters, it should always open a new message form, regardless of the state of the user's inbox.

## Current Behavior
When `Office.context.mailbox.displayNewMessageForm` is called in Outlook from a task pane with valid parameters, it will not open a new message form if the user has received an e-mail after the task pane plugin was initialized. No error or exception is thrown, and the diagnostic output of `Office.context.mailbox.diagnostics` is identical to the working scenario where aforementioned action was triggered when the user's mailbox has not changed its state since the task pane initialization. 

## Steps to Reproduce, or Live Example
  1. Create a standard boiler plate plugin as described at https://docs.microsoft.com/en-us/outlook/add-ins/quick-start
  2. Make sure that the `ShowTaskpane` action is included in de plugin's manifest file.
  3. Add a link or button 'Open new message form' to the task pane code that dispatches the following action: `Office.context.mailbox.displayNewMessageForm([]);`
  4. Go to the user's inbox folder in Outlook.
  5. Open the task pane plugin in Outlook, and *make sure it has been pinned*, so that it will not reload in between the following steps.
  6. Verify that the button created in step 3 is working, by clicking it. A new message form should be opened. Close the new message form afterwards.
  7. From the `Home` ribbon, click the `New Email` button and send an email to yourself. 
  8. Wait for the e-mail to be fetched by Outlook and that it is displayed in the Inbox pane. 
  9. Single-click on the e-mail in the inbox pane, so that it will be displayed in the reading pane.
  10. Click again on the button created in step 3, and verify that the new message pane will _not_ open this time.

This screenshot illustrates the state of Outlook after step 10.
![image](https://user-images.githubusercontent.com/3234834/52111164-26400d00-2603-11e9-898a-0f273426a715.png)


## Context
I am developing a CRM plugin for Outlook in which the user is given the option to compose and send an e-mail with prefilled parameters, such as recipients, subject, etc.. However, since the newMessageForm endpoint only works as long as the mailbox state has remained unchanged, the 'compose e-mail' functionality can effectively only be used after a reload of the plugin.


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: PC
* Host: Outlook 365
* Office version number: Office 365 MSO 16.0.11126.20192 64-bit
* Operating System: Windows 10 Pro

## Useful logs
- No errors are thrown, and the diagnostics output of `Office.context.mailbox.diagnostics` is identical to the working scenario.
```
{
  ""_data$p$0"": {
    ""_data$p$0"": {
      ""hostVersion"": ""16.0.11126.20266"",
      ""itemType"": 1,
      ""subject"": """",
      ""normalizedSubject"": """",
      ""itemClass"": ""IPM.Note"",
      ""dateTimeCreated"": 1549007770095,
      ""dateTimeModified"": 1549007770399,
      ""permissionLevel"": 2,
      ""isItemLess"": false,
      ""id"": ""AQMkADAwATM0MDAAMS1mYmE0LTIxNDEtMDACLTAwCgBGAAAD6YuAa8RSJUymdTnvF54FcgcA3TJXChZv+kyaPhxDnnOe7QAAAgEMAAAA3TJXChZv+kyaPhxDnnOe7QACLU9BBwAAAA=="",
      ""ewsUrl"": ""https://outlook.office365.com/EWS/Exchange.asmx"",
      ""restUrl"": ""https://outlook.office.com/api"",
      ""attachments"": null,
      ""isFromSharedFolder"": false,
      ""shouldRunNewCodeForFlags"": 1,
      ""entities"": {
        ""Addresses"": null,
        ""Contacts"": null,
        ""EmailAddresses"": null,
        ""MeetingSuggestions"": null,
        ""PhoneNumbers"": null,
        ""TaskSuggestions"": null,
        ""Urls"": null,
        ""IsLegacyEntityExtraction"": false
      },
      ""filteredEntities"": null,
      ""selectedEntities"": {
        ""Addresses"": null,
        ""Contacts"": null,
        ""EmailAddresses"": null,
        ""MeetingSuggestions"": null,
        ""PhoneNumbers"": null,
        ""TaskSuggestions"": null,
        ""Urls"": null,
        ""IsLegacyEntityExtraction"": false
      },
      ""conversationId"": ""AQQkADAwATM0MDAAMS1mYmE0LTIxNDEtMDACLTAwCgAQADv6/g6+UULOjq3/0GpfXEw="",
      ""internetMessageId"": ""<AM6PR07MB483406A37BD40302504D4ED7CB920@AM6PR07MB4834.eurprd07.prod.outlook.com>"",
      ""dateTimeSent"": 1549007767000,
      ""userEmailAddress"": ""xxx@outlook.com"",
      ""userDisplayName"": ""xxx@outlook.com"",
      ""userProfileType"": ""outlookCom"",
      ""userTimeZone"": ""W. Europe Standard Time"",
      ""to"": [
        {
          ""address"": ""xxx@outlook.com"",
          ""name"": ""xxx"",
          ""recipientType"": 3
        }
      ],
      ""cc"": null,
      ""sender"": {
        ""address"": ""xxx@outlook.com"",
        ""name"": ""xxx"",
        ""recipientType"": -1
      },
      ""regExMatches"": null,
      ""selectedRegExMatches"": null,
      ""from"": {
        ""address"": ""xxx@outlook.com"",
        ""name"": ""xxx"",
        ""recipientType"": -1
      },
      ""itemNumber"": 26,
      ""error"": false
    },
    ""_permissionLevel$p$0"": 3
  },
  ""_appName$p$0"": 8
}
```
"
https://api.github.com/repos/OfficeDev/office-js/issues/370,Add Recipient to Appointment in Compose Throws Error,"Setting the recipients via the office.js api is throwing an error.

## Expected Behavior
The array passed to the API should correctly set the recipients.

## Current Behavior
Both `setAsync` and `addAsync` are throwing `Sys.ArgumentException: Sys.ArgumentException: Value does not fall within the expected range.` when receiving array of email addresses to set, which I have tried on these attributes in Compose mode on a new Outlook Appointment- 
```
var ITEM = Office.context.mailbox.item
ITEM.requiredAttendees
ITEM.optionalAttendees
ITEM.bcc
ITEM.cc
```
with these as params on with all variations - 
```
[{emailAddress: 'test@example.com', displayName: 'Test Name'}]
['test@example.com']
```

It would appear that `line 8046` from `outlook-mac-16.00.js`
```
if (Array.isInstanceOfType(n))
```
within this block
```
 setAddHelper: function(n, t, i) {
            window.OSF.DDA.OutlookAppOm._throwOnOutOfRange$i(n.length, 0, 100, ""recipients"");
            var h = r.CommonParameters.parse(t, !1);
            var e = [];
            if (Array.isInstanceOfType(n))
                for (var u = 0; u < n.length; u++)
                    if (String.isInstanceOfType(n[u])) {
                        r.ComposeRecipient._throwOnInvalidDisplayNameOrEmail$p(n[u], n[u]);
                        e[u] = r.ComposeRecipient._createEmailDictionaryForHost$p(n[u], n[u])
                    } else if (r.EmailAddressDetails.isInstanceOfType(n[u])) {
                        var f = n[u];
                        r.ComposeRecipient._throwOnInvalidDisplayNameOrEmail$p(f.displayName, f.emailAddress);
                        e[u] = r.ComposeRecipient._createEmailDictionaryForHost$p(f.emailAddress, f.displayName)
                    } else if (Object.isInstanceOfType(n[u])) {
                        var c = n[u];
                        var o = c.emailAddress;
                        var s = c.displayName;
                        r.ComposeRecipient._throwOnInvalidDisplayNameOrEmail$p(s, o);
                        e[u] = r.ComposeRecipient._createEmailDictionaryForHost$p(o, s)
                    } else
                        throw Error.argument(""recipients"");
                    }
            else
                throw Error.argument(""recipients"");
            var l = this;
            window.OSF.DDA.OutlookAppOm._instance$p._standardInvokeHostMethod$i$0(i ? 21 : 22, {
                recipientField: this._type$p$0,
                recipientArray: e
            }, function(n) {
                return n
            }, h._asyncContext$p$0, h._callback$p$0)
        }
```
is throwing the error. That said, `Array.isArray(arr)` is returning true before going into the library (though this may be unrelated, I don't know)

## Steps to Reproduce, or Live Example
```
var arr = [{emailAddress: 'test@example.com', displayName: 'Test Name'}]
Office.context.mailbox.item.requiredAttendees.addAsync(arr)
```
Cf. [docs for requiredAttendees](https://github.com/OfficeDev/office-js-docs-pr/blob/master/docs/reference/objectmodel/preview-requirement-set/office.context.mailbox.item.md#requiredattendees-arrayemailaddressdetailsrecipients)

## Context
Ideally,  I would like to have a hook into SEND event, so that I can set params when the invite is sent.

* [Since that is not an option in Office.js at the moment on Windows and Mac](https://officespdev.uservoice.com/forums/224641-feature-requests-and-feedback/suggestions/10964871-add-itemsend-event-so-add-in-can-cancel-email),  I am planning to set an email address that can handle incoming data via the [FunctionFile](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/functionfile), thus the need to `addAsync` on recipients, though I am certainly open to suggestions on best practice here / other APIs that might be better suited for configuring app data without needing the click.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.21
* Operating System: MacOS High Sierra (10.13.6)

---
### UPDATED: Changed suspected `line number` back to `8046`
"
https://api.github.com/repos/OfficeDev/office-js/issues/361,promptBeforeOpen: false setting for Office.context.ui.displayDialogAsync not work for outlook online,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
if we set promptBeforeOpen: false, displayDialogAsync will not pop a confirm window.

## Current Behavior
displayDialogAsync always pop a confirm window, ignore the setting of promptBeforeOpen

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Office Online
* Host [Excel, Word, PowerPoint, etc.]: outlook
* Office version number: office 365
* Operating System: windows 10
* Browser (if using Office Online): chrome, edge

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
- [ ] Screenshots
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/352,Can't set a test license token in an Outlook addin,"I'm trying to set a test license token in an Outlook add-in. According to the documentation, I have to set it in the `SourceLocation` in the manifest file:

    <Form xsi:type=""ItemRead"">
      <DesktopSettings>
        <SourceLocation DefaultValue=""https://localhost:3000?et=%3Cr%3E%0A%20%20%3...""/>
        <RequestedHeight>250</RequestedHeight>
      </DesktopSettings>
    </Form>

The problem is, when I try to get the URL query params, it won't work. `window.location` looks like this:

`https://localhost:3000/?et=`

Any idea why it's happening?"
https://api.github.com/repos/OfficeDev/office-js/issues/350,Anchor tags not working in Outlook android.,"I'm trying to view/download a PDF/Docx file on click of anchor tag in Outlook web add-in (Android).

## Expected Behavior
It should be able to download or view a PDF/docx file. 

## Current Behavior
Click on the link from web add-in and this fails to load. I even tried with displayDialogAsync and this just loads a blank window.

This link works fine with iPad/iPhone/MAC/Windows but not in Android Outlook wed add-in.

In Android Outlook web add-in the txt file download works fine via link.

## Steps to Reproduce, or Live Example
I'm using Outlook Android application [V2.2.257(293)]

 Steps to reproduce : 
1. Any anchor tag with proper href. 

    Use the below and open it in your outlook add-in Android.

    <a href=""http://iiswc.org/iiswc2012/sample.doc"" target=""_blank"" rel=""noopener noreferrer"" data- 
     auth=""NotApplicable""><span style=""font-size: 8.5pt; font-family: Verdana, sans-serif, serif, EmojiFont; 
     color: rgb(25, 118, 210); background: white;"">SampleDOC</span></a>

2. Click on the link from web add-in and this fails to load.


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
The same links works in other in iPhone,MAC,iPad & windows but not in Android. This is leading to inconsistent behavior. 

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Android . No issue found in other platforms
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 1.5
* Operating System: Android (5-9)
* Browser (if using Office Online): ______

Is there any other way to implement links other than using anchor tags ?

As per this <a href=""https://stackoverflow.com/questions/46016470/outlook-addin-window-open"" target=""_blank"" rel=""noopener noreferrer"" data-auth=""NotApplicable""><span style=""font-size: 8.5pt; font-family: Verdana, sans-serif, serif, EmojiFont; color: rgb(25, 118, 210); background: white;"">link</span></a> window.open is not supported in Outlook web add-in.

Any help is appreciated.

"
https://api.github.com/repos/OfficeDev/office-js/issues/349,Adding event handler for dialog messages fails in Outlook for Mac,"## Expected Behavior

STR:

1. Add-in page opens a dialog and registers a handler.

```typescript
window.Office.context.ui.displayDialogAsync(uri, options, (result: Office.AsyncResult) => {
  const dialog = result.value;
  dialog.addEventHandler(Office.EventType.DialogEventReceived, (ev: any) => {
    onClose();   // Simple function defined elsewhere.
  });

  dialog.addEventHandler(Office.EventType.DialogMessageReceived, (m: string) => {
    handleMessage(dialog, m);   // Simple function defined elsewhere.
  });
});
```

2. Dialog page sends back.

```typescript
window.Office.context.ui.messageParent(""{'action': 'foo'}"");
```

Expected: `handleMessage` is called.

Actual: `handleMessage` is not called. Using Vorlon I find that Outlook logs `""messages received cannot be handlered""` when adding the event handler.

`onClose` is successfully called, so events are being delivered to the add-in.

This seems exactly like:

* https://stackoverflow.com/questions/45837934/outlook-add-in-does-not-return-message-from-dialog-on-macos

and similar to:

* https://camerondwyer.com/2017/03/01/beware-the-dialog-api-falling-silent-under-ie11/

## Context

This makes it impossible to send responses from a dialog, limiting us to only those things that can be accomplished after closing the dialog.

## Your Environment

Outlook 16.16.5, Mac 10.13.6.
"
https://api.github.com/repos/OfficeDev/office-js/issues/347,OWA: Office.context.mailbox.addHandlerAsync is giving status as failed for when add-in is reloaded," Office.context.mailbox.addHandlerAsync is giving status as failed.


When add-in is loaded initially, i'm able to see addhandlerasync is working fine. Event is registered properly and selection change event is getting fired. If I try to remove handle using removehandlerAsync and add again with addHandlerAsync, it should work as it does for initial one.


When I try to remove existing handler in one scenario and trying to attach again with addhandlerasync, then it is failing with failure status.

Error is attached.

![addhandlerasync](https://user-images.githubusercontent.com/25030206/50534157-cc10df80-0b5e-11e9-8788-8a72a8e1b5f5.JPG)

"
https://api.github.com/repos/OfficeDev/office-js/issues/345,[Office.js] Office.context.mailbox.item.body.getAsync is not working  on Lenovo K5 Note,"I'm facing the same issue with one of my android devices. 
Device Info:
Lenovo K5 Note
Android Version:6.0


I need to use Office.context.mailbox.item.body.getAsync in order to get the content of an email, but the callback is never called. It is working fine in desktop outlook client, webapp and even mobile web browser as well. It is an issue with mobile android outlook client. Is this the bug from Office Js?

_Originally posted by @anilreddyr7 in https://github.com/OfficeDev/office-js/issue_comments#issuecomment-450107384_"
https://api.github.com/repos/OfficeDev/office-js/issues/333,Cannot get messages and contacts from Outlook REST API,"I'm using office-js version: 16.0.10831.10000 on Mac
The problems exist in both Outlook client and browser.

I can query for specific email item:
```js
Office.context.mailbox.getCallbackTokenAsync({isRest: true}, result => {
$http({
method: 'GET',
url: Office.context.mailbox.restUrl + '/v2.0/me/messages/' + restItemId,
headers: {'Authorization': 'Bearer ' + result.value}}).then(function (result) {
...
});
});
```

But when I ty to get a full email collection I get this error:
```js
{
    ""error"": {
        ""code"": ""ErrorAccessDenied"",
        ""message"": ""The api you are trying to access does not support item scoped OAuth.""
    }
}
```

Another issue there is with contacts collection after retrieving token from Office.context.mailbox.getUserIdentityTokenAsync.
```js
{
    ""error"": {
        ""code"": ""InvalidAudience"",
        ""message"": ""The audience claim value is invalid 'https://mydomain.herokuapp.com/#/mailbox'."",
        ""innerError"": {
            ""requestId"": ""792ad1dd-cd5f-47c9-a0d6-01a1e1c297a1"",
            ""date"": ""2018-12-17T14:59:54""
        }
    }
}
```

My manifest has permissions:
```js
<Permissions>ReadWriteMailbox</Permissions>
<Rule xsi:type=""RuleCollection"" Mode=""Or"">
        <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Edit"" />
        <Rule xsi:type=""ItemIs"" ItemType=""Message"" FormType=""Read"" />
</Rule>
```

But after decoding the token in https://jwt.io/ it shows version: ExIdTok.V1
(getCallbackTokenAsync shows Exchange.Callback.V1)

I think there should be V2 because of the mailbox level permissions

It looks like it is the same bug as here:

https://stackoverflow.com/questions/42420073/cant-add-attachment-to-message-in-outlook-add-in-using-outlook-rest-api

"
https://api.github.com/repos/OfficeDev/office-js/issues/326,[Outlook Mobile] Office.context.mailbox.item.body.getAsync is not working on Xiaomi Mi8,"<!--- Provide a general summary of the issue in the Title above -->
I need to use Office.context.mailbox.item.body.getAsync in order to get the content of an email, but the callback is never called. I've tried with several emails, just to ensure the problem is not related to the content. I've never noticed this problem on desktop, iPhone/iPad or different Android devices. 

## Expected Behavior
The callback method I pass as an argument should be executed, as described [here](https://docs.microsoft.com/en-us/javascript/api/office/office.asyncresult?view=office-js)

## Current Behavior
The callback is never called. 

## Steps to Reproduce, or Live Example
It's easy to reproduce. When Office.js is initialized, call the function. As mentioned above, it's working fine on other devices but this one.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Host: Outlook Mobile
* Office version number: 1.1

Device Info:
* Xiaomi Mi 8
* MIUI version: MIUI Global 10.0.3.0
* Android version: 8.1.0

## Useful logs
It's quite difficult to debug, since I cannot easily attach a debugger.  
"
https://api.github.com/repos/OfficeDev/office-js/issues/322,addFileAttachmentAsync Appends Invalid Authorization Header,"## Expected Behavior
`Office.context.mailbox.item.addFileAttachmentAsync` successfully attaches externally hosted files, for example those located on AWS S3.

## Current Behavior

`Office.context.mailbox.item.addFileAttachmentAsync` has started appending an invalid header which S3 rightfully rejects. The header is `Authorization: Bearer`. I have not indicated that this call should be authenticating, also this is an invalid call as there is of course no token provided. 


## Context
We use S3 to facilitate the uploading of attachment files via the Outlook Add-in. This issue is likely to cause issues for other cloud providers or servers as an invalid header is included. We have an in-production application that is broken in the most recent version of Outlook due to this issue. It works properly in older versions.

https://stackoverflow.com/questions/53586742/addfileattachmentasync-appends-invalid-authorization-header

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]:  PC Desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Version 1811 (Build 11029.20079 Click-to-Run)
* Operating System: Windows 10

"
https://api.github.com/repos/OfficeDev/office-js/issues/321,Office.context.mailbox.item get bcc is null bug,"Get the mailbox item recipient bcc is empty.
I have tried reading the source code of office.js and can't find the bcc attribute.

filename: outlook-web-16.01.debug.js
![image](https://user-images.githubusercontent.com/2911670/49422977-c4188680-f7d0-11e8-8543-186901d610cf.png)"
https://api.github.com/repos/OfficeDev/office-js/issues/308,messageParent and sendMessage domain check,"Hi, 

There is rather strange condition in a loop which checks the current 'allowed domains'. i.e.
https://github.com/OfficeDev/office-js/blob/bdcaa766e570a4c91d1889e7dd5d84e9ff88db58/dist/outlook-web-16.01.debug.js#L8201

```
                        for(var i = 0; i < appDomains.length && appDomains[i].indexOf(""://"") !== -1; i++)
                            window.opener.postMessage(message,appDomains[i])
```
So on first occurrence which don't match the condition  'appDomains[i].indexOf(""://"") !== -1' - it will exit the loop. So the message would not be without any logging, etc.

## Expected Behavior
Either log the error about allowed domain not found or just skip the domains which don't have "";//"" 

## Current Behavior
Stops on first item which don't match. 

## Steps to Reproduce, or Live Example
In add-in manifest have, for example:
```
  <AppDomains>
    <AppDomain>AppDomain1</AppDomain>
    <AppDomain>https://localhost:3000</AppDomain>
    <AppDomain>AppDomain3</AppDomain>
  </AppDomains>
```
create a dialog with Dialog api and do a sendParent call. 




"
https://api.github.com/repos/OfficeDev/office-js/issues/303,Cannot redefine context property,"When trying to load Office.js I get the message:
`Kan de niet-configureerbare eigenschap context niet opnieuw definiëren
outlook-win32-16.02.debug.js (646,17)`
Which would translate to something like:
`Cannot redefine non-configurable context property `

## Steps to Reproduce
To give a complete picture. I'm actually hosting an Outlook add-in in Sharepoint Online as an SPFx webpart. When trying the add-in using the Sharepoint online workbench everything is fine. When I publish te webpart on a page I get this message.

So I would think that Office.js conflicts with something on Sharepoint, but I'm unable to find what it is. At first I thought it would be `window.Office.context`, but this doesn't exist until Office.js gets loaded.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: PC
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 16.02
* Operating System: Windows 10
"
https://api.github.com/repos/OfficeDev/office-js/issues/300,mailbox.item.body.getAsync return SCRIPT1014: Invalid character,"I developed outlook addin with this office js. All codes are working until today. Someone has invalid character in mail body and then the office js just fail into error. 

I run in F12 Debugger, and found the error is SCRIPT1014: Invalid character on outlook-win32-16.02.debug.js (7877, 13). 

and my code looks like this,

```
try {
    Office.context.mailbox.item.body.getAsync('text', function (result) {
        if (result.status == Office.AsyncResultStatus.Succeeded) {
            do_something...
        else {
            do_something_else...
        }
} catch (error) {
    catch_Error_handling...
}
```

But the try block is just leaving directly before the error throws to debugger. 

How can i fix it?"
https://api.github.com/repos/OfficeDev/office-js/issues/297,"After create new dialog, it contains event handlers from previous dialog which was closed by dialog.close() call on Mac for outlook","If we creates new dialog window with event handler for it and then close it (call dialog.close()), second created dialog window will contains event handlers from previous dialog. The bug reproduces only in outlook client, mac os.

## Expected Behavior
1. Call Office.context.ui.displayDialogAsync for create new dialog window and set event handler function for this dialog window. 
2. On the dialog window call Office.context.ui.messageParent function and send message. 
3. Parent window handles message and close dialog, calls dialog.close(). 
4. Open new dialog again, call Office.context.ui.displayDialogAsync and set event handler function for this dialog window. 
5. On the dialog window call Office.context.ui.messageParent function
6. Parent window will handle this message **ONCE**.

## Current Behavior
1. Call Office.context.ui.displayDialogAsync for create new dialog window and set event handler function for this dialog window. 
2. On the dialog window call Office.context.ui.messageParent function and send message. 
3. Parent window handles message and close dialog, calls dialog.close(). 
4. Open new dialog again, call Office.context.ui.displayDialogAsync and set event handler function for this dialog window. 
5. On the dialog window call Office.context.ui.messageParent function
6. Parent window will handle this message **TWICE**.
Dialog contains more than one event handlers.

## Steps to Reproduce, or Live Example
I created small outlook plugin for demonstrate this bug. Plugin called 'dialogBug'. [dialogBug link to github](https://github.com/alexnb11/office-js-dialog-handler-bug-mac-os)

* Additional details:
  [Video](https://www.youtube.com/watch?v=O-Xskhwaenw&feature=youtu.be)  which demonstrates this bug via my 'dialogBug' plugin.

## Context
This bug restricts people who use office.js library. Developers can not handle messages from dialog correctly in mac os. As temporary solution, I just create global variable (var mutex) and use it for avoid race condition in my code.
I'm working with outlook plugin for our corporative application. And this bug makes problem for my code.

## Your Environment
* Platform Mac
* Host Outlook client
* Outlook version number: 16.18 (181014)
* Operating System: Mac"
https://api.github.com/repos/OfficeDev/office-js/issues/324,Event not valid in schema using Visual Studio,"Using the &lt;ExtensionPoint xsi:type=""Events""&gt; results in an error:

This is an invalid xsi:type 'http://schemas.microsoft.com/office/mailappversionoverrides/1.1:Events'

The open GitHub item is on the example code, which fails as well:

https://github.com/OfficeDev/Outlook-Add-in-On-Send
"
https://api.github.com/repos/OfficeDev/office-js/issues/274,Saving custom properties and setting category with REST API results in conflicting e-mails,"E-mails are internally changed with new versions when two seperate API's are used inside a single action in the add-in

## Expected Behavior
When using `Office.context.mailbox.item.loadCustomPropertiesAsync` and `saveAsync` along with the [Outlook REST API](https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations) to set a category in the e-mail should never create a new version of the current e-mail (like a conflict or something)

## Current Behavior
We are using code to set custom properties and we use the REST API to add a category to an e-mail message. But since a short period we receive nummerous issues that the processed e-mails no longer contain the labels and have been 'changed' by the system, so there are multiple versions of the e-mail.
We found out this only happens on Outlook 2016 Desktop clients (with Exchange 2016 and Office 365 as backend server). On the web this works fine accross multiple browsers.

## Steps to Reproduce, or Live Example
I posted a question on stackoverflow that contains a reproducable example add-in that will make the current e-mail corrupt: [question on StackOverflow](https://stackoverflow.com/questions/52870810/adding-a-category-and-updating-custom-properties-results-in-a-complely-broken-e)


## Context
We use this in our CRM system and since like a month ago tickets from our clients where filled in that this was happening. There was no code change at our side. At first we couldn't reproduce but now we can, so it probably could lie in an update in Exchange 2016 server or something.

## Your Environment
* Platform : PC Desktop
* Host : Outlook 2016 desktop client (Office 365 and some local Exchange 2016 servers)
* Office version number: 2016
* Operating System: Windows


## Useful logs
We do not have any logs. After the code is finished we see the following message (in Dutch) in the e-mail:

![image](https://user-images.githubusercontent.com/5680394/47152850-25969b80-d2de-11e8-9003-b030db4236aa.png)

"
https://api.github.com/repos/OfficeDev/office-js/issues/331,Can't get mailbox item properties on Android Outlook app,"Is there any different requirements for the Outlook app for Android?

I can retrieve item properties correctly in browser (IE, Chrome) and iOS app, but it doesn't work in the Android app.

The only property working on Android seems to be Office.context.mailbox.item.internetMessageId, the following properties are not retrieved in Android Outlook.

Office.context.mailbox.item.subject
Office.context.mailbox.item.sender.emailAddress
Office.context.mailbox.item.from.emailAddress
Office.context.mailbox.item.body
"
https://api.github.com/repos/OfficeDev/office-js/issues/244,Not able to retrieve location through API when it is filled as free text in calendar event,"When the location field is entered only as a free text and not through the autocomplete options appearing, the value returned through the API Office.context.mailbox.item.Location.getAsync is an empty string and not the corresponding text entered.

## Expected Behavior
The location should be retrievable even when it is entered as free text and not selected through autocomplete fields.

## Current Behavior
Currently, the location is retrieved as blank string if entered as free text.

## Steps to Reproduce, or Live Example
- Create a new calendar event.
- Enter a location. For eg, Boston. Do not select it from the autocomplete. Do not press enter after entering the location. Just click somewhere on the page.
- Try to access it through add-in using the following Office.context.mailbox.item.Location.getAsync

Attaching screenshot depicting the problem.[
![locationvalueentered](https://user-images.githubusercontent.com/43240238/45489747-6e9a8380-b765-11e8-81fd-a865dccdf4dd.PNG)
![valueretrievedasblank](https://user-images.githubusercontent.com/43240238/45489748-6e9a8380-b765-11e8-8479-2e4c60017a02.png)

](url)"
https://api.github.com/repos/OfficeDev/office-js/issues/212,"Office.context.mailbox.displayNewAppointmentForm method opens up a new appointment window but always shows ""Reminder"" as ""None"" even when the default is set to some value on Mac Outlook 2016","## Expected Behavior
<!--- Tell us what you expected to happen -->
I have set the Reminder on Outlook 2016 for Mac Preferences -> Calendar -> Default Reminder (say 15 minutes). In my add-in when I click on a button to open new appointment window using Office.context.mailbox.displayNewAppointmentForm method, the reminder should be shown as 15 minutes. This is working as expected for Outlook for Windows and OWA. Its should also work the same in Mac Outlook 2016.
## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
In Mac Outlook 2016, on clicking the button which calls Office.context.mailbox.displayNewAppointmentForm method opens an appointment window which always shows ""Reminder"" as ""None"".
## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example:
Please add the add-in into your Outlook for Mac from Office Store named ""ConX Scheduler for Outlook"" (Search ""Infocus ConX Scheduler"").
<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. Go to Outlook Preferences->Calendar->Default Reminder->Set some value(say 15 min).
  2. Click on second option ""Schedule ConX Meeting"" in the add-in's dropdown menu.
  3. A new appointment window will open with some values in Subject, Location and Body.
  4. Opened appointment, now showing Reminder to ""None"" whereas reminder set to 15 min.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
There is an inconsistent behaviour between all the Outlook platforms for our add-in. On Windows and OWA, Office.context.mailbox.displayNewAppointmentForm method opens an appointment with Default set ""Reminder"" but for Mac, it always displays ""None"" even if it is set to some value.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: Mac
* Host: Outlook
* Outlook for Mac version number: 16.15 (18070902)
"
https://api.github.com/repos/OfficeDev/office-js/issues/210,Attachments missing on the EWS server for saved draft email,"Hello,
I am using **Office.context.mailbox.item.saveAsync** method for saving a draft email. This method returns **itemId** which I later use to make call to the EWS server to retrieve the email eml content, but the returned eml content is missing some of the attachments.
This is only happening on the Desktop App (Outlook 2013) with cache mode enabled,  when using Outlook on the Web it works correctly.
I am using ews-java-api to retrieve the email from the EWS. https://github.com/OfficeDev/ews-java-api/wiki/Getting-Started-Guide#binding-to-an-existing-item
I can't use the **Office.context.mailbox.item.saveAsync.makeEwsRequestAsync** because of the 1MB response limitation."
https://api.github.com/repos/OfficeDev/office-js/issues/206,Get Selection from mail in Outlook ReadMode,"I would like to get the selected text from the opened email in the Outlook ReadMode add in, but i can't do it with document.getSelection(), because the add in runs inside an iframe. I also can't get the main document because of cross origin problems.
I found the Office.context.mailbox.item.getSelectedDataAsync() function, what would be ideal for me, but it's only available in Compose mode. 
Is there any way to achieve this functionality in ReadMode ?"
https://api.github.com/repos/OfficeDev/office-js/issues/186,Mailbox Item - Add resources operation,"I'm trying to compose an appointment in Outlook using my custom add-in for the calendar. I need to be able to book a room by providing the rooms email and name. Right now I'm setting the location (name of the room) using Office.context.mailbox.item.location.setAsync and the only way I have found to book the room is by setting the room as a required attendee using Office.context.mailbox.item.requiredAttendees.setAsync.

If you would book a room manually without my custom add-in the room will be under the items resources when you do a findItem request.

But when the room is booked as a required attendee it will not be under the items resources.  Is there an ""add resource operation"" that's usable while composing an appointment? Or what operation should I use to actually book a room the correct way?

The add-in is written in Javascript and Vue.js.
"
https://api.github.com/repos/OfficeDev/office-js/issues/182,Forwarded attachment Id is invalid in Outlook Desktop,"My application is getting an access token and a list of attachment Ids (provided by `Office.context.mailbox.item.attachments`), then I send it server side (ASP.NET) to download their contents.
I try to download their contents using the ExchangeService Manage API, but GetAttachments returns an error.

## Expected Behavior
Attachments ids should be valid on a forwarded email.

## Current Behavior
A ""Invalid attachment id"" error occurs when attempting to fetch the attachment with the Exchange API.

## Steps to Reproduce

With a manifest override for MessageRead of outlook (With functionfile or taskpane to access the `Office.context`):

Follow this [tutorial](https://docs.microsoft.com/en-us/outlook/add-ins/get-attachments-of-an-outlook-item) from Microsoft.

Note that the [`Microsoft.Exchange.WebServices`](https://www.nuget.org/packages/Microsoft.Exchange.WebServices/) v.2.2.0 nuget package published by Microsoft was last updated 01/15/2015 and doesn't work with the tutorial.
I used [`Exchange.WebServices.Managed.Api`](https://www.nuget.org/packages/Exchange.WebServices.Managed.Api/) v2.2.1.1 nuget package which is maintained.

* Additional details:
1. I found a related issue on [stackoverflow](https://stackoverflow.com/questions/35453604/cant-get-attachments-from-ews-for-fowarded-emails-in-an-outlook-addin-in-the-de).
2. Using the exact same setup, with the same email and attachments, but with Outlook online, successfully downloads their contents. So Outlook Online Ids provided by the `Office.context` are valid.

## Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: Office Click-to-Run Version 1705 (8201.2209)
* Operating System: Windows 10"
https://api.github.com/repos/OfficeDev/office-js/issues/174,Outlook 365 bug? sent-item message details shows nothing,"I think this is a bug, or otherwise very confusing.
If you right-click a message in your `sent-items` folder:

![screen shot 2018-06-25 at 10 58 07](https://user-images.githubusercontent.com/225784/41841195-f4baa93c-7867-11e8-9295-b58ba2a084d6.png)

then open `message details`, you get an empty dialog without any info:

![screen shot 2018-06-25 at 10 56 42](https://user-images.githubusercontent.com/225784/41841099-aec6f2fa-7867-11e8-94f2-4409a56d1506.png)

It is unclear whether this is intended: 
- that we should actually be able to also see things like set headers and other outbound mail info, or
- that this info indeed is not available for sent-items. 

In that last case, multiple UX pattern exists to inform the user of unavailability, by:
- removing the item entirely (confusing)
- graying out the option (less confusing)
- putting text in the dialog stating unavailability (might be best here)"
https://api.github.com/repos/OfficeDev/office-js/issues/156,Error 5001 with multiple event handlers on Office.EventType.ItemChanged in Outlook,"## Expected Behavior
in the documentation for addHandlerAsync it is stated, that as long as the handler names differ, you can add as many handlers as you want.

```
function myhandler(test){
    console.log('first');    
}
function my2handler(test){
    console.log('second');
}
function myCallback (res) {
    console.log(res);
}
Office.initialize = reason => {
        launch();
        Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, myhandler, [], myCallback);
        Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, my2handler, [], myCallback);
    };
```
## Current Behavior
the first handler is ok and works like expected.
for the second Handler the callback function outputs 
```
OSF.DDA.AsyncResult {value: undefined, status: ""failed"", error: OSF.DDA.Error}
    error: OSF.DDA.Error
        code: 5001
        message: ""Ein interner Fehler ist aufgetreten.""
        name: ""Interner Fehler""
    status: ""failed""
    value: undefined
```
## Context
I was actually trying to create a rxjs observable from this event with Rx.observable.fromEventPattern. Unfortunately with every subscription a new event gets added for every subscription. I will now try to use the share operator.

## Environment
this happens in Office365 Online in Chrome and Firefox on Windows. Outlook Client not tested due to missing console."
https://api.github.com/repos/OfficeDev/office-js/issues/140,Does the token from getCallbackTokenAsync also work for the Microsoft Graph API?,"I'm experiencing 401 Authorisation errors when I pass on the token I retrieved from `Office.context.mailbox.getCallbackTokenAsync()`

Looking at your documentation it says it's for REST and Microsoft Exchange. So that doesn't say it's a token for Microsoft Graph API as well. Can you confirm here and probably improve documentation on this?

Thanks"
https://api.github.com/repos/OfficeDev/office-js/issues/135,Office.context.mailbox.getCallbackTokenAsync never fires callback,"In my app the callback of that code is never fired:

```js
Office.context.mailbox.getCallbackTokenAsync({isRest: true}, function(result) {
  console.log('never arrives here, why?')
})
```

I do not see any errors in the console when testing locally. Just nothing. While debugging deep in your code, it seems that after `postMessage` nothing happens.

What could this be? Possible reasons? The parent frame, which is outlook.office.com, seems to be receiving the message from localhost but isn't responding.

Thanks for any clues"
https://api.github.com/repos/OfficeDev/office-js/issues/125,Uncaught Error: Sys.ArgumentNullException: Value cannot be null.,"Parameter name: conversationId

looks like a new bug. Conversation ID parameter is null :/

here the whole stack trace

```
outlook-web-16.01.debug.js:5756 Uncaught Error: Sys.ArgumentNullException: Value cannot be null.
Parameter name: conversationId
    at Function.Error.create (MicrosoftAjax.js:5)
    at Function.Error.argumentNull (MicrosoftAjax.js:5)
    at Function._validateParameterType (MicrosoftAjax.js:5)
    at Function._validateParameter (MicrosoftAjax.js:5)
    at Function._validateParams (MicrosoftAjax.js:5)
    at new Microsoft_Office_Common_ClientEndPoint (outlook-web-16.01.debug.js:4514)
    at Object.Microsoft_Office_Common_XdmCommunicationManager$connect [as connect] (outlook-web-16.01.debug.js:4981)
    at OSF_InitializationHelper$setAgaveHostCommunication [as setAgaveHostCommunication] (outlook-web-16.01.debug.js:5707)
    at OSF__OfficeAppFactory_initialize$onAppCodeAndMSAjaxReady (office.debug.js:1450)
    at validateFunction (office.debug.js:272)
```"
https://api.github.com/repos/OfficeDev/office-js/issues/124,Sideloading Issue with OfficeJS Outlook Add-in on iOS,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- Tell us what you expected to happen -->
[According to the documentation](https://docs.microsoft.com/en-us/office/dev/add-ins/overview/office-add-in-availability#outlook), requirement set **Mailbox 1.5** is supported on Office for iOS. I expect that, [by adding mobile support on the manifest](https://docs.microsoft.com/en-us/outlook/add-ins/add-mobile-support), I can sideload my add-in and have it appear on my iOS device.

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
My add-in does not appear on my iOS device (an iPhone 6s with iOS 11.0.3 installed). If I downgrade to requirement set **Mailbox 1.4**, then the sideloaded add-in appears, but I do not want to do this.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: https://stackoverflow.com/questions/49789438/sideloading-issue-with-officejs-outlook-add-in-on-ios

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
I want to target **only the following platforms**:
  1. Outlook 2016 or later
  2. Outlook on the Web
  3. Outlook 2016 for Mac
  4. Outlook for iOS
  5. Outlook for Android

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I currently have a few add-ins using requirement set Mailbox 1.5 up on the Office Store. I have been waiting for Office for iOS and Office for Android to support Mailbox 1.5, so that all I would need to do is to [add mobile support on the manifest](https://docs.microsoft.com/en-us/outlook/add-ins/add-mobile-support), and then I could test my add-in on these new platforms.

However, doing this has proven incredibly difficult and I have been trying to get some help from Microsoft regarding this issue for close to a whole month now. So far, I have tried contacting Microsoft via:

- [StackOverflow](https://stackoverflow.com/questions/49789438/sideloading-issue-with-officejs-outlook-add-in-on-ios)
- Github (this issue and [one on the Docs repo](https://github.com/OfficeDev/office-js-docs/issues/1415))
- Microsoft Support online
- The Support option on the Outlook for iOS app




## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform: iOS
* Host: Outlook
* Office version number: 2.76.0
* Operating System: iOS 11.0.3 on an iPhone 6s
* Browser (if using Office Online): N/A

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
None. I get nothing. The add-in simply does not appear on my iOS device.
"
https://api.github.com/repos/OfficeDev/office-js/issues/118,OWA OnSend functionality varies depending on command button/dialogs being opened,"
## Expected Behavior
OnSend event fires a JavaScript function when messages are sent when using a compose mode Mail Add-in that has an OnSend event.

## Current Behavior
We have a compose mode Mail Add-in that has an OnSend event and command button that opens a dialog using Dialog API.

Using OWA in Office 365 with the Add-in enabled and composing a new message:

If the command button is not pressed before the message is sent then the OnSend event fires when the message is sent.

If the command button is pressed our dialog is opened. Closing the dialog and then sending the message results in the OnSend event not firing. The UI tells the user that our Add-in has blocked the message, but our HTML file that loads the JavaScript script for the OnSend never gets loaded and the function in the JavaScript never gets called. It appears that OWA is never even trying to load our HTML and JavaScript. Pressing the send button a second time does fire our OnSend event.

Why would opening a dialog through a command button effect the functionality of the OnSend event?

## Steps to Reproduce, or Live Example
See Current Behaviour above.


## Context
The OnSend event should always fire when messages are sent. It is not.

## Your Environment
OWA in Office 365.

## Useful logs
There are none as the files required for the OnSend event are not being loaded.
"
https://api.github.com/repos/OfficeDev/office-js/issues/117,displayNewAppointmentForm fails on Outlook for Mac when body contains more than 255 characters,"I am developing an Outlook for Mac Add-in using Office.js. I am using `Office.context.mailbox.displayNewAppointmentForm()` to open an Appointment window programmatically:

``` js
Office.context.mailbox.displayNewAppointmentForm(
{
  location: '{Location}',
  subject: '{subject}',
  body: '{some large text}'
});
```

If the body text is 255 characters or less, then the appointment window gets opened with the pre-populated body, subject, and location. But if the body text exceeds that size, no appointment window is opened.

I know that there is a limit of 32KB for the appointment form's body but my text is not more than that. (I have confirmed it on a character to KB converter).

If I add a `subject` and the text exceeds more than 255 characters (specified in API documentation), it gives an exception. 

For the `body` it gives no exception with more than 255 characters but does not open new Appointment window.

I am also sharing a link to a [demo project](https://drive.google.com/file/d/1NoWfxd8p3kYQ1AkRXtE0DS4NmyN4PmiY/view?usp=sharing). It works on Outlook for Web and Outlook for Windows but failed Outlook for Mac."
https://api.github.com/repos/OfficeDev/office-js/issues/115,completing OnSend seems borked since May update: it May not send and close add-in on certain platforms/browsers,"<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
OnSend actually sends the email and closes add-in. 

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->
nothing.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
- can not provide a live example.
<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->
- can not create script lab as this relates to Outlook, not Word Excel Powerpoint etc.

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. compose a message (recipient, subject, body)
  2. press send with having an OnSend function triggering
  3. make the OnSend function complete with {allowEvent : true }
  4. should fail ?

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Platform [PC desktop, Mac, iOS, Office Online]: Mac
* Host [Excel, Word, PowerPoint, etc.]: Outlook Web App
* Office version number:  N.A.
* Operating System: Mac OSX 10.12.6

* Browser (if using Office Online): 
OSX/Chrome: **fails**
OSX/Firefox: succeeds
WIN/Firefox: **fails**
OSX/Safari: **fails**

## Useful logs
<!--- Please include any of the following logs that may help us debugging your issue -->
- [ ] Console errors
none
- [ ] Screenshots
I could make a screenshot but it would show nothing. just a `console.log()` statement júst before calling `this.onSendEvent.completed({ allowEvent: true }); // sends + closes OWA draft`.
- [ ] Test file (if only happens on a particular file)
"
https://api.github.com/repos/OfficeDev/office-js/issues/94,Potential issue with missing Outlook attachments,"Reported on Stack Overflow:  [Missing attachment from Outlook JS Api](https://stackoverflow.com/questions/49860461/missing-attachment-from-outlook-js-api)

It looks like Office.js is not returning certain attachments, specifically `.msi` files (although I expect this would include any ""executable""  file type). While this makes sense from a safety and security standpoint, the API shouldn't actively mask the existence of any attachment.  

Ideally, the [`AttachmentDetails`](https://dev.office.com/reference/add-ins/outlook/1.5/simple-types.htm#attachmentdetails) object should include a flag if an attachment is blocked for some reason."
https://api.github.com/repos/OfficeDev/office-js/issues/81,event type for global event for functions file for typescript,"<!--- Provide a general summary of the issue in the Title above -->
There doesn't seem to be a typing for function file's global `Event` that has the `completed` method. Here's the object: https://github.com/OfficeDev/office-js-docs/blob/master/reference/shared/event.completed.md

```
function doSomething(e: ???) {
    e.completed();
}
```

## Expected Behavior
That I would be able to give `e` a type for TypeScript.

## Current Behavior
I'm not sure what to give typescript.

## Steps to Reproduce, or Live Example
<!--- Ideally, provide a link to a live example, created and shared using -->
<!--- [Script Lab](https://aka.ms/script-lab). If relevant, create two buttons, -->
<!--- one that sets up data in the document, and another that exemplifies the issue. -->
* Link to live example: ______

<!--- If not possible, or if the snippet requires extra explanation, provide repro steps below: -->
* Additional details:
  1. ______
  2. ______
  3. ______

## Context
It would be great if I could keep this event in typescript land other than using `any`.

## Your Environment
N/A.
"
https://api.github.com/repos/OfficeDev/office-js/issues/75,Outlook API 1.3 version not showing on Outlook Desktop Professional Plus 2016,"Hello
On this page https://github.com/OfficeDev/office-js-docs/blob/master/reference/outlook/tutorial-api-requirement-sets.md it is specified that both Outlook 2016 (MSI) for Windows and Outlook 2013 for Windows support Outlook API up to Version 1.4, but when we try to increase the minimal version in the manifest from 1.1 to 1.3, the addin works fine on web but does not show on both desktop versions. 

Currently I am working on Outlook Professional Plus 2016 with build number 16.0.4312.100, 64bit on Windows 10.

I am trying a simple addin generated by yeoman office-generator, with only change is the minimal version from 1.1 to 1.3

Thanks."
https://api.github.com/repos/OfficeDev/office-js/issues/49,Office.context.mailbox.item.internetMessageId is empty,"## Current Behavior
When sending emails from Windows 7 Outlook 2013 and opening in the same Outlook the ""Office.context.mailbox.item.internetMessageId"" is empty.

When sending emails from Outlook Online and opening in Outlook 2013 on the same PC it is OK.
When sending emails from Outlook 2013 and opening in Outlook Online on the same PC it is OK.
When sending emails from any other outlook and opening in Windows 7 Outlook 2013 it is OK.
When sending emails from Windows 7 Outlook 2013 and opening in any other Outlook it is OK.

## Steps to Reproduce, or Live Example
Send email form Outlook 2013, Windows 7 and open it on the same Outlook version.
Validate field: Office.context.mailbox.item.internetMessageId

## Your Environment
* Platform [PC desktop, Mac, iOS, Office Online]: PC desktop
* Host [Excel, Word, PowerPoint, etc.]: Outlook
* Office version number: 2013
* Operating System: Windows 7

## Screenshot
![screen shot 2018-01-14 at 17 43 31](https://user-images.githubusercontent.com/29097494/34917687-7d9383ea-f952-11e7-85a8-bbdce8ea78c9.png)
"
https://api.github.com/repos/OfficeDev/office-js/issues/3,Office Add-in JavaScript FileDownload not working with MAC,"FileSaver library not work office add-ins with mac.

Expected Behavior
It should allow to us download file from word office add-ins on mac using filesaver javascript library , same as we can do with safari browser(version 10.1) with same code.

Current Behavior
We can't download file from word office add-ins on mac. it is getting error with open application dialog as in screen shot.
![stackoverflowfiledownloadissue](https://user-images.githubusercontent.com/25382986/27943347-f3a838a2-62fb-11e7-8872-4d75b27e19ec.png)


Steps to Reproduce, or Live Example
1. Create word office add-ins
2. Create html button to invoke download file.
3. Create API with return content data 
4. Call API in word office add-ins with XMLHttpRequest()
5. Install FileSaver.JS using NPM command or insert manually.
    npm install file-saver --save
    bower install file-saver
Additionally, typscript definitions can be installed via:
    npm install @types/file-saver --save-dev

6. Construct your content in Blob Type same as following
var blob = new Blob([oReq.response], { type: ""application/octet-binary"" });	

6. Use SaveAs method for FileSaver.js as following
saveAs(blob, 'Test1234.docx');

`var getMessageUrl = ""https://test.xxx.xxx/api/xxx/testcontroller/GetTest?id=121212121212"";
			
			var oReq = new XMLHttpRequest();

			
			oReq.open(""GET"", getMessageUrl, true);
			oReq.responseType = ""arraybuffer"";
			oReq.setRequestHeader('X_ConnectTo', 'X-Author-CRM');
			oReq.setRequestHeader('Access-Control-Allow-Origin', '*');
			oReq.setRequestHeader('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS');
			oReq.setRequestHeader('Access-Control-Allow-Headers', 'Authorization, Content-Type,Accept, Origin');
			oReq.setRequestHeader('Authorization', 'Bearer XXXXXXXXX-Token-XXXXXXX');
			oReq.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
			oReq.onload = function (oEvent) {
				var blob = new Blob([oReq.response], { type: ""application/octet-binary"" });	
				saveAs(blob, 'Test1234.docx');
			};

			oReq.send();`
Context
This is really important for us to deliverable this to our customer. we can't use document.createElement('a') for download file , as we already have this implementation in our current code but for security reason, we must removed this document.createElement('a'); from current code and use with filesaver javascript library approach but now , we are block with this issue. 

Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
OS - X EI Capitan (Version 10.11.6)
Office version :15.32
Safari version : 10.1.1

Useful logs
Refer my link for more details
https://stackoverflow.com/questions/44922159/office-add-in-javascript-filedownload-not-working-with-mac"